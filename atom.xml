<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://ei4869.github.io/miyano</id>
    <title>自分の為に楽しめ世界</title>
    <subtitle></subtitle>
    <icon>https://ei4869.github.io/miyano/assets/favicon.ico</icon>
    <link href="https://ei4869.github.io/miyano" />
    <author>
      <name>Rei</name>
    </author>
    <updated>2025-04-07T09:36:00.000Z</updated>
    <entry>
        <id>https://ei4869.github.io/miyano/Course-Study/Japanese/%E5%88%9D%E7%BA%A7%E4%B8%8B-%E7%AC%AC8%E5%8D%95%E5%85%83/</id>
        <title>单元八——余暇</title>
        <link rel="alternate" href="https://ei4869.github.io/miyano/Course-Study/Japanese/%E5%88%9D%E7%BA%A7%E4%B8%8B-%E7%AC%AC8%E5%8D%95%E5%85%83/"/>
        <content type="html">&lt;h1 id=&#34;第二十九课電気でんきを消けせ&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第二十九课電気でんきを消けせ&#34;&gt;#&lt;/a&gt; 第二十九课：&lt;ruby&gt;電気&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;でんき&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を&lt;ruby&gt;消&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;け&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; せ&lt;/h1&gt;
&lt;h2 id=&#34;语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;动词的命令形&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动词的命令形&#34;&gt;#&lt;/a&gt; 动词的命令形&lt;/h3&gt;
&lt;p&gt;命令形是说话人对听话人下命令时使用的表达形式。&lt;br /&gt;
一类动词：基本形的う段变え段。&lt;br /&gt;
二类动词：基本形的る变ろ。&lt;br /&gt;
三类动词：&lt;ruby&gt;来&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;く&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; る变&lt;ruby&gt;来&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;こ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; い，する变しろ。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类别&lt;/th&gt;
&lt;th&gt;基本形 → 命令形&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;一类动词&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;書&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;か&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; く&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → かけ&lt;br&gt;&lt;ruby&gt;急&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;いそ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; ぐ&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → いそげ&lt;br&gt;&lt;ruby&gt;飛&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;と&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; ぶ&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → とべ&lt;br&gt;&lt;ruby&gt;読&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;よ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; む&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → よめ&lt;br&gt;&lt;ruby&gt;死&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;し&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; ぬ&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → しね&lt;br&gt;&lt;ruby&gt;待&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ま&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; つ&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → まて&lt;br&gt;&lt;ruby&gt;売&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;う&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; る&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → うれ&lt;br&gt;&lt;ruby&gt;買&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;か&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; う&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → かえ&lt;br&gt;&lt;ruby&gt;話&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はな&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; す&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → はなせ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;二类动词&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;食&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;た&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; べる&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → たべろ&lt;br&gt;&lt;ruby&gt;見&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;み&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; る&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → みろ&lt;br&gt;&lt;ruby&gt;寝&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ね&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; る&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → ねろ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;三类动词&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;来&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;く&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; る&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → こい&lt;br&gt;&lt;ruby&gt;する&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → しろ&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;eg:&lt;ruby&gt; 書類&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しょるい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を早く　&lt;ruby&gt;提出&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ていしゅつ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; しろ。   快交文件！&lt;/p&gt;
&lt;h3 id=&#34;动-なさい&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动-なさい&#34;&gt;#&lt;/a&gt; [动]　なさい&lt;/h3&gt;
&lt;p&gt;比命令形客气一些，多用于老师对学生或父母对孩子提出要求。构成为：动词ます形去掉ます加 “なさい”。（ます形去掉ます也叫动词的连用形。）&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ます形&lt;/th&gt;
&lt;th&gt;～なさい&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;書きます&lt;/td&gt;
&lt;td&gt;書きなさい&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;急ぎます&lt;/td&gt;
&lt;td&gt;急ぎなさい&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;見ます&lt;/td&gt;
&lt;td&gt;見なさい&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;来ます&lt;/td&gt;
&lt;td&gt;来なさい&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;します&lt;/td&gt;
&lt;td&gt;しなさい&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;eg: 質問に　答え　なさい。   回答问题！&lt;/p&gt;
&lt;h3 id=&#34;动基本形-な-禁止&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动基本形-な-禁止&#34;&gt;#&lt;/a&gt; [动 (基本形)] な     [禁止]&lt;/h3&gt;
&lt;p&gt;用于禁止听话人做某事。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;基本形&lt;/th&gt;
&lt;th&gt;禁止&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;書く&lt;/td&gt;
&lt;td&gt;書くな&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;急ぐ&lt;/td&gt;
&lt;td&gt;急ぐな&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;見る&lt;/td&gt;
&lt;td&gt;見るな&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;来る&lt;/td&gt;
&lt;td&gt;来るな&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;する&lt;/td&gt;
&lt;td&gt;するな&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;eg：タバコを　吸う　な。    不要吸烟！&lt;/p&gt;
&lt;h3 id=&#34;动-て-动-ないで&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动-て-动-ないで&#34;&gt;#&lt;/a&gt; [动] て　/ [动] ないで&lt;/h3&gt;
&lt;p&gt;“动词て形” 和 “动词ない形 + で” 是日常生活中经常使用的表示祈使的说法，但一般用于关系亲密的人之间。&lt;/p&gt;
&lt;p&gt;もうちょっと　急いで。  再稍微快一点。&lt;br /&gt;
&lt;ruby&gt;遠慮&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;えんりょ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; し　ないで。 别客气！&lt;/p&gt;
&lt;p&gt;辨析：命令形、～なさい、～な 和 ～て /～ないで 相比，前三者一般限于上下、尊卑关系非常明确的非正式场合，不过紧急情况下对上级或尊长也可以说 “&lt;ruby&gt;逃&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;に&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; げろ（快逃）”。另外，虽然是在紧急情况下，但要求对方救助、帮助自己时也不能用命令形而用 “动词て形”，比如 “&lt;ruby&gt;助&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;たす&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; けて（救命）”。&lt;/p&gt;
&lt;h3 id=&#34;名1-という-名2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名1-という-名2&#34;&gt;#&lt;/a&gt; [名 1] + という + [名 2]&lt;/h3&gt;
&lt;p&gt;提供对方不知道的新信息的时候，在表示新信息的词语后要加 “という”。&lt;/p&gt;
&lt;p&gt;それは　フジ　という　花　です。    那是一种叫 “紫藤” 的话。  （花名是听话人不知道的新信息）&lt;/p&gt;
&lt;p&gt;私は東京の　&lt;ruby&gt;世田谷&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;せたがや&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　という　所ところ　に&lt;ruby&gt;住&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;す&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; んでいます。  我住在东京应该叫 “世田谷” 的地方。（地名是听话人不知道的新信息）&lt;/p&gt;
&lt;p&gt;田中　という　名前　は日本人の名前です。    “田中” 这个姓是日本人的姓。  （人名是听话人不知道的新信息）&lt;/p&gt;
&lt;h3 id=&#34;名1は-名小句-という-名2-です&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名1は-名小句-という-名2-です&#34;&gt;#&lt;/a&gt; [名 1] は　[名]/[小句] + という + [名 2]　です&lt;/h3&gt;
&lt;p&gt;“～という” 也可以用于给 “名 1” 下定义或对 “名 1” 做解释。这时 “名 2” 多为 “&lt;ruby&gt;意味&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;いみ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;（意思）” 等词语。这里的小句可以是 “命令形”“简体形”“简体形 + な”。&lt;/p&gt;
&lt;p&gt;このマークは　タバコを吸うな　という　意味です。    这个符号是 “禁止吸烟” 的意思。&lt;br /&gt;
この&lt;ruby&gt;標識&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ひょうしき&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　&lt;ruby&gt;駐車禁止&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ちゅうしゃきんし&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　という　意味です。    这个标识是 “禁止停车” 的意思。&lt;/p&gt;
&lt;h2 id=&#34;表达&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;命令形、禁止形的用法&lt;br /&gt;
命令形、禁止形应用场景&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;用于男性为主的工作单位的上司对不下，长辈对晚辈以及同辈之间：おい，早く&lt;ruby&gt;片&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; づけろ。   哎，早点收拾！&lt;/li&gt;
&lt;li&gt;用于关系亲密的男性朋友之间：さあ，もっと飲めよ。  来吧，多喝点。&lt;/li&gt;
&lt;li&gt;但如果年龄相差悬殊，即使是关系比较亲密的男性朋友，也不应对年长者使用。&lt;/li&gt;
&lt;li&gt;用于紧急场合：&lt;ruby&gt;危&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あぶ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ない！&lt;ruby&gt;止&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;と&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; まれ！    危险，停住！&lt;/li&gt;
&lt;li&gt;用于观看比赛，这种场合女性有时也使用：頑張れ！    加油！&lt;/li&gt;
&lt;li&gt;用于直接引用含有委托、要求等祈使意义的话语或用于解释词语。这种场合，男性、女性都可以使用：課長は「書類を早く提出しろ」と言いました。  科长说了 “快交文件”。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;“～ないといけません” 的省略形式&lt;br /&gt;
省略为 “～ないと”；&lt;br /&gt;
另外，“～なければなりません” 也可以省略为 “～なければ”。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;この　場合ばあいは　「歌ってください」　と言わないとね。    这种场合要说 “歌ってください”。&lt;br /&gt;
時間がないから，急がないと…。   没时间了，不快一点就...&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;～&lt;ruby&gt;方&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; をする&lt;br /&gt;
第 22 课学习了 “动词 +&lt;ruby&gt; 方&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;” 表示动作方式的用法，描述用这种方式进行动作时，可用 “～&lt;ruby&gt;方&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;+ をします” 的形式。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;そんな&lt;ruby&gt;乱暴&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;らんぼう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; な&lt;mark&gt;言い方をしないで&lt;/mark&gt;ください。  别用那样粗暴的说法。 (&amp;quot;言い方をします&amp;quot; 不涉及说的内容，而指说的方法，“怎么说的”)。&lt;/p&gt;
&lt;h1 id=&#34;第三十课もう11時だから寝よう&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第三十课もう11時だから寝よう&#34;&gt;#&lt;/a&gt; 第三十课：もう 11 時だから寝よう&lt;/h1&gt;
&lt;h2 id=&#34;语法-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法-2&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;动词的意志形&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动词的意志形&#34;&gt;#&lt;/a&gt; 动词的意志形&lt;/h3&gt;
&lt;p&gt;动词的意志形是说话人当场表示自己的决心、意志的表达形式。变形为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一类动词：基本形的う段变お段的长音（おう）&lt;/li&gt;
&lt;li&gt;二类动词：基本形的る变よう&lt;/li&gt;
&lt;li&gt;三类动词：&lt;ruby&gt;来&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;く&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; る变&lt;ruby&gt;来&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;こ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; よう，する变しよう&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类别&lt;/th&gt;
&lt;th&gt;基本形 → 意志形&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;一类动词&lt;/td&gt;
&lt;td&gt;書く → かこう&lt;br&gt;急ぐ → いそごう&lt;br&gt;飛ぶ → とぼう&lt;br&gt;読む → よもう&lt;br&gt;死ぬ → しのう&lt;br&gt;待つ → まとう&lt;br&gt;売る → うろう&lt;br&gt;買う → かおう&lt;br&gt;話す → はなそう&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;二类动词&lt;/td&gt;
&lt;td&gt;食べる → たべよう&lt;br&gt;見る → みよう&lt;br&gt;寝る → ねよう&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;三类动词&lt;/td&gt;
&lt;td&gt;来る → こよう&lt;br&gt;する → しよう&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;动词的意志形实际是 17 课学的 “～ましょう” 的简体形，因此除了表示意志外，还可表示提议。&lt;/p&gt;
&lt;p&gt;仕事が終わってから，飲みに　行こうよ。  工作结束后去喝酒吧。&lt;/p&gt;
&lt;h3 id=&#34;动意志形-と思います&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动意志形-と思います&#34;&gt;#&lt;/a&gt; [动 (意志形)] と思います&lt;/h3&gt;
&lt;p&gt;说话人向听话人表示自己要做某事的意志时使用。比单纯用 “意志形” 表达说话时的意志更加礼貌、温和。&lt;/p&gt;
&lt;p&gt;今日，会社を　休もう　と思います。     我今天不想上班。&lt;/p&gt;
&lt;h3 id=&#34;动意志形-と思っています&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动意志形-と思っています&#34;&gt;#&lt;/a&gt; [动 (意志形)] と思っています&lt;/h3&gt;
&lt;p&gt;表示自己已把某种意志持续了一段实际时使用。（某种意志，但还没下定决心）&lt;/p&gt;
&lt;p&gt;明日病院へ　行こう　と思っています。    明天我想去医院。&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;“意志形” “～ようと思います”　“～ようと思っています” 区别：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;表示当场形成的意志时使用 “意志形” 而不能使用另两个。&lt;/li&gt;
&lt;li&gt;“～ようと思います”　“～ようと思っています” 都表示决心或意志，但由于后者用 “～ています” 的形式，有一种决心或意志尚未最后形成的语感。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h3 id=&#34;小句1ので小句2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小句1ので小句2&#34;&gt;#&lt;/a&gt; [小句 1] ので，[小句 2]&lt;/h3&gt;
&lt;p&gt;“～ので” 表示原因、理由，既可以接在简体形后，也可以放在敬体形后，但接简体形较多。&lt;br /&gt;
小句 1 为:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;形 1、动词简体形 + ので（から）&lt;/li&gt;
&lt;li&gt;形 2、名词 + なので（だから）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;ruby&gt;荷物&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;にもつ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; が&lt;ruby&gt;重&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おも&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; いので，&lt;ruby&gt;宅配便&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;たくはいびん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; で&lt;ruby&gt;送&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ります。    行李很重，所以用送货上门的方式送达。&lt;br /&gt;
&lt;ruby&gt;香港&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ほんこん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; からお客さんが来るので，&lt;ruby&gt;空港&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;くうこう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; へ&lt;ruby&gt;迎&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;むか&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; えに行きます。 有客户从香港来，我要去机场迎接。&lt;br /&gt;
ここは静かなので，とても&lt;ruby&gt;気&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;き&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; に&lt;ruby&gt;入&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;い&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; っています。    这里很安静，我非常喜欢。&lt;br /&gt;
もう&lt;ruby&gt;終電&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しゅうでん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; の時間なので，帰ります。   已经是末班电车的时间了，我回去了。&lt;/p&gt;
&lt;p&gt;注：“～ので” 和 “～から” 相比，更为礼貌郑重，多用于正式场合。“～ので” 口语中常发成 “～んで”。&lt;/p&gt;
&lt;p&gt;小句 2 表示提议时，必须使用 “～から”。&lt;/p&gt;
&lt;p&gt;電車が&lt;ruby&gt;遅&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; れたんで，&lt;ruby&gt;遅刻&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ちこく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; しました。すみません。    电车晚点我迟到了，对不起。&lt;br /&gt;
電車が&lt;ruby&gt;遅&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; れたから，&lt;ruby&gt;遅刻&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ちこく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; しました。すみません。    [申述理由的感觉强烈]&lt;br /&gt;
 もう時間がないから，早く行こうよ。  已经没有时间了，快走吧。    （表示提议，不能用ので）&lt;/p&gt;
&lt;h2 id=&#34;表达-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达-2&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;そろそろ&lt;br /&gt;
用于做某事或某事态发生的时间渐渐迫近时。&lt;br /&gt;
そろそろ食事の時間ですよ。  快到进餐的时间了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;去别人家里做客，发觉该到回家的时间时一般要说 “そろそろ&lt;ruby&gt;失礼&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しつれい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; します（我该告辞了。）”&lt;/p&gt;
&lt;p&gt;另外，使用 “そろそろ＋～ましょうか” 或 “そろそろ＋意志形＋か” 的形式，表示随着时间的迫近该一起做某事，是提醒或催促对方和自己行动的一种说法。&lt;br /&gt;
そろそろ&lt;ruby&gt;出発&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しゅっぱつ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; しようか。 准备出发吧。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;それじゃ&lt;br /&gt;
是 “それでは（那么）” 的比较随便的说法，用于口语。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;まあ&lt;br /&gt;
表示不十分理想，但还能过得去的程度，用于调控自己或对方的不满情绪。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自言自语的な&lt;br /&gt;
自言自语时，可在简体形后续接 “な” 表示感叹。拖长音 “なあ” 表示较强烈的感叹。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;楽&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;たの&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; しみです&lt;br /&gt;
意思同 “楽しみにしています”，表示盼望、期待的心情。在表示 “请你愉快地期待着” 的意思时，用 “楽しみにしていてください”。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;另外，指感到 “愉悦” 的事物、兴趣或娱乐等时，也可以说 “楽しみです”。&lt;br /&gt;
&lt;ruby&gt;時&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ときどき&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;々&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;ruby&gt;孫&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;まご&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; に会うのが，父の楽しみです。    时不时见见孙子是父亲的乐趣。&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;行楽地&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;こうらくち&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;br /&gt;
 众人去游览的名胜古迹，设有旅游设施以及娱乐设施的场所。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;～でいっぱい&lt;br /&gt;
表示某个场所或某个容器已达饱和状态，不可能再容纳更多的人或物。&lt;br /&gt;
この季節は，どの行楽地も人でいっぱいですよ。    这个季节，任何一个景点都是游客爆满。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第三十一课このボタンを押おすと電源でんげんが入はいります&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第三十一课このボタンを押おすと電源でんげんが入はいります&#34;&gt;#&lt;/a&gt; 第三十一课：このボタンを&lt;ruby&gt;押&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;お&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; すと，&lt;ruby&gt;電源&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;でんげん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; が&lt;ruby&gt;入&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ります&lt;/h1&gt;
&lt;h2 id=&#34;语法-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法-3&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;小句1动词基本形ない形と小句2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小句1动词基本形ない形と小句2&#34;&gt;#&lt;/a&gt; 小句 1（动词基本形 / ない形）と，小句 2&lt;/h3&gt;
&lt;p&gt;“～と” 用在表述恒常性状态、真理、反复性状态、习惯等内容的复句里，表述 “小句 1” 是 “小句 2” 的条件。&lt;/p&gt;
&lt;p&gt;このボタンを&lt;ruby&gt;押&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;お&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; すと，&lt;ruby&gt;電源&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;でんげん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; が&lt;ruby&gt;入&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ります。  按下这个按钮，电源就接通了。   [恒常性状态]&lt;/p&gt;
&lt;p&gt;食べ物を食べないと，&lt;ruby&gt;人間&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;にんげん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は&lt;ruby&gt;生&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;い&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; きることができません。  不吃食物，人就没法活。  [真理]&lt;/p&gt;
&lt;p&gt;私は，その店へ行くと，いつもコーヒーを飲みます。    我去那个店的时候总要喝咖啡。    [反复的状态]&lt;/p&gt;
&lt;p&gt;另外，“～と” 还可表示由于某种行为而发现了新的情况。&lt;/p&gt;
&lt;p&gt;この道をまっすぐ行くと，デパートがあります。    沿着这条路一直走，有一家百货商店。&lt;/p&gt;
&lt;p&gt;用 “～と” 的复句，小句 2 不能是自己的意志、愿望或向听话人提出要求、提议等内容。&lt;br /&gt;
夜になると，電気がつきます。    到了晚上灯就亮了。&lt;br /&gt;
夜になると，食事に行きましょう。    （表示提议，不能使用）&lt;/p&gt;
&lt;h3 id=&#34;动基本形ない形-ことがあります&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动基本形ない形-ことがあります&#34;&gt;#&lt;/a&gt; [动 (基本形 / ない形)] ことがあります&lt;/h3&gt;
&lt;p&gt;表示有时会发生某种事态。往往和 “たまに”“時々” 等副词呼应使用。&lt;/p&gt;
&lt;p&gt;そのパソコンは，たまに　フリーズする　ことがあります。  那台电脑偶尔会死机。&lt;br /&gt;
時々　&lt;ruby&gt;寝坊&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ねぼう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; する　ことがあります。     有时睡懒觉。&lt;/p&gt;
&lt;p&gt;注：本句型和 21 课学的 “～たことがあります” 是两种完全不同的句型。&lt;/p&gt;
&lt;h3 id=&#34;形容词的副词性用法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#形容词的副词性用法&#34;&gt;#&lt;/a&gt; 形容词的副词性用法&lt;/h3&gt;
&lt;p&gt;有的形容词可以像副词一样修饰动词。这时：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一类形容词词尾的い变く&lt;/li&gt;
&lt;li&gt;二类形容词后加に&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;一类形容词&lt;/th&gt;
&lt;th&gt;二类形容词&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;早い → 早く &lt;br&gt; 大きい　→ 大きく&lt;/td&gt;
&lt;td&gt;上手　→　上手に　&lt;br&gt; 静か　→　静かに&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;早く家に帰りましょう。  早点回家吧。&lt;br /&gt;
静かにドアを&lt;ruby&gt;閉&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;し&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; めてください。   请轻轻地关门。&lt;/p&gt;
&lt;h3 id=&#34;小句简体形でしょうか&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小句简体形でしょうか&#34;&gt;#&lt;/a&gt; [小句 (简体形)] でしょうか&lt;/h3&gt;
&lt;p&gt;句尾用 “でしょうか” 来表示疑问，是礼貌程度较高的表达方式。如 “&lt;ruby&gt;来&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;く&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; るでしょうか” 比 “&lt;ruby&gt;来&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;き&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ますか” 更礼貌。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;动词小句和一类形容词小句以简体形后续 “でしょうか”。&lt;/li&gt;
&lt;li&gt;二类形容词小句和名词小句则把简体形的 “だ” 换成 “でしょうか”。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;馬さんはもう帰ったでしょうか。  小马已经回家了吗？  （馬さんはもう帰りましたか。）&lt;br /&gt;
&lt;ruby&gt;三月&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;さんがつ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; の東京は寒いでしょうか。     3 月的东京冷吗？&lt;br /&gt;
これは中国の&lt;ruby&gt;菓子&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かし&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; でしょうか。     这是中国的点心吗？&lt;/p&gt;
&lt;h2 id=&#34;表达-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达-3&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;きちんと&lt;br /&gt;
用于表示正确、无误、恰当等意思。&lt;br /&gt;
朝ご飯は毎日きちんと食べますか。    你每天都好好吃早饭吗？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;卓球&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;たっきゅう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ですか？公園で？   [叮问的说法]&lt;br /&gt;
 正常语序为 “公園で卓球をするんですか（在公园打乒乓球吗？）”，但吃惊的时候，抛开语序规则，先去询问自己最关心的部分，所以变成了两个短句。  （表示吃惊、疑问）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;私が&lt;ruby&gt;浴衣&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ゆかた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を作ります。  我自己做浴衣。&lt;br /&gt;
—— 浴衣ですか？自分で？     浴衣吗？自己做？&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;～でできた～&lt;br /&gt;
表示 “用～做成的～”。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;それはプラスチックでできた&lt;ruby&gt;箱&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はこ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; です。   那是塑料做的盒子。&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;ほど　和 ぐらい&lt;br /&gt;
 “数量词 + ほど” 和 “数量词 + ぐらい” 都表示大致的数量或分量。但是，表示某序列中的一点时，只能用 “ぐらい”（即不能用小数点表达的东西只能ぐらい）。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;ここから３００メートルほど行くと，スポーツセンターがあります。  从这里大概走 300 米左右，有个体育中心。   （可用ぐらい）&lt;/p&gt;
&lt;p&gt;私は３０歳ぐらいからスポーツを始めました。  我大概从 30 岁左右开始体育运动。  （不可用ほど）&lt;/p&gt;
&lt;p&gt;另外，ぐらい可以接在 “この / その / あの / どの” 后面，ほど不能。&lt;br /&gt;
このぐらいのサイズの箱が欲しいんですが。    我想要这么大小的箱子。&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;ただし&lt;br /&gt;
表示基本肯定前面句子内容的基础上，附加一些条件、限制，或者补充一些例外的情况，意思与 “しかし” 相似，但 “しかし” 用于接续与前句完全相反的内容，而 “ただし” 则只能用来表示对前面内容的部分限制或补充。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;このスポーツセンターは，誰でも&lt;ruby&gt;利用&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;りよう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; することができます。ただし，&lt;ruby&gt;会費&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かいひ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は高いです。   谁都可以利用这个体育中心，但是会费有点高。&lt;/p&gt;
&lt;p&gt;このプールは&lt;ruby&gt;女性&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じょせい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は&lt;ruby&gt;利用&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;りよう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; することができます。しかし，&lt;ruby&gt;男性&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;だんせい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; はだめです。   这个游泳池女性可以使用，但是男性不可以。&lt;/p&gt;
&lt;h1 id=&#34;第三十二课今度の日曜日に遊園地ゆうえんちへ行くつもりです&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第三十二课今度の日曜日に遊園地ゆうえんちへ行くつもりです&#34;&gt;#&lt;/a&gt; 第三十二课：今度の日曜日に&lt;ruby&gt;遊園地&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ゆうえんち&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; へ行くつもりです&lt;/h1&gt;
&lt;h2 id=&#34;语法-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法-4&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;动基本形ない形-つもりです&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动基本形ない形-つもりです&#34;&gt;#&lt;/a&gt; [动 (基本形 / ない形)] つもりです&lt;/h3&gt;
&lt;p&gt;表示说话之前已经形成的意志、打算。 “打算怎么样”。与 30 课学的 “动词意志形 + と思っています” 意思相同。&lt;/p&gt;
&lt;p&gt;ボーナスで車を　買う　つもりです。      打算用奖金买车。&lt;br /&gt;
もうタバコは　吸わない　つもりです。    已经决定戒烟了。&lt;/p&gt;
&lt;p&gt;注：对长辈或上级用 “～つもりですか” 直接提问不太礼貌，30 课学的 “～ようと思います” 和 “～ようと思っています” 也不可以用于向长辈或上级提问。&lt;/p&gt;
&lt;h3 id=&#34;动基本形ない形-ことにしますことにしました&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动基本形ない形-ことにしますことにしました&#34;&gt;#&lt;/a&gt; [动 (基本形 / ない形)] ことにします / ことにしました&lt;/h3&gt;
&lt;p&gt;表示说话人自己决定实施某种行为时使用。“ことにします” 用于说话的时候或刚刚决定。“ことにしました” 用于已经决定好了。&lt;br /&gt;
“こと” 不能用 “の” 替换。&lt;/p&gt;
&lt;p&gt;明日から毎日　運動する　ことにします。  我从明天起每天做运动。&lt;br /&gt;
明日，友達と映画を　見に行く　ことにしました。  明天和朋友去看电影。&lt;/p&gt;
&lt;h3 id=&#34;动基本形ない形-ことになりました&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动基本形ない形-ことになりました&#34;&gt;#&lt;/a&gt; [动 (基本形 / ない形)] ことになりました&lt;/h3&gt;
&lt;p&gt;表示由于某种外在的原因导致形成了某种决定。&lt;br /&gt;
“こと” 不能用 “の” 替换。&lt;/p&gt;
&lt;p&gt;来月から&lt;ruby&gt;給料&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;きゅうりょう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; が　&lt;ruby&gt;上&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; がる　ことになりました。  从下个月其工资涨了。&lt;/p&gt;
&lt;p&gt;今週は会議を　&lt;ruby&gt;行&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おこな&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; わない　ことになりました。 这个星期不开会了。&lt;/p&gt;
&lt;p&gt;“～ことになりました” 也可用于委婉表述根据自己的意志决定的事情。&lt;br /&gt;
私たち，結婚することになりました。  我们要结婚了。&lt;/p&gt;
&lt;h3 id=&#34;小句简体形-そうです-传闻&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小句简体形-そうです-传闻&#34;&gt;#&lt;/a&gt; [小句 (简体形)]　そうです    [传闻]&lt;/h3&gt;
&lt;p&gt;用 “～そうです” 明确表示某信息不是源于自己的直接感知而是从别人那里听到的，提示消息来源时则用 “～によると”。&lt;/p&gt;
&lt;p&gt;馬さんの&lt;ruby&gt;息子&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;むすこ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は，&lt;ruby&gt;今年&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ことし&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;ruby&gt; 小学校&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しょうがっこう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; に&lt;ruby&gt;入学&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;にゅうがく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; するそうです。  听说小马的儿子今年上小学。&lt;/p&gt;
&lt;p&gt;&lt;ruby&gt;天気予報&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;てんきよほう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; によると，明日は雨だそうです。   据天气预报说明天下雨。&lt;/p&gt;
&lt;p&gt;うわさによると，あの店のラーメンは&lt;ruby&gt;美味&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; しくないそうです。 听说那家店的面条不好吃。（うわさ 传言）&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;“～そうです” 没有过去、否定和疑问的形式。如：そうではありません是错的。&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&#34;表达-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达-4&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;今度の日曜日&lt;br /&gt;
日语的 “今度” 语义范围更广，可能是 “这次”，也可能 “下次”，根据上下文判断。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;今度の日曜日に遊園地に行くつもりです。  这个星期天打算去游乐园。&lt;br /&gt;
今度の会議は午前 10 時からです。      下次的会议上午 10 点开始。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;ボーナス bonus&lt;br /&gt;
 工资外另外支付的奖金。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ずっと   [期间]&lt;br /&gt;
 第 12 课学的 “ずっと” 表示程度差异很大。本课表示：在某一期限内动作、状态一直持续。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;天気予報によると，&lt;ruby&gt;連休中&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;れんきゅうちゅう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; はずっと晴れだそうですよ。   天气预报说，连休期间一直是晴天。&lt;/p&gt;
&lt;p&gt;佐藤さんは先月からずっと&lt;ruby&gt;入院&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;にゅういん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; しています。   佐藤先生上个月起就一直在住院。&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;メールがあって&lt;br /&gt;
表示收到了电子邮件的意思。（在句子中间，所以用 “あって”）&lt;br /&gt;
“電話 / 手紙 / ファックス”  也可以用 “～がある” 的表达。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;先週，小野さんからメールがありました。  上周小野女士发来了邮件。&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;
&lt;p&gt;お&lt;ruby&gt;邪&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じゃ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;ruby&gt; 魔&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ま&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; する&lt;br /&gt;
 “&lt;ruby&gt;邪&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じゃ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;ruby&gt; 魔&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ま&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; する” 原意为妨碍别人做某事，但引申可表示到别人家里拜访，进门时说 “&lt;ruby&gt;邪&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じゃ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;ruby&gt; 魔&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ま&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; します（打扰您了）”。告辞时则说 “お&lt;ruby&gt;邪&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じゃ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;ruby&gt; 魔&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ま&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; しました（打扰您了）”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;～てほしい   [表示对他人愿望]&lt;br /&gt;
 第 17 课学的表示愿望的 “～たい” 表示说话人自己想做某事的愿望，而表示希望别人去做某事时，则用 “～てほしい”。但不能对长辈或上级使用。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;田中さんに日本人の友達を&lt;ruby&gt;紹介&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しょうかい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; してほしいです。   想请田中先生给我介绍日本朋友。&lt;/p&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;～って   （“～と”“～という人は” 的缩略形式）&lt;br /&gt;
第 22 课学的 “～って” 表示传闻。&lt;br /&gt;
这里用于省略地表达引用：如 “～と言います” → “～って言います”。&lt;br /&gt;
如果 “と” 前面的音节为 “ん” 时，常只保留 “て”，促音 “っ” 脱落。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;もしもし，今何て言った？    喂，你刚才说什么？  （何と言いますか　→　何って　→　何て）&lt;br /&gt;
—— 「少し&lt;ruby&gt;遅&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; れる」って言ったの。      我说晚点到。&lt;/p&gt;
</content>
        <category term="课程学习" scheme="https://ei4869.github.io/miyano/categories/Course-Study/" />
        <category term="日语" scheme="https://ei4869.github.io/miyano/categories/Course-Study/Japanese/" />
        <category term="课程" scheme="https://ei4869.github.io/miyano/tags/%E8%AF%BE%E7%A8%8B/" />
        <updated>2025-04-07T09:36:00.000Z</updated>
    </entry>
    <entry>
        <id>https://ei4869.github.io/miyano/Scientific-Notes/Graduation-Project/%E6%AF%95%E8%AE%BE%E5%AE%9E%E9%AA%8C%E6%96%B9%E6%A1%88/</id>
        <title>毕设实验方案</title>
        <link rel="alternate" href="https://ei4869.github.io/miyano/Scientific-Notes/Graduation-Project/%E6%AF%95%E8%AE%BE%E5%AE%9E%E9%AA%8C%E6%96%B9%E6%A1%88/"/>
        <content type="html">&lt;h1 id=&#34;实验细节&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#实验细节&#34;&gt;#&lt;/a&gt; 实验细节&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;参数&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;沉积温度&lt;/th&gt;
&lt;th&gt;氧压&lt;/th&gt;
&lt;th&gt;打点数&lt;/th&gt;
&lt;th&gt;激光能量&lt;/th&gt;
&lt;th&gt;激光频率&lt;/th&gt;
&lt;th&gt;退火&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;SRO&lt;/td&gt;
&lt;td&gt;750℃&lt;/td&gt;
&lt;td&gt;13Pa&lt;/td&gt;
&lt;td&gt;10000&lt;/td&gt;
&lt;td&gt;2.5J/cm²&lt;/td&gt;
&lt;td&gt;4Hz&lt;/td&gt;
&lt;td&gt;先在氧压和温度不变下保温 15 分钟，然后自然冷却 7h&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SCO&lt;/td&gt;
&lt;td&gt;750℃&lt;/td&gt;
&lt;td&gt;15Pa;5pa;0.5Pa&lt;/td&gt;
&lt;td&gt;6000&lt;/td&gt;
&lt;td&gt;2.0J/cm²&lt;/td&gt;
&lt;td&gt;4Hz&lt;/td&gt;
&lt;td&gt;先在氧压和温度不变下保温 15 分钟，然后自然冷却 7h&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;一次氧压下制备两片 SCO，一片用于制作器件，一片用于形貌观察和表征。&lt;br /&gt;
使用光刻和电子束蒸镀制作顶电极 Au，面积为 80um×80um。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;表征&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;使用 XRD 观察衍射图像；&lt;/li&gt;
&lt;li&gt;使用 AFM 观察表面形貌；&lt;/li&gt;
&lt;li&gt;使用 XPS 表征 Sr、Co、O 价态变化；&lt;/li&gt;
&lt;li&gt;TEM 成本太高估计难以用到。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;器件电学测试&lt;br /&gt;
 I-V 特性曲线、循环稳定性测试、保持性能测试、耐久性能测试、开关比&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#问题&#34;&gt;#&lt;/a&gt; 问题&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;沉积温度对薄膜性能的影响大不大？跟程老师讨论过，如果 PLD 实验紧张且温度影响不如氧压显著，后续可以先考虑只测氧压的影响。&lt;br /&gt;
&lt;span class=&#34;red&#34;&gt;优先考虑氧压&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;如果后续需要补充实验数据，如果不想考虑沉积温度，能否考虑顶电极面积的影响（程老师说影响因素这块可以不一定和任务书完全一致），据论文显示顶电极的面积是会影响器件的电学性能例如开关比什么的，所以相比于 PLD 多做几次实验，制备不同面积的顶电极的方案是否更容易且可行？例如在最适合的氧压下一次做 3 个片子后续做三个不同面积的顶电极（问题是做完表征的膜之后能否继续做器件，还是一次能同时做四个片子）&lt;br /&gt;
&lt;span class=&#34;red&#34;&gt;表征最后做，先做器件测电特性&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;前面制备 SRO 需要 750℃的温度下，而 SCO 需要 600℃的衬底温度，能否在 SRO 退火冷却到 600℃时直接沉积 SCO，而不需要等到 SRO 整个自然冷却过程，以节约时间？&lt;br /&gt;
&lt;span class=&#34;red&#34;&gt;我之前做的是 750℃SCO，必须等降温完全后再升温，保证成膜的完整性&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;前面的激光打点的次数和膜厚有没有什么经验上的对应？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;if. 如果后续实验进度紧张，学长那边是否有部分做好的电学测试数据，进行补救。&lt;/p&gt;
</content>
        <category term="毕设笔记" scheme="https://ei4869.github.io/miyano/categories/Graduation-Project/" />
        <category term="毕设" scheme="https://ei4869.github.io/miyano/tags/%E6%AF%95%E8%AE%BE/" />
        <updated>2025-04-03T03:22:52.000Z</updated>
    </entry>
    <entry>
        <id>https://ei4869.github.io/miyano/Course-Study/Japanese/%E5%88%9D%E7%BA%A7%E4%B8%8B-%E7%AC%AC7%E5%8D%95%E5%85%83/</id>
        <title>单元七——森赴北京</title>
        <link rel="alternate" href="https://ei4869.github.io/miyano/Course-Study/Japanese/%E5%88%9D%E7%BA%A7%E4%B8%8B-%E7%AC%AC7%E5%8D%95%E5%85%83/"/>
        <content type="html">&lt;h1 id=&#34;第二十五课これは明日会議かいぎで使つかう資料しりょうです&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第二十五课これは明日会議かいぎで使つかう資料しりょうです&#34;&gt;#&lt;/a&gt; 第二十五课：これは明日&lt;ruby&gt;会議&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かいぎ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; で&lt;ruby&gt;使&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;つか&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; う&lt;ruby&gt;資料&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しりょう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; です&lt;/h1&gt;
&lt;h2 id=&#34;语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;动词简体形-名-小句动词简体形-名&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动词简体形-名-小句动词简体形-名&#34;&gt;#&lt;/a&gt; [动词 (简体形)] + [名]、[小句 (动词简体形)] + [名]&lt;/h3&gt;
&lt;p&gt;动词或由动词作谓语的小句（简称动词小句）修饰名词时，用动词的简体形。      &lt;mark&gt;动词修饰名词&lt;/mark&gt;&lt;br /&gt;
具体说，表示某种习惯或将要发生的动作时用动词的基本形，表示动作已经完成时用动词的 “た形”。&lt;/p&gt;
&lt;p&gt;あれは　&lt;ruby&gt;倒産&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;とうさん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; した　会社　です。   那是一家倒闭的公司。&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;注：名词前不用敬体形。&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;さっき森さんが　&lt;ruby&gt;座&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;すわ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; った　&lt;ruby&gt;場所&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ばしょ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;。  森先生刚才坐过的地方。  （た形）&lt;br /&gt;
森さんが　知らない　ニュース。  森先生不知道的新闻。    （未然形）&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;注：名词前不能加 “の”。&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;森さんが　座る場所。    森先生要做的地方。&lt;br /&gt;
あれは　&lt;ruby&gt;昨夜&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ゆうべ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　&lt;ruby&gt;泊&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;と&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; まった　ホテルです。    那是昨天晚上住的宾馆。&lt;/p&gt;
&lt;h3 id=&#34;小句动词简体形-名は-名形-です&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小句动词简体形-名は-名形-です&#34;&gt;#&lt;/a&gt; [小句 (动词简体形)] + [名] は　[名]/[形] です&lt;/h3&gt;
&lt;p&gt;动词小句修饰名词而形成的名词短语常常用来作主语。&lt;/p&gt;
&lt;p&gt;私が明日&lt;ruby&gt;乗&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;の&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; る&lt;ruby&gt;飛行機&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ひこうき&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　中国&lt;ruby&gt;航空&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;こうくう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; です。   我明天乘坐的飞机是中国航空公司的。&lt;br /&gt;
&lt;span class=&#34;red&#34;&gt;小句中的主语要用 “が” 连接谓语。&lt;/span&gt;&lt;br /&gt;
小野さんが作る料理　は　おいしい　です。    小野女士做的菜很好吃。&lt;/p&gt;
&lt;p&gt;即名词前面跟一个长的定语用于修饰名词。如：&lt;ins class=&#34;wavy&#34;&gt;昨日&lt;ruby&gt;父&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ちち&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; がデパートで&lt;ruby&gt;買&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;か&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; った日本&lt;ruby&gt;製&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;せい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;/ins&gt; の&lt;mark&gt;カメラ&lt;/mark&gt;はとても安やすかったです。    昨天爸爸在百货商店买的日本造的照相机很便宜。&lt;/p&gt;
&lt;h3 id=&#34;小句动词简体形-名をにから-动ます&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小句动词简体形-名をにから-动ます&#34;&gt;#&lt;/a&gt; [小句 (动词简体形)] + [名] を / に / から [动] ます&lt;/h3&gt;
&lt;p&gt;动词小句修饰名词而形成的名词短语也可以用作主语以外的其他句子成分。&lt;/p&gt;
&lt;p&gt;中国で買った&lt;ruby&gt; CD&lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;シーディー&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;  を　&lt;ruby&gt;友達&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ともだち&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; に　&lt;ruby&gt;貸&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;か&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; しました。   我把在中国买的 CD 借给朋友了。&lt;br /&gt;
私&lt;mark&gt;が&lt;/mark&gt;知らない&lt;ruby&gt;人&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ひと&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　から　手紙が&lt;ruby&gt;来&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;き&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ました。  一个不认识的人给我来了信。&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;注：修饰名词的动词小句中的主语，不能用は必须用が表示。&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;私&lt;mark&gt;が&lt;/mark&gt;知らない&lt;ruby&gt;人&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ひと&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;（我不认识的人）&lt;br /&gt;
森さん&lt;mark&gt;が&lt;/mark&gt;買った本（森先生买的书）&lt;/p&gt;
&lt;h3 id=&#34;小句一类性二类形名-名&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小句一类性二类形名-名&#34;&gt;#&lt;/a&gt; [小句 (一类性 / 二类形 / 名)] + [名]&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;“名词 + が + 一类形容词 + です” 修饰名词时，一类形容词要用基本形。&lt;/li&gt;
&lt;li&gt;“名词 + が + 二类形容词 + です” 修饰名词时，“二类形容词 + です” 变成 “二类形容词加な”。&lt;/li&gt;
&lt;li&gt;“名词 1 + が + 名词 2 + です” 修饰名词时，“名词 2 + です” 变成 “名词 2 + の”。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;ruby&gt;入&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;い&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; り&lt;rt&gt;&lt;/rt&gt;口&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ぐち&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; が&lt;mark&gt;広い&lt;/mark&gt; &lt;ins class=&#34;wavy&#34;&gt;あの&lt;ruby&gt;建物&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;たてもの&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;/ins&gt; が私の会社です。  入口很大的那座楼是我们的公司。（形 1 基本形 修饰名词）&lt;/p&gt;
&lt;p&gt;&lt;ruby&gt;操作&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;そうさ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; が&lt;mark&gt;簡単な&lt;/mark&gt; &lt;ins class=&#34;wavy&#34;&gt;パソコン&lt;/ins&gt;が欲しいです。     我想要操作简单的个人电脑。 （形 2 + な 修饰名词）&lt;/p&gt;
&lt;p&gt;&lt;ruby&gt;数学&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;すうがく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; が&lt;mark&gt;専門の&lt;/mark&gt; &lt;ins class=&#34;wavy&#34;&gt;&lt;ruby&gt;先生&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;せんせい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;/ins&gt; が休みました。   教数学的老师休息了。 （名词 + の 修饰名词）&lt;/p&gt;
&lt;p&gt;注：&lt;ruby&gt;専門&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;せんもん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;形容词修饰名词不能加 “の”。&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&#34;表达&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;～のところ&lt;br /&gt;
名词后加 “～のところ” 的形式，可以把本来不表示场所的名称变为表示场所的名称。 即 “～那里”。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;あの　&lt;ins class=&#34;wavy&#34;&gt;&lt;ruby&gt;窓&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;まど&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; のところ&lt;/ins&gt;　にいる人はだれですか。    在&lt;ins class=&#34;wavy&#34;&gt;窗户那儿&lt;/ins&gt;的人是谁啊？&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;あれ [指人的词]&lt;br /&gt;
“これ / あれ” 本来是指示事物的词，但有时也用于指人，不过礼貌程度较低，一般用于指示或介绍自己的家人或部下，当然如果所指的人不在场，或者在远处而听不到谈话时，可以使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;～でしたね&lt;br /&gt;
 “～でしたね” 用于表示确认。“对吧，是吗”。&lt;br /&gt;
“～でしたね” 表示确认时，可以与副词 “たしか” 呼应使用。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;日本と中国の&lt;ruby&gt;時差&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じさ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は１時間でしたね。   日本和中国的时差时 1 小时来着，对吗？&lt;br /&gt;
—— ええ，日本のほうが１時間&lt;ruby&gt;早&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はや&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; いです。    对，日本早一小时。&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;大&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おお&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; きな&lt;br /&gt;
和 “大きい”“小さい” 表示同样意思的还有 “&lt;ruby&gt;大&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おお&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; きな”“&lt;ruby&gt;小&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ちい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; さな” 两个词，不过 “&lt;ruby&gt;大&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おお&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; きな”“&lt;ruby&gt;小&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ちい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; さな” 只能用于修饰名词（不能作谓语，如 “～は　&lt;ruby&gt;大&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おお&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; きなです），不能用来结句。其他的一类形容词没有这种情况。&lt;br /&gt;
&lt;mark&gt;小さなかばん&lt;/mark&gt;が欲しいです。  想要小的提包。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;このあたり&lt;br /&gt;
 “あたり” 表示某一场所的周边，除可接在 “この / その / あの / どの” 等词后面外，还可接在一些表示具体场所的名词后面，如 “&lt;ruby&gt;新宿&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しんじゅく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; あたり（新宿一带）”。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;このあたりはよく&lt;ruby&gt;渋滞&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じゅうたい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; します。   这一带经常堵车。&lt;/p&gt;
&lt;h1 id=&#34;第二十六课自転車に2人ふたりで乗るのは危あぶないです&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第二十六课自転車に2人ふたりで乗るのは危あぶないです&#34;&gt;#&lt;/a&gt; 第二十六课：自転車に&lt;ruby&gt; 2&lt;rt&gt;&lt;/rt&gt; 人&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ふたり&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; で乗るのは&lt;ruby&gt;危&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あぶ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ないです&lt;/h1&gt;
&lt;h2 id=&#34;语法-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法-2&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;小句动词简体形-の-は-形-です&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小句动词简体形-の-は-形-です&#34;&gt;#&lt;/a&gt; [小句 (动词简体形)] + の + は [形]　です&lt;/h3&gt;
&lt;p&gt;动词小句加の使其名词化，表示 “做某动作” 的意思。这种名词化形式作主语而谓语是表示性质、状态的一类形容词或二类形容词是，主语要用助词 “は” 表示。&lt;/p&gt;
&lt;p&gt;パソコンで&lt;ruby&gt;表&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ひょう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を作るのは　&lt;ruby&gt;楽&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;たの&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; しいです。    用电脑制表是很愉快的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;注：如果形容词是 “&lt;ruby&gt;好&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;す&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; きです”“&lt;ruby&gt;嫌&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;きら&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; いです”“&lt;ruby&gt;上手&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じょうず&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; です”“&lt;ruby&gt;下手&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;へた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; です” 等主观性很强烈的形容词，如果名词化形式是这些形容词的对象时，要用助词 “が”。&lt;br /&gt;
私は　自転車に乗るのが　下手です。  我骑车技术不行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注：“&lt;ruby&gt;好&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;す&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; きです” 等表示好恶的形容词的对象作为话题使用时，要用助词 “は” 表示。&lt;br /&gt;
絵えをかくのは好きですか。      画画你喜欢吗？&lt;br /&gt;
—— いいえ，絵をかくのは嫌いです。      不，画画我不喜欢。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;如果是评价某人对于什么什么 是什么感情，用 “が”；如果是讨论话题，用 “は”。&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&#34;小句动词简体形-の-を-动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小句动词简体形-の-を-动&#34;&gt;#&lt;/a&gt; [小句 (动词简体形)] + の　+ を　[动]&lt;/h3&gt;
&lt;p&gt;动词小句加 “の” 的名词化形式还可以做宾语。&lt;/p&gt;
&lt;p&gt;手紙を&lt;ruby&gt;出&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;だ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; すのを　&lt;ruby&gt;忘&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;わす&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; れました。    我忘了寄信。&lt;br /&gt;
森さんが&lt;ruby&gt;発言&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はつげん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; するのを　&lt;ruby&gt;聞&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;き&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; きました。  听了森先生的发言。&lt;/p&gt;
&lt;p&gt;注：这种名词化形式作宾语时 “の” 和 “こと” 可以互换。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;不过句尾的动词时 “知らせます（告诉）”“&lt;ruby&gt;伝&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;つた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; えます（告诉）”“&lt;ruby&gt;話&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はな&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; します（说）” 等表示语言行为的动词时，只能用 “こと”。&lt;br /&gt;
李さんは森さんが休むことを伝えました。     小李转告了森先生请假的事情。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;句尾的动词时 “見ます（看）”“聞きます（听）” 等表示感知的动词或 “&lt;ruby&gt;手伝&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;てつだ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; います（帮忙）”“やめます（停止）”“&lt;ruby&gt;防&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ふせ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ぎます（防御）” 等表示直接作用于动作对象的动词时，只能用 “の”。&lt;br /&gt;
李さんは森さんが車から&lt;ruby&gt;降&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;お&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; りるのを見ました。 小李看见森先生从车上下来了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;小句简体形-でしょう-推测&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小句简体形-でしょう-推测&#34;&gt;#&lt;/a&gt; [小句 (简体形)] でしょう [推测]&lt;/h3&gt;
&lt;p&gt;表示说话人对自己和听话人都不能断定的事情进行推测，常与 “たぶん” 呼应使用。动词小句和一类形容词小句用简体形后续 “でしょう”，二类形容词小句和名词小句则把简体形的 “だ” 换成 “でしょう” 即可。“でしょう” 的简体形是 “だろう”。&lt;/p&gt;
&lt;p&gt;明日に&lt;ruby&gt;朝&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あさ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は&lt;ruby&gt;大雨&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おおあめ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; になるでしょう。    明天早晨会下大雨吧。    （动词）&lt;/p&gt;
&lt;p&gt;この本の&lt;ruby&gt;値段&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ねだん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は分かりませんが，たぶん高いでしょう。 我不知道这本书的价格，大概很贵吧。  （一类形容词）&lt;/p&gt;
&lt;p&gt;桜さくらの季節きせつですから，京都はたぶんにぎやかでしょう。    现在正是观赏樱花的季节，京都大概很热闹吧。 （二类形容词）&lt;/p&gt;
&lt;p&gt;&lt;ruby&gt;今年&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ことし&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; はたぶん&lt;ruby&gt;豊作&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ほうさく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; だろう。    今年大概是个丰收年吧。  （名词）&lt;/p&gt;
&lt;h3 id=&#34;小句简体形-かもしれません&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小句简体形-かもしれません&#34;&gt;#&lt;/a&gt; [小句 (简体形)] かもしれません&lt;/h3&gt;
&lt;p&gt;表示可能发生某事，其可能性为 50% 左右。动词小句和一类形容词小句用简体形后续 “かもしれません”，二类形容词小句和名词小句则把简体形的 “だ” 换成 “かもしれません” 即可。  &lt;span class=&#34;blue&#34;&gt;同上一点的语法&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;明日は雪かもしれません。    明天也许下雪。&lt;/p&gt;
&lt;p&gt;注：与 “～でしょう” 相比，“～かもしれません” 表示的概率较低。&lt;/p&gt;
&lt;p&gt;可以在同一动作的肯定形和否定形后面并列使用两个 “かもしれません”。&lt;br /&gt;
明日は雨が降るかもしれませんが，降らないかもしれません。    明天也许下雨，也许不下雨。&lt;/p&gt;
&lt;h2 id=&#34;表达-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达-2&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;もしかしたら&lt;br /&gt;
口语形式，用于可能性较低的场合。一般与 “～かもしれません”“～ではありませんか” 等呼应使用。&lt;br /&gt;
馬さんはまだ来ませんね。        小马还没来啊？&lt;br /&gt;
—— もしかしたら，今日は来ないかもしれませんよ。     也许今天不来了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;それで&lt;br /&gt;
表示前面句子的事态为后面句子事态的原因、理由。&lt;br /&gt;
日本には&lt;ruby&gt;握手&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あくしゅ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; の&lt;ruby&gt;習慣&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しゅうかん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; がありません。それで，つい&lt;ruby&gt;握手&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あくしゅ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; するのを忘れます。   日本没有握手的习惯，因此，一部注意就忘记握手了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这里以对方叙述的事情为理由，说话人使用 “それで” 引出其导致的结果。&lt;/p&gt;
&lt;p&gt;注：“だから（所以）” 也表示原因、理由。但与 “それで” 相比，语气较强，且后面可以是表示祈使或推测的句子，而 “それで” 不行。&lt;br /&gt;
すぐに会議が始まります。だから，&lt;ruby&gt;急&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;いそ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; いでください。     会议就要开始了，所以你快点吧。  （祈使要求，不能用それで）&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;つい&lt;br /&gt;
表示并非有意所为却形成了某种后果，并含有对意想不到的后果感到不快、后悔的语感。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;あいさつ&lt;ruby&gt;回&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;まわ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; り&lt;br /&gt;
指到了新单位或迁入新居后，去拜访有关单位或周围邻居的行为。本来是 “あいさつして回ります（寒暄拜访）”，但现在多用 “あいさつ&lt;ruby&gt;回&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;まわ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; り” 这种名词形式，如 “あいさつ&lt;ruby&gt;回&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;まわ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; りをします”“あいさつ&lt;ruby&gt;回&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;まわ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; りに行きます”。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第二十七课子供の時大きな地震じしんがありました&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第二十七课子供の時大きな地震じしんがありました&#34;&gt;#&lt;/a&gt; 第二十七课：子供の時，大きな&lt;ruby&gt;地震&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じしん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; がありました&lt;/h1&gt;
&lt;h2 id=&#34;语法-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法-3&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;小句简体形-時&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小句简体形-時&#34;&gt;#&lt;/a&gt; [小句 (简体形)] + 時&lt;/h3&gt;
&lt;p&gt;“小句 + 時” 是表示时间的名词短语。     &lt;span class=&#34;blue&#34;&gt;相当于动词、名词、形容词和名词连接时的语法&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;小句为动词小句是分两种情况：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;“～する（基本形）+ 時” 表示后项动作实现时前项动作尚未完成。&lt;/li&gt;
&lt;li&gt;“～した（た形）+ 時” 表示后项动作实现时前项动作已完成。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;小句为一类形容词小句时：形 1 简体形 + 時&lt;/li&gt;
&lt;li&gt;小句为二类形容词或名词小句时：形 2 + な + 時，名词 + の + 時&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对于 2 和 3，前项是后项的动作进行的时间。&lt;/p&gt;
&lt;p&gt;子供の時，大きな&lt;ruby&gt;地震&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じしん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; がありました。 我小时候，发生过大地震。&lt;br /&gt;
日本に行く　時，たくさんお土産を買いました。    去日本的时候买了许多礼物。（基本形，还没到日本买的）&lt;br /&gt;
日本に行った　時，たくさんお土産を買いました。  去了日本的时候买了很大礼物。    （た形，去了日本才买的）&lt;br /&gt;
忙しい　時，家族みんなで仕事をします。  忙时全家人一起干活。&lt;br /&gt;
&lt;ruby&gt;暇&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ひま&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; な　時，私は&lt;ruby&gt;町&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;まち&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; で買い物をします。    有空时我上街买东西。&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;注：&lt;mark&gt;只有名词作修饰语时&lt;/mark&gt;，如 “子供の時” 才在名词 “子供” 与 “時” 之间加 “の”，其他词语作修饰语则一律不加 “の”，如 “忙しいの時” 是错误的用法。&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;表示一次性的、个别的情况时，也可以在 “～時” 后面加 “に”。&lt;br /&gt;
この前，友達が&lt;ruby&gt;病気&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;びょうき&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; の時に，私が&lt;ruby&gt;看病&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かんびょう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; しました。    前些天朋友生病时我护理他了。&lt;/p&gt;
&lt;h3 id=&#34;动-ながら&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动-ながら&#34;&gt;#&lt;/a&gt; [动]　ながら&lt;/h3&gt;
&lt;p&gt;表示同一主体进行两个动作，其中后面的动作是主要动作。“ます” 形去掉 “ます” 加 “ながら”。&lt;/p&gt;
&lt;p&gt;李さんはテレビを見ながら&lt;ruby&gt;食事&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しょくじ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; をしています。   小李边看电视边吃饭。&lt;/p&gt;
&lt;h3 id=&#34;小句简体形-でしょう-确认&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小句简体形-でしょう-确认&#34;&gt;#&lt;/a&gt; [小句 (简体形)] でしょう？   [确认]&lt;/h3&gt;
&lt;p&gt;如果是确认对方比自己更为熟悉的事情时，“～でしょう” 读升调，含有说话人请听话人告诉自己某种信息的语感。&lt;br /&gt;
如果是用于对方和自己意见不同，或者叮问对方时，读降调。&lt;/p&gt;
&lt;p&gt;注：“ね” 也可用于向对方进行确认，但 “～ね” 仅仅用于说话人认为自己和听话人双方意见一致的情况。而 “～でしょう” 可用于对方和自己意见不一致时。所以一般意见一致时用 “ね”。&lt;/p&gt;
&lt;h3 id=&#34;动-ています-反复习惯&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动-ています-反复习惯&#34;&gt;#&lt;/a&gt; [动] ています   [反复][习惯]&lt;/h3&gt;
&lt;p&gt;之前 15、16 课学过 “动词て形 + います” 表示动作正在进行和动作的结果、状态的用法。&lt;br /&gt;
这里还可以表示反复或习惯性的动作，在表示习惯性动作时可以用动词ます形代替。&lt;/p&gt;
&lt;p&gt;&lt;ruby&gt;葉子&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ようこ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; さんはアルバイトをしながら学校に&lt;ruby&gt;通&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かよ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; っています。  叶子边打工边上学。 [反复]&lt;br /&gt;
 私は毎日散歩しています。    我每天散步。    [习惯]&lt;br /&gt;
 私は毎日散歩します。        我明天散步。 [习惯，但用ます形表示]&lt;/p&gt;
&lt;p&gt;注：表示习惯性动作时，二者都可以使用，但句子里如果有使用 “&lt;ruby&gt;先月&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;せんげつ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; から” 这种表示时间起点的形式时，一般不用 “ます”。&lt;br /&gt;
私は先月から毎朝&lt;ruby&gt;太極拳&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;たいきょくけん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; をしています。   我从上个月开始每天早上打太极拳。&lt;/p&gt;
&lt;p&gt;注：表示现在正在从事的工作，有时可用 “[表示职业的名词]+ を + しています” 的形式。&lt;br /&gt;
私は&lt;ruby&gt;高校&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;こうこう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; の&lt;ruby&gt;教師&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;きょうし&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; をしています。  我在做高中教师。&lt;/p&gt;
&lt;h3 id=&#34;名-で-原因-理由&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名-で-原因-理由&#34;&gt;#&lt;/a&gt; [名] で     [原因、理由]&lt;/h3&gt;
&lt;p&gt;仕事で，&lt;ruby&gt;楊&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;よう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; さんと&lt;ruby&gt;会&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; っていた んですよ。      因工作我和杨先生见面来着。&lt;br /&gt;
小语法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;ruby&gt;会&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; っていた&lt;br /&gt;
动词「会う」的て形 + いる（过去式）。&lt;br /&gt;
「会う」是 “见面” 的意思，て形「会って」后接「いる」表示动作的持续或结果状态。&lt;br /&gt;
「会っていた」是「会っている」的过去式，表示过去某段时间内的持续状态，即 “当时正在见面” 或 “当时见过面”。&lt;/li&gt;
&lt;li&gt;んですよ&lt;br /&gt;
「んです」是「のです」的口语形式，用于解释或强调原因。&lt;br /&gt;
「よ」是语气助词，用于加强语气，表示说话人向听话人传递信息或强调某事。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;名-と会います&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名-と会います&#34;&gt;#&lt;/a&gt; [名] と会います&lt;/h3&gt;
&lt;p&gt;第 8 课学习了 “～に会います” 中的 “に” 表示对象的用法，而使用表示互动行为的动词时，进行同一动作的另一方要用 “と” 表示。如 “&lt;ruby&gt;結婚&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;けっこん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; します（结婚）”“けんかします（吵架）” 等表示互动行为的动作只能用 “と”。&lt;br /&gt;
“会います” 既能用に也能用と，但と时含有互动的语感。&lt;/p&gt;
&lt;p&gt;田中さんは佐藤さんと結婚しました。&lt;/p&gt;
&lt;p&gt;在 “A は B と～” 中，A 为主语，而在 “A と B とが～” 中，A 和 B 都是主语（A と B と中的第二个と有时省略不用。）&lt;br /&gt;
田中さんと佐藤さん（と）が結婚しました。&lt;/p&gt;
&lt;h2 id=&#34;表达-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达-3&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;アルバイト&lt;br /&gt;
 “打工”，日语中多指学生利用课外时间去工作的情况。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;学校に通っています&lt;br /&gt;
 “&lt;ruby&gt;通&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かよ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; います” 表示定期往返于同一个场所，与表示目的地的 “に” 一起使用；“行きます” 也和 “に” 一起使用，但只表示从一个地方移动到另一个地方，没有往返的意思。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;大勢&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おおぜい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;br /&gt;
 表示人多，如 “&lt;ruby&gt;大勢&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おおぜい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; の人（很多人）”“人が&lt;ruby&gt;大勢&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おおぜい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ます（有许多人）”。用于修饰名词、动词而一般不能用来做谓语（不能 “人が大勢です”）。&lt;br /&gt;
“たくさん” 也可用来表示人多，但同时可用于人以外的事物，但 “&lt;ruby&gt;大勢&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おおぜい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;” 只能用于人。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;ruby&gt;今朝&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;けさ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;，公園を散歩している時，&lt;ruby&gt;大勢&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おおぜい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; の人が&lt;ruby&gt;集&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あつ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; まっているのを見ました。  我今天早晨在公园散步时，看见许多人聚在一起。&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;
&lt;p&gt;お&lt;ruby&gt;年&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;とし&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;ruby&gt; 寄&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;よ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; り&lt;br /&gt;
 “&lt;ruby&gt;年&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;とし&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;ruby&gt; 寄&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;よ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; り” 前加上敬语的 “お”，是既有敬意又有亲切感的 “老人” 的说法，但是，“お&lt;ruby&gt;年&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;とし&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;ruby&gt; 寄&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;よ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; り” 不能直接用来称呼对方。 直接称呼时用 “おじいさん（老爷爷）”“おばあさん（老奶奶）”&lt;br /&gt;
 お&lt;ruby&gt;年&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;とし&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;ruby&gt; 寄&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;よ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; りが&lt;ruby&gt;多&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おお&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; かったでしょう？ 老年人很多吧。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;そう&lt;ruby&gt;言&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;い&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; えば&lt;br /&gt;
 “说起来”，表示由正在进行的对话或说话现场的某种情况联想到另外一些情况时使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;へえ [叹词]&lt;br /&gt;
 表示对听起来的信息感到敬佩或惊讶。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第二十八课馬さんはわたしに地図をくれました&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第二十八课馬さんはわたしに地図をくれました&#34;&gt;#&lt;/a&gt; 第二十八课：馬さんはわたしに地図をくれました&lt;/h1&gt;
&lt;h2 id=&#34;语法-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法-4&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;名1人は-名2人に-名3物をくれます&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名1人は-名2人に-名3物をくれます&#34;&gt;#&lt;/a&gt; [名 1 (人)] は　[名 2 (人)] に　[名 3 (物)] をくれます&lt;/h3&gt;
&lt;p&gt;“くれます” 表示别人给说话人或说话人一方的人某物。&lt;/p&gt;
&lt;p&gt;辨析：&lt;br /&gt;
あげる：1. 我给别人 2. 别人给别人&lt;br /&gt;
くれる：1. 别人给我 2. 别人给我这边的人（亲人等）&lt;/p&gt;
&lt;p&gt;小野さん，この本をわたしにくれますか。  小野，这本书送给我吗？  （别人给我）&lt;br /&gt;
昨日，馬さんが&lt;ruby&gt;妹&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;いもうと&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; に旅行のお土産をくれました。 昨天，小马把旅行时买的礼物给了我妹妹。  （别人给我的妹妹）&lt;/p&gt;
&lt;p&gt;注：日语中，一般采用以说话人作主语进行叙述的说法。如，相比于 “馬さんがわたしに本をくれました。”，更常用 “わたしは馬さんに本をもらいました。”&lt;/p&gt;
&lt;h3 id=&#34;动-てあげます&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动-てあげます&#34;&gt;#&lt;/a&gt; [动] てあげます&lt;/h3&gt;
&lt;p&gt;即 “动词て形 + あげます”，表示说话人或说话人一方的人为别人做某事。“别人” 用助词 “に” 表示。&lt;/p&gt;
&lt;p&gt;森さんは&lt;ruby&gt;お&lt;rt&gt;&lt;/rt&gt;年寄&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;としよ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; り&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;の&lt;ruby&gt;荷物&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;にもつ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　&lt;ruby&gt;持&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;も&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; って　あげました。   森先生帮老年人拿行李了。&lt;br /&gt;
おじいさんが&lt;ruby&gt;孫&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;まご&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; に本を　読んで　あげました。   爷爷念书给孙子听。&lt;/p&gt;
&lt;h3 id=&#34;动-てもらいます&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动-てもらいます&#34;&gt;#&lt;/a&gt; [动]　てもらいます&lt;/h3&gt;
&lt;p&gt;即 “动词て形 + もらいます”，具有 “说话人请别人做某事” 以及 “说话人承受了由于别人的动作而带来的恩惠” 两种含义。“别人” 用助词 “に” 表示。&lt;/p&gt;
&lt;p&gt;森さんは李さんに北京を　&lt;ruby&gt;案内&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あんない&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; して　もらいました。 森先生请小李带他游览了北京。&lt;br /&gt;
&lt;ruby&gt;係&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かかり&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; の人に&lt;ruby&gt;切符&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;きっぷ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　&lt;ruby&gt;交換&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;こうかん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; して　もらいました。  请工作人员给我换了票。&lt;/p&gt;
&lt;p&gt;&lt;ruby&gt;林&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はやし&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; さん，もう&lt;ruby&gt;少&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;すこ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; し　待って　もらいたいのですが。  林先生，我想请你再稍微等一等。&lt;br /&gt;
—— 分かりました。   知道了。&lt;/p&gt;
&lt;h3 id=&#34;动-てくれます&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动-てくれます&#34;&gt;#&lt;/a&gt; [动] てくれます&lt;/h3&gt;
&lt;p&gt;即 “动词て形 + くれます”，表示说话人以外的主语为说话人或说话人一方的人做某事（别人为我或我这边的人做某事）。如果整个句子为疑问形式时也可用于委托关系亲密的人为自己做某事。&lt;/p&gt;
&lt;p&gt;&lt;ruby&gt;女&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おんな&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; の人がわたしの&lt;ruby&gt;財布&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;さいふ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　&lt;ruby&gt;拾&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ひろ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; って　くれました。   一位妇女帮我捡起了钱包。&lt;br /&gt;
ごみを　&lt;ruby&gt;出&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;だ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; して　くれますか。  —— いいですよ。  帮我倒一下垃圾好吗？ —— 好的。&lt;/p&gt;
&lt;p&gt;委托别人帮自己做某事时，使用否定形式 “～てくれませんか” 更礼貌。&lt;br /&gt;
森君，この手紙をコピーしてくれますか。  森君，能帮我把这封信复印一下吗？&lt;/p&gt;
&lt;h2 id=&#34;表达-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达-4&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;～てあげます&lt;br /&gt;
 “～てあげます” 表示说话人或者说话人一方的人为别人做某事，但含有赐恩于对方的意思，不太礼貌，不能面对面直接对尊长使用。&lt;br /&gt;
对尊长说话时，用征求对方意见的形式 “～ましょうか”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;それに&lt;br /&gt;
 “而且”。用于前后句的内容为累加关系，多用于口语。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;～&lt;ruby&gt;先&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;さき&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;br /&gt;
 表示移动性动作的到达地点或归属。如 “&lt;ruby&gt;引&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ひ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; っ&lt;ruby&gt;越&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;こ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; し先（搬迁的地址）” 指搬迁后居住的地方。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;ruby&gt;出張&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しゅっちょう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 先のホテルから電話がありました。 从出差地的宾馆打来了电话。&lt;/p&gt;
&lt;p&gt;其他例如：行き先（目的地，要去的地方）；旅行先（旅行的目的地）；&lt;ruby&gt;就職&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しゅうしょく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 先（就业的单位）；&lt;ruby&gt;送&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おき&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; り先（邮件的接受人和地点）&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;どの&lt;ruby&gt;辺&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;へん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;br /&gt;
 询问大致的场所时使用。回答时回答一个大致的场所，也可以只回答地名。&lt;br /&gt;
甲：引っ越し先が&lt;ruby&gt;決&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;き&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; まりました。 （搬迁的地址定下来了。）&lt;br /&gt;
乙：どの辺ですか。 （在哪儿？）&lt;br /&gt;
甲 ：新宿です。    （在新宿。）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注：类似 “～あたり”，“～辺” 也表示周边的意思，但 “辺” 必须和 “この / その / あの / どの” 等一起使用，不能加在表示具体场所的名词后。&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;&lt;ruby&gt;家具&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かぐ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; はどうしたんですか&lt;br /&gt;
日语的 “どうしたんですか” 可以用于不同的场面表示多种意思，在这里表示询问某物的购入方式。&lt;br /&gt;
&lt;ruby&gt;家具&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かぐ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; はどうしたんですか。     家具怎么样了。&lt;br /&gt;
—— もう買いました。明日&lt;ruby&gt;届&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;とど&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; けてもらいます。    已经买好了，明天送来。&lt;br /&gt;
そのチケット，どうしたんですか。    入场券怎么搞到手的？&lt;br /&gt;
—— インターネットで買ったんです。   在网上买的。&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="课程学习" scheme="https://ei4869.github.io/miyano/categories/Course-Study/" />
        <category term="日语" scheme="https://ei4869.github.io/miyano/categories/Course-Study/Japanese/" />
        <category term="课程" scheme="https://ei4869.github.io/miyano/tags/%E8%AF%BE%E7%A8%8B/" />
        <updated>2025-03-30T08:57:00.000Z</updated>
    </entry>
    <entry>
        <id>https://ei4869.github.io/miyano/Course-Study/Japanese/%E5%88%9D%E7%BA%A7%E4%B8%8A-%E7%AC%AC6%E5%8D%95%E5%85%83/</id>
        <title>单元六——再见！日本</title>
        <link rel="alternate" href="https://ei4869.github.io/miyano/Course-Study/Japanese/%E5%88%9D%E7%BA%A7%E4%B8%8A-%E7%AC%AC6%E5%8D%95%E5%85%83/"/>
        <content type="html">&lt;h1 id=&#34;第二十一课わたしは-すき焼やきを-食べた-ことが-あります&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第二十一课わたしは-すき焼やきを-食べた-ことが-あります&#34;&gt;#&lt;/a&gt; 第二十一课：わたしは　すき&lt;ruby&gt;焼&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;や&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; きを　食べた　ことが　あります&lt;/h1&gt;
&lt;h2 id=&#34;语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;动词的た形&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动词的た形&#34;&gt;#&lt;/a&gt; 动词的た形&lt;/h3&gt;
&lt;p&gt;即把て形的て换成た，把で换成だ。&lt;/p&gt;
&lt;h3 id=&#34;动た形-ことが-あります&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动た形-ことが-あります&#34;&gt;#&lt;/a&gt; [动 (た形)] ことが　あります&lt;/h3&gt;
&lt;p&gt;表示过去的经历，即 “（曾经）~ 过”。通常用于至少半年以前发生的事情，而在叙述 “昨天” 等离现在很近的以前的经历时，不能用此句型。本句型即可用于叙述经历的时间、次数，也可用于谈论某种经历。&lt;br /&gt;
否定形式是：“动词た形 + ことが  ありません”。强调完全没有某种经历时，可以加 “&lt;ruby&gt;一度&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;いちど&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; も”。&lt;br /&gt;
疑问形式是：“动词た形 + ことが  ありますか” 。疑问句一般只问有无某种经历。回答时，可以重复问句中的部分词语，也可以只说 “はい ，あります”“いいえ，ありません”。&lt;/p&gt;
&lt;p&gt;北京へ　行った　ことが　ありますか。        你去过北京吗？&lt;br /&gt;
—— いいえ，一度も　行った　ことが　ありません。  没有，一次也没去过。&lt;br /&gt;
—— いいえ，ありません。                  不，没有。&lt;/p&gt;
&lt;h3 id=&#34;动た形-後あとで~&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动た形-後あとで~&#34;&gt;#&lt;/a&gt; [动 (た形)] &lt;ruby&gt;後&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あと&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; で，～&lt;/h3&gt;
&lt;p&gt;表示动作在另一个动作之后发生时，使用该句型。&lt;br /&gt;
eg：映画を　見た　後で，&lt;ruby&gt;食事&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しょくじ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　しました。   看完电影后吃了饭。&lt;/p&gt;
&lt;p&gt;这个句型也可以以 “名词 + の + 後で” 的形式使用。&lt;br /&gt;
eg：仕事の　後で，映画を　見ます。  工作之后看电影。&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;前面学过 “前に”，后面必须是 “に”，而这里 “後で” 后面必须为 “で”，且 “～前に” 前面的动词必须为基本形，而 “～後で” 前面的动词必须为た形。&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&#34;动た形-ほうが-いいです&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动た形-ほうが-いいです&#34;&gt;#&lt;/a&gt; [动 (た形)] ほうが　いいです&lt;/h3&gt;
&lt;p&gt;用于在两种事物中进行选择时。“最好做～”。&lt;br /&gt;
否定表达形式为：“动词未然形 + ない ほうが　いいです”，也即 “动词ない形 + ほうが　いいです”，表示 “最好别那么做”。&lt;br /&gt;
当建议对方做理想的动作、行为时，句尾可加 “よ”。&lt;/p&gt;
&lt;p&gt;eg：&lt;br /&gt;
もっと　野菜を食べた　ほうが　いいですよ。      还是多吃点蔬菜好啊。&lt;br /&gt;
そんなに　&lt;ruby&gt;慌&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あわ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; てない　ほうが　いいです。   别那么慌张啊。&lt;/p&gt;
&lt;h3 id=&#34;动ましょうか-提议&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动ましょうか-提议&#34;&gt;#&lt;/a&gt; [动] ましょうか  [提议]&lt;/h3&gt;
&lt;p&gt;用于提议对方和自己一起做某事或向对方提议自己为对方做某事。 另外还有向对方确认自己的提议是否可行的意思。&lt;br /&gt;
何か　食べましょうか。  吃点什么吗？&lt;/p&gt;
&lt;p&gt;回答时，若意思为 A 向 B 提议为对方做某事时，则 B 说 “お&lt;ruby&gt;願&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ねが&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; いします”。若意思为 A 向 B 提议双方一起做某事时，则 B 说 “はい，そうしましょう” 或 “いいですね”。反对或拒绝提议时则说 “～ないで　ください” 或 “いいえ，ちょっと…”。&lt;/p&gt;
&lt;h2 id=&#34;表达&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;その　ほうが　いいです&lt;br /&gt;
名词及指示事物的词也可以后续 “ほうが　いいです” 来表示比较、选择的意思。&lt;br /&gt;
形式为：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;“名词の　ほうがいいです”&lt;/li&gt;
&lt;li&gt;“これ / それ / あれ　の　ほうがいいです”&lt;/li&gt;
&lt;li&gt;“この / その / あの ほうがいいです”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg:&lt;br /&gt;
&lt;ruby&gt; 速&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はや&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; いですから，&lt;ruby&gt;飛行機&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ひこうき&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; の　ほうがいいです。  因为速度快，还是坐飞机去比较好。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;何度&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なんど&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; か&lt;br /&gt;
 “几次”，在表示不定数量时，日语中疑问词后面必须加 “か”。类似还有 “いつか　どこか　何か”。&lt;br /&gt;
eg：仕事の　後で，何度か　見に　行った　ことが　あります。  下班后，去看过几次。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;９時&lt;ruby&gt;過&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;す&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ぎ&lt;br /&gt;
 “～&lt;ruby&gt;過&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;す&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ぎ” 用在表示时间或年龄的词语后面表示超过了该时间或年龄。用在表示时间的词语后面时，是 “数词 + 時 / 分 + 過ぎ” 的形式。用在表示年龄的词语后面时，是 “数词 + 過ぎ” 的形式，中间不加 “&lt;ruby&gt;歳&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;さい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;”。&lt;br /&gt;
eg：&lt;ruby&gt;昨夜&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ゆうべ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　１０時過ぎに　&lt;ruby&gt;地震&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じしん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; が　ありました。  昨晚 10 点刚过发生了地震。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第二十二课森さんは-毎晩-テレビを-見る&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第二十二课森さんは-毎晩-テレビを-見る&#34;&gt;#&lt;/a&gt; 第二十二课：森さんは　毎晩　テレビを　見る&lt;/h1&gt;
&lt;h2 id=&#34;语法-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法-2&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;敬体形和简体形&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#敬体形和简体形&#34;&gt;#&lt;/a&gt; 敬体形和简体形&lt;/h3&gt;
&lt;p&gt;之前学习的 “～ます”“～です” 是对长辈或关系不太亲密的人使用的形式，为敬体形。与此相反，若对方是同辈或晚辈，或者关系较密切时则使用 “简体形”。&lt;br /&gt;
动词本身具有敬体形和简体形，如敬体形包括：ます　ません　ました　ませんでした；简体形包括：动词基本形、ない形、た形。&lt;br /&gt;
但一类形容词、二类形容词、名词本身没有敬体形和简体形之分，只有在做谓语时，其谓语形式才有敬体形和简体形。&lt;/p&gt;
&lt;h3 id=&#34;动词的简体形&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动词的简体形&#34;&gt;#&lt;/a&gt; 动词的简体形&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;敬体形&lt;/th&gt;
&lt;th&gt;简体形&lt;/th&gt;
&lt;th&gt;敬体形&lt;/th&gt;
&lt;th&gt;简体形&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;现在将来形式&lt;/td&gt;
&lt;td&gt;肯定&lt;/td&gt;
&lt;td&gt;買います (买)&lt;/td&gt;
&lt;td&gt;買う （基本形）&lt;/td&gt;
&lt;td&gt;あります (有)&lt;/td&gt;
&lt;td&gt;ある&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;否定&lt;/td&gt;
&lt;td&gt;買いません&lt;/td&gt;
&lt;td&gt;買わない (ない形)&lt;/td&gt;
&lt;td&gt;ありません&lt;/td&gt;
&lt;td&gt;ない&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;过去形式&lt;/td&gt;
&lt;td&gt;肯定&lt;/td&gt;
&lt;td&gt;買いました&lt;/td&gt;
&lt;td&gt;買った （た形）&lt;/td&gt;
&lt;td&gt;ありました&lt;/td&gt;
&lt;td&gt;あった&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;否定&lt;/td&gt;
&lt;td&gt;買いませんでした&lt;/td&gt;
&lt;td&gt;買わなかった (なかった形)&lt;/td&gt;
&lt;td&gt;ありませんでした&lt;/td&gt;
&lt;td&gt;なかった&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;コーヒー，飲む？        喝咖啡吗？&lt;br /&gt;
—— ううん，飲まない。   不，不喝。  （飲みません -&amp;gt; 飲まない）&lt;/p&gt;
&lt;p&gt;注：简体的会话中常省略助词。&lt;/p&gt;
&lt;h3 id=&#34;一类形容词谓语形式的简体形&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一类形容词谓语形式的简体形&#34;&gt;#&lt;/a&gt; 一类形容词谓语形式的简体形&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;敬体形&lt;/th&gt;
&lt;th&gt;简体形&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;现在将来形式&lt;/td&gt;
&lt;td&gt;肯定&lt;/td&gt;
&lt;td&gt;忙しいです (忙)&lt;/td&gt;
&lt;td&gt;忙しい&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;否定&lt;/td&gt;
&lt;td&gt;忙しくないです&lt;/td&gt;
&lt;td&gt;忙しくない&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;过去形式&lt;/td&gt;
&lt;td&gt;肯定&lt;/td&gt;
&lt;td&gt;忙しかったです&lt;/td&gt;
&lt;td&gt;忙しかった&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;否定&lt;/td&gt;
&lt;td&gt;忙しく　なかったです&lt;/td&gt;
&lt;td&gt;忙しく　なかった&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;就是去掉です即为简体形。 （形容词的肯定、否定、过去、过去否定语法见&lt;a href=&#34;../%E5%8A%A8%E8%AF%8D%E5%92%8C%E5%BD%A2%E5%AE%B9%E8%AF%8D%E7%9F%A5%E8%AF%86%E7%82%B9/&#34;&gt; “动词和形容词知识点”&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;昨日の　試験，どうだった？          昨天的考试怎么样啊？&lt;br /&gt;
—— ちょっと　&lt;ruby&gt;難&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;むずか&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; しかった。     稍微有点难。&lt;/p&gt;
&lt;p&gt;注：形 1 的简体形与形二以及名词不同，后面不能加 “だ”。&lt;/p&gt;
&lt;h3 id=&#34;二类形容词谓语形式的简体形&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二类形容词谓语形式的简体形&#34;&gt;#&lt;/a&gt; 二类形容词谓语形式的简体形&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;敬体形&lt;/th&gt;
&lt;th&gt;简体形&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;现在将来形式&lt;/td&gt;
&lt;td&gt;肯定&lt;/td&gt;
&lt;td&gt;簡単です (简单)&lt;/td&gt;
&lt;td&gt;簡単だ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;否定&lt;/td&gt;
&lt;td&gt;簡単では　ありません&lt;/td&gt;
&lt;td&gt;簡単ではない&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;过去形式&lt;/td&gt;
&lt;td&gt;肯定&lt;/td&gt;
&lt;td&gt;簡単でした&lt;/td&gt;
&lt;td&gt;簡単だった&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;否定&lt;/td&gt;
&lt;td&gt;簡単では　ありませんでした&lt;/td&gt;
&lt;td&gt;簡単では　なかった&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;现在将来形式的肯定疑问句用去掉简体形中的 “だ” 的形式（名词也一样）。&lt;/p&gt;
&lt;p&gt;この　ネクタイ，&lt;ruby&gt;派手&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はで&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;？           这台领带花哨吗？&lt;br /&gt;
—— ううん，全然　派手じゃ　ないわ。     不，一点都不花哨。&lt;/p&gt;
&lt;p&gt;森さんの　アパート，&lt;ruby&gt;静&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しず&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; か？   森先生居住的公寓安静吗？&lt;br /&gt;
—— うん，静かだよ。         嗯，很安静。&lt;/p&gt;
&lt;h3 id=&#34;名词谓语形式的简体形&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名词谓语形式的简体形&#34;&gt;#&lt;/a&gt; 名词谓语形式的简体形&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;敬体形&lt;/th&gt;
&lt;th&gt;简体形&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;现在将来形式&lt;/td&gt;
&lt;td&gt;肯定&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;晴&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;は&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; れです (简单)&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;晴&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;は&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; れだ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;否定&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;晴&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;は&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; れでは　ありません&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;晴&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;は&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; れではない&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;过去形式&lt;/td&gt;
&lt;td&gt;肯定&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;晴&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;は&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; れでした&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;晴&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;は&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; れだった&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;否定&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;晴&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;は&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; れでは　ありませんでした&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;晴&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;は&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; れでは　なかった&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;和第二类形容词谓语形式的简体形同种变法。&lt;/p&gt;
&lt;p&gt;昨日，スキー&lt;ruby&gt;場&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じょう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　雪だった？                  昨天滑雪场下雪了吗？&lt;br /&gt;
—— ううん，雪じゃ　なかったよ。いい　天気だった。   没有下雪啊，天气挺好的。&lt;/p&gt;
&lt;h3 id=&#34;小句けど小句-转折-铺垫&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小句けど小句-转折-铺垫&#34;&gt;#&lt;/a&gt; [小句] けど，[小句]　[转折、铺垫]&lt;/h3&gt;
&lt;p&gt;“けど” 连接两个句子，表示转折，起着把两个句子归纳成一个句子的作用，用于口语。&lt;/p&gt;
&lt;p&gt;昨日の　試験，どうだった？          昨天的考试怎么样啊？&lt;br /&gt;
—— ちょっと　難しかったけど，まあまあ　できたよ。   有点难，不过都做出来了。&lt;/p&gt;
&lt;p&gt;另外，“けど” 花园不表示转折而表示铺垫的用法。&lt;br /&gt;
来週，&lt;ruby&gt;送別会&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;そうべつかい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　するけど，&lt;ruby&gt;都合&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;つごう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　どうかな？    下星期要开一个欢送会，你时间方便吗？&lt;/p&gt;
&lt;h2 id=&#34;表达-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达-2&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;敬体和简体&lt;br /&gt;
正式场合和书信一般用敬体；与家人、朋友交谈时用简体，有关法律的文章、报纸、商业文件等也都用简体。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;お母さん，あの　&lt;ruby&gt;玩具&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おもちゃ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; が　欲しい。         妈妈，我想要那个玩具。&lt;br /&gt;
昨日　駅前で　&lt;ruby&gt;大&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おお&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; きい　&lt;ruby&gt;火事&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かじ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; が　あった。    昨天车站附近发生了很大的火灾。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;简体疑问&lt;br /&gt;
用简体表示疑问时，一般名词句、形容词句省略敬体形的 “～ですか”，句尾读升调。动词句则把动词敬体形变成简体形，去掉疑问助词 “か”，句尾读升调。另外书写时为例表示疑问需要加 “？”&lt;br /&gt;
 これ，日本&lt;ruby&gt;製&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;せい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;？  这个，是日本货？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;うん　和 ううん&lt;br /&gt;
简体会话中，“はい” 说成 “うん”，“いいえ” 说成 “ううん”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;简体助词&lt;br /&gt;
 “かな” 和 “の” 这两个助词只能接在简体形后面。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;助词 “かな” 一般用于自言自语的场合，如有听话人在场则表示通过让对方听到自己的自问自答而向对方提供一种不太确定的信息。&lt;br /&gt;
今日　李さんは　&lt;ruby&gt;来&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;く&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; るかな。 小李今天会来吗？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;助词 “の” 用于要求说明或确认某事。&lt;br /&gt;
ああ，小野さん，どうしたの？    小野女士，你好。有什么事吗？&lt;br /&gt;
寒いの？    冷吗？&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;
&lt;p&gt;～って  [传闻]&lt;br /&gt;
“&lt;ruby&gt;太田&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おおた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;，&lt;ruby&gt;今度&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;こんど&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　中国へ　&lt;ruby&gt;転勤&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;てんきん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; だって（听说太田要调到中国去工作）”，这里的 “&lt;ruby&gt;転勤&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;てんきん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; だって” 是在简体形 “&lt;ruby&gt;転勤&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;てんきん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; だ” 的后面加 “って” 表示听说、传闻。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;省略 [简体句的省略]&lt;br /&gt;
 在口语中，简体句中的一些音往往不发，如 “森さんの　&lt;ruby&gt;電話番号&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;でんわばんご&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;，知ってる？”，其中省略了 “ている” 的 “い”，“電話番号を” 中的助词 “を” 也省略了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;“わ” 和 “よ”&lt;br /&gt;
 都可用于简体句或敬体句句尾。“便利よ”“大きいですわ”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;电话号码的读法&lt;br /&gt;
数字要一个一个读。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;“～&lt;ruby&gt;方&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;”&lt;br /&gt;
 动词 “ます” 形去掉 “ます” 的形式加上 “&lt;ruby&gt;方&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;” 就有 “~ 的做法” 的意思，用来表示动作的方式。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ます形&lt;/th&gt;
&lt;th&gt;去掉ます&lt;/th&gt;
&lt;th&gt;~&lt;ruby&gt; 方&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;      做法&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;ruby&gt;話&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はな&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; します&lt;/td&gt;
&lt;td&gt;話し&lt;/td&gt;
&lt;td&gt;話し&lt;ruby&gt;方&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;     说法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;ruby&gt;読&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;よ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; みます&lt;/td&gt;
&lt;td&gt;読み&lt;/td&gt;
&lt;td&gt;読み&lt;ruby&gt;方&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;     读法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;ruby&gt;作&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;つく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ります&lt;/td&gt;
&lt;td&gt;作り&lt;/td&gt;
&lt;td&gt;作り&lt;ruby&gt;方&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;     做法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;やります&lt;/td&gt;
&lt;td&gt;やり&lt;/td&gt;
&lt;td&gt;やり&lt;ruby&gt;方&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;     办法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;ruby&gt;使&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;つか&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; います&lt;/td&gt;
&lt;td&gt;使い&lt;/td&gt;
&lt;td&gt;使い&lt;ruby&gt;方&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;     用法&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;第二十三课休みの-日ひ散歩したり-買い物に-行ったり-します&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第二十三课休みの-日ひ散歩したり-買い物に-行ったり-します&#34;&gt;#&lt;/a&gt; 第二十三课：休みの　&lt;ruby&gt;日&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ひ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;，散歩したり　買い物に　行ったり　します&lt;/h1&gt;
&lt;h2 id=&#34;语法-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法-3&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;动たり-动たり-します&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动たり-动たり-します&#34;&gt;#&lt;/a&gt; [动] たり [动] たり します&lt;/h3&gt;
&lt;p&gt;用于列举若干种有代表性的动作时，即 “动词た形 + り　します”，“します” 需要根据上下文判断时态。&lt;/p&gt;
&lt;p&gt;&lt;ruby&gt;吉田&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;よしだ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; さんは　&lt;ruby&gt;日曜日&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;にちようび&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; には　何を　しますか。      吉田先生，你星期天都做什么？&lt;br /&gt;
—— 家の　&lt;ruby&gt;掃除&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;そうじ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　したり　&lt;ruby&gt;洗濯&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;せんたく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　したり　します。   打扫打扫房间，洗洗衣服。&lt;br /&gt;
（する -&amp;gt; して -&amp;gt; した -&amp;gt; したり）&lt;/p&gt;
&lt;p&gt;注：动词た形即动词简体的过去式。&lt;/p&gt;
&lt;h3 id=&#34;形1かったり-形1かったりです形2だったり-形2だったりです名だったり-名だったりです&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#形1かったり-形1かったりです形2だったり-形2だったりです名だったり-名だったりです&#34;&gt;#&lt;/a&gt; [形 1] かったり　[形 1] かったりです；[形 2] だったり　[形 2] だったりです；[名] だったり　[名] だったりです&lt;/h3&gt;
&lt;p&gt;用于表示状态或状况有多种可能时，其构成形式是把形 1 た形、形 2 た形、名词た形之后加り。&lt;/p&gt;
&lt;p&gt;飛行機の　チケットは　高かったり　安かったりです。          飞机票有时贵，有时便宜。&lt;br /&gt;
この公園は　時間に　よって　静だったり　にぎやかだったりです。  根据时间，这个公园有时寂静有时热闹。&lt;br /&gt;
日本語の　先生は　中国人だったり　日本人だったりです。      日语老师既有中国人也有日本人。&lt;/p&gt;
&lt;h3 id=&#34;小句-か&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小句-か&#34;&gt;#&lt;/a&gt; [小句] + か&lt;/h3&gt;
&lt;p&gt;用于表示某种不确定的内容。&lt;/p&gt;
&lt;h3 id=&#34;小句-か-どうか&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小句-か-どうか&#34;&gt;#&lt;/a&gt; [小句] + か　どうか&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;将不包含疑问词的疑问句作为一个长句中的一部分时，将动词、一类形容词的敬体形变成&lt;mark&gt;简体形&lt;/mark&gt;，并在后面加上 “か　どうか”。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;eg：&lt;br /&gt;
私は　&lt;ruby&gt;今年&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ことし&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; の　夏，北京へ　行きますか。+ 私は　分かりません。&lt;br /&gt;
可以简化为：私は　今年の　夏，北京へ　&lt;ins class=&#34;dot&#34;&gt;行くか　どうか&lt;/ins&gt;　分かりません。  我今年夏天去不去北京，还不知道。&lt;/p&gt;
&lt;p&gt;私は　この料理が　辛いか　どうか　知りません。  我不知道这道菜辣不辣。&lt;/p&gt;
&lt;p&gt;小野さんは　仕事が　&lt;ruby&gt;終&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;お&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; わったか　どうか　&lt;ruby&gt;聞&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;き&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; いて　ください。    问一下小野女士，工作完了没有。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;另外，也可以重复使用动词的 “基本形” 和 “ない形”，表达和上面相同的含义。&lt;br /&gt;
私は　今年の　夏，北京へ　&lt;ins class=&#34;dot&#34;&gt;行く&lt;/ins&gt;か　&lt;ins class=&#34;dot&#34;&gt;行かない&lt;/ins&gt;か　分かりません。&lt;br /&gt;
私は　この　料理が　&lt;ins class=&#34;dot&#34;&gt;辛い&lt;/ins&gt;か　&lt;ins class=&#34;dot&#34;&gt;辛くない&lt;/ins&gt;か　知りません。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果 “～か　どうか” 的前面为名词或二类形容词时，“～か　どうか” 直接接在名词或二类形容词后，&lt;mark&gt;其间不加 “だ”&lt;/mark&gt;。另外，“～か どうか” 小句中的主语后面必须用 “が”，而不能用 “は”。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;私は　キムさん&lt;ins class=&#34;dot&#34;&gt;が&lt;/ins&gt;　中国人か　どうか　知りません。        我不知道金女士是不是中国人。&lt;br /&gt;
私は　キムさん&lt;ins class=&#34;dot&#34;&gt;が&lt;/ins&gt;　&lt;ins class=&#34;dot&#34;&gt;中国人&lt;/ins&gt;か　&lt;ins class=&#34;dot&#34;&gt;中国人では　ない&lt;/ins&gt;か　知りません。&lt;/p&gt;
&lt;h3 id=&#34;疑问词小句-か&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#疑问词小句-か&#34;&gt;#&lt;/a&gt; [疑问词小句] + か&lt;/h3&gt;
&lt;p&gt;将包含 “&lt;ruby&gt;何&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なに&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　&lt;ruby&gt;誰&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;だれ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　どこ” 等的疑问句，作为一个长句中的一部分使用时，需将疑问词小句的动词、一类形容词的敬体形变成简体形，再加 “か”。&lt;br /&gt;
かぎが　どこに　&lt;ins class=&#34;dot&#34;&gt;ある&lt;/ins&gt;か　教えて　ください。 请告诉我钥匙在哪？   あります + か -&amp;gt; ある + か&lt;br /&gt;
昨日　何を　&lt;ins class=&#34;dot&#34;&gt;食べた&lt;/ins&gt;か　忘れました。  忘记昨天吃什么了。&lt;br /&gt;
どの　料理が　&lt;ins class=&#34;dot&#34;&gt;辛い&lt;/ins&gt;か　知りません。    不知道哪道菜辣。&lt;/p&gt;
&lt;p&gt;与上面的 “～か　どうか” 相同，“か” 前面出现名词或二类形容词时，“～か　どうか” 直接接在名词或二类形容词后，其间不加 “だ”。&lt;br /&gt;
この　&lt;ruby&gt;歌&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;うた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; が　誰の　&lt;ins class=&#34;dot&#34;&gt;&lt;ruby&gt;歌&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;うた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;/ins&gt; か　知って　いますか。  你知道这是谁的歌吗？&lt;/p&gt;
&lt;h2 id=&#34;表达-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达-3&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;～に　よって&lt;br /&gt;
 “根据...”，在句子根据上下文灵活翻译。也可用 “～に　よります” 的形式用于句尾。&lt;br /&gt;
&lt;ruby&gt;結婚式&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;けっこんしき&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; の　やり方は　&lt;ruby&gt;国&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;くに&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; に　よって　&lt;ruby&gt;違&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ちが&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; います。   结婚典礼的形式因国别而异。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;この　電車は　いつも　&lt;ruby&gt;込&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;こ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; みますか。 这电车总是很挤吗？&lt;br /&gt;
—— いえ，時間に　よります。 不，分时间。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;高かったり　安かったり，いるいる　あります&lt;br /&gt;
一类形容词、二类形容词以及名词后续 “たり” 时，句尾并不是总要后续 “です”。可根据情况接其他形式。&lt;br /&gt;
eg：&lt;ruby&gt;通勤&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;つうきん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　電車だったり　車だったり，日に　よって　違います。   有时坐电车上班，有时开车上班，不一定。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;あっ，そうだ&lt;br /&gt;
突然想到某事，或突然想起某事时的表达，“啊，对了”，“啊，想起来了”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;浴衣&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ゆかた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;br /&gt;
 浴衣，日本典型的夏季和服。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第二十四课李さんは-もう-すぐ-来くると-思おもいます&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第二十四课李さんは-もう-すぐ-来くると-思おもいます&#34;&gt;#&lt;/a&gt; 第二十四课：李さんは　もう　すぐ　&lt;ruby&gt;来&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;く&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ると　&lt;ruby&gt;思&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おも&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; います&lt;/h1&gt;
&lt;h2 id=&#34;语法-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法-4&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;小句简体形と-思います&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小句简体形と-思います&#34;&gt;#&lt;/a&gt; [小句 (简体形)] と　思います&lt;/h3&gt;
&lt;p&gt;表示&lt;mark&gt;说话人的思考内容&lt;/mark&gt;时，在句子后面加 “と　思います”，“～と　思います” 前的小句谓语必须是简体形。&lt;/p&gt;
&lt;p&gt;田中さんは　&lt;mark&gt;&lt;ruby&gt;来&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;こ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ない&lt;/mark&gt;　と思います。   我想田中先生不会来。    (动词)&lt;br /&gt;
 日本は　&lt;mark&gt;きれいだ&lt;/mark&gt;　と思います。  我觉得日本很干净。          (形 2)&lt;br /&gt;
 明日は　いい　&lt;mark&gt;天気だ&lt;/mark&gt;　と思います。  我觉得明天会是个好天气。 （名词）&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;注：一般习惯把小句谓语和と连起来读，即 “天気だと”。&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;“～と　思います”（思考的根据为现在时）只能表示说话人的思考内容，但 “～と　思いました”（发表感想或曾经认为怎么样）和 “～と　思っています”（思考的根据为过去时）既可以表示说话人的思考内容，也可以表示说话人以外的人的思考内容。&lt;/p&gt;
&lt;p&gt;&lt;ruby&gt;馬&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ば&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; さんは　日本へ　行きたい　と　思って　います。　　小马想去日本。&lt;/p&gt;
&lt;h3 id=&#34;名人は-小句简体形と-言いいました&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名人は-小句简体形と-言いいました&#34;&gt;#&lt;/a&gt; [名 (人)] は　[小句 (简体形)] と　&lt;ruby&gt;言&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;い&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; いました&lt;/h3&gt;
&lt;p&gt;向第三者转述他人所说的话时，在所说的话后加 “～と　&lt;ruby&gt;言&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;い&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; いました”。&lt;br /&gt;
&lt;ruby&gt;陳&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ちん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; さんは　パーティーに　行く　と　&lt;ruby&gt;言&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;い&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; いました。  老陈说要去参加联欢会。&lt;/p&gt;
&lt;p&gt;如果想明确指出是向谁说的，则在句子中加入 “名词 + に”。&lt;br /&gt;
小野さんは　李さんに　ちょっと　休みたい　と　&lt;ruby&gt;言&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;い&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; いました。 小野女士跟小李说想休息一下。&lt;/p&gt;
&lt;p&gt;如果转述某人反复说起的事情时，用 “～と　言って　います”。&lt;br /&gt;
来週の　ハイキングに　&lt;ruby&gt;張&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ちょう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; さんも　行きたい　と　言って　います。  小张说他也想参加下星期的郊游。&lt;/p&gt;
&lt;p&gt;注：“～と　思います” 和 “～と　言いました” 前面出现名词或二类形容词小句时必须加 “だ”。&lt;br /&gt;
あそこは　駅だと　思います。    我想那儿是车站。&lt;/p&gt;
&lt;h3 id=&#34;~のです-んです&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#~のです-んです&#34;&gt;#&lt;/a&gt; ～のです　/ んです&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;～のです　/ んです&lt;br /&gt;
 “～のです　/ んです” 表示所讲的内容与前句或前项内容有所关联。用于说明状况或解释原因、理由。“～のです” 多用于书面语，而 “～んです” 是 “～のです” 的口语形式。“～のです　/ んです” 前接简体形，但是名词和二类形容词的现在将来形的肯定形，“だ” 要换成 “な”。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;すみません，頭が　&lt;ruby&gt;痛&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;いた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; いんです。       对不起，我头疼。        （形 1）&lt;/p&gt;
&lt;p&gt;パソコンは　&lt;ruby&gt;止&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;や&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; めた　ほうがいいですよ。     烟还是戒了为好。&lt;br /&gt;
—— そうなんですが，やめる　ことが　できないんです。     是啊，但就是戒不掉。    （动词）&lt;/p&gt;
&lt;p&gt;すごい　人気にんきですね。      他可真受欢迎啊。&lt;br /&gt;
—— ええ，あの　&lt;ruby&gt;歌手&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かしゅ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　日本では　とても　&lt;ruby&gt;有名&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ゆうめいなん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; です。     是，那个歌手在日本非常有名。  （名词）&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;どうして　～のですか / んですか&lt;br /&gt;
前面学过询问理由的 “どうしてですか”。询问理由更完整的形式是 “どうして　～のですか / んですか”。回答词问句时也要用 “～のです / んです” 的形式。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;どうして　食べないんですか。        为什么不吃？&lt;br /&gt;
—— もう　お&lt;ruby&gt;腹&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なか&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; が　いっぱいなんです。  已经吃饱了。&lt;/p&gt;
&lt;h3 id=&#34;小句が小句-铺垫&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小句が小句-铺垫&#34;&gt;#&lt;/a&gt; [小句] が，[小句]  [铺垫]&lt;/h3&gt;
&lt;p&gt;&amp;quot;が&amp;quot; 用于提示接下来要说的内容，即铺垫。与前面学过的表示铺垫的 “けど” 相比，“が” 多用于书面语。&lt;/p&gt;
&lt;p&gt;李さんを　&lt;ruby&gt;探&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;さが&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; して　いるんですが，どこに　いますか。  我在找小李，她在哪儿。&lt;/p&gt;
&lt;h2 id=&#34;表达-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达-4&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;～と　思います&lt;br /&gt;
用于向别人陈述自己的想法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;どうやって～ [询问方法]&lt;br /&gt;
“どう” 和动词 “やる” 的て形 “やって” 组成。一般询问方法时用 “どうやって”，而询问理由时则用 “どうして”。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;東京タワーへ　行きたいんですが，どうやって　いきますか。    我想去东京塔，请问怎么走？&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;～に　ついて&lt;br /&gt;
 “关于～”，一般后续 “&lt;ruby&gt;考&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かんが&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; えます（思考）”“思います（想）”“&lt;ruby&gt;研究&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;けんきゅう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;（研究）” 等表示思维活动的词语。用作标题时，如 “日本の　音楽に　やって（关于日本音乐）” 时，一般省略后面的动词。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;とうとう&lt;br /&gt;
副词，相当于 “终于”“结局”“到底” 等，表示不论结果好坏，想到的事态经过一定的阶段终于实现了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;とうとう お&lt;ruby&gt;別&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;わか&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; れですね。  终于要分别了。&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;分别的寒暄语&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;お&lt;ruby&gt;世話&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;せわ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; に　なりました ：收到别人的照顾和帮助，分手时所说的表示感谢的话。&lt;/li&gt;
&lt;li&gt;お世話になります　：今后将要得到别人的帮助或指导时使用。&lt;/li&gt;
&lt;li&gt;～に　よろしく　お&lt;ruby&gt;伝&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;つた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; え　ください :“请向～问好”，如果双方关系亲密，则直接 “～に　よろしく”。&lt;/li&gt;
&lt;li&gt;お&lt;ruby&gt;元気&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;げんき&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; で : “请多保重”，一般用于时间较长的分别，意为祝愿对方身体健康，对方必须是健康状况良好的人，“お&lt;ruby&gt;大事&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;だいじ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; に（请多保重）” 则只能对生病的人或受伤的人使用。&lt;br /&gt;
お&lt;ruby&gt;気&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;き&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; をつけて ： “小心”，用于一般性分别，意为祝愿对方路途平安。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;&lt;ruby&gt;出張中&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しゅっちょうちゅう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;br /&gt;
 表示某个动作正在进行用 “～&lt;ruby&gt;中&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ちゅう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;”，一类、二类动词后续 “&lt;ruby&gt;中&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ちゅう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;” 时，用 “ます形” 去掉 “ます” 的形式。三类动词后续 “&lt;ruby&gt;中&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ちゅう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;” 用 “ます形” 去掉 “します” 的形式。三类动词 “&lt;ruby&gt;来&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;き&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ます” 不能后续 “&lt;ruby&gt;中&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ちゅう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;”。另外并非所有的一类、二类动词都可以后续 “&lt;ruby&gt;中&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ちゅう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;”。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;森さんに　何度も　電話を　かけましたが，&lt;ruby&gt;話&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はな&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; し&lt;ruby&gt;中&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ちゅう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; でした。  给森先生打了好多次电话，一直占线。&lt;/p&gt;
</content>
        <category term="课程学习" scheme="https://ei4869.github.io/miyano/categories/Course-Study/" />
        <category term="日语" scheme="https://ei4869.github.io/miyano/categories/Course-Study/Japanese/" />
        <category term="课程" scheme="https://ei4869.github.io/miyano/tags/%E8%AF%BE%E7%A8%8B/" />
        <updated>2025-03-24T08:59:00.000Z</updated>
    </entry>
    <entry>
        <id>https://ei4869.github.io/miyano/Course-Study/FPGA/FPGA%E5%AD%A6%E4%B9%A0(%E4%B8%83)-IP%E6%A0%B8%E4%B9%8BPLL/</id>
        <title>FPGA学习(七)-IP核之PLL</title>
        <link rel="alternate" href="https://ei4869.github.io/miyano/Course-Study/FPGA/FPGA%E5%AD%A6%E4%B9%A0(%E4%B8%83)-IP%E6%A0%B8%E4%B9%8BPLL/"/>
        <content type="html">&lt;h1 id=&#34;前言&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h1&gt;
&lt;p&gt;IP 核即 intellectual property core，知识产权核，是 ASIC 或 FPGA 中预先设计好的电路功能模块，特点是：常用、复杂、可靠性高、提高开发效率。但也有局限性：IP 不能跨平台使用即移植性差、功能可调整空间小、部分需付费。&lt;/p&gt;
&lt;p&gt;Xilinx 的 Vivado 一般自带许多常用的 IP 核，例如 ILA (Integrated Logic Analyzer) 集成逻辑分析器，用于进行在线逻辑分析仪调试。&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/7.1.jpg&#34; title=&#34;ILA模块图&#34; style=&#34;max-width: 70%; height: auto;&#34;&gt;&lt;/p&gt;
&lt;p&gt;如图，一般 ILA 用于监控逻辑内部信号和端口信号，信号流向是 FPGA 到电脑，用于在电脑观测信号；VIO 即 Virtual Input/Outpu 用于实时监控和驱动逻辑内部信号和端口信号，信号流向是电脑到 FPGA，用于电脑发送驱动信号到 FPGA 触发某些信号或动作。&lt;/p&gt;
&lt;p&gt;ILA 属于通过软件实现的逻辑分析仪，需要调用 FPGA 的逻辑资源。添加 ILA 的方法一般是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;添加 ILA 的 IP 核，并在代码中对其例化，需要调试的信号在哪里，就需要在哪里例化。   ☑&lt;/li&gt;
&lt;li&gt;在原理图、网表文件中 &lt;code&gt;make debug&lt;/code&gt;     ☑&lt;/li&gt;
&lt;li&gt;手动在 XDC 约束文件中编写 TCL XDC 调试命令&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于第二种方法，如果在网表中的信号端口被 Vivado 编译中优化后位宽发生变化了，需要在代码中进行修改如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(*make_debug = &amp;quot;true&amp;quot;*) reg [9:0] cnt_2ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;改好代码后重新综合，从而确保正确添加需要调试的信号。&lt;/p&gt;
&lt;h1 id=&#34;时钟管理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#时钟管理&#34;&gt;#&lt;/a&gt; 时钟管理&lt;/h1&gt;
&lt;p&gt;Xilinx FPGA 的时钟管理 CMT（Clock Management Tiles）：时钟管理单元，可以对时钟进行管理，具有时钟倍频、分频、相位偏移、可编程占空比和优化抖动等功能。&lt;br /&gt;
CMT 由 PLL（Phase Locked Loop，锁相环）和 MMCM（mixed-mode clock，混合模式时钟）组成，PLL 是一种时钟反馈控制电路，其特点是利用外部输入的参考信号控制环路内部震荡信号的频率和相位。MMCM 是在 PLL 基础上加入 DCM（数字时钟管理单元）的一部分以进行精细的相移，即 MMCM 在 PLL 的基础上加上了相位动态调整功能 MMCM 相对 PLL 的优势就是相位可动态调整，但 PLL 占用的面积更小。（即 MMCM 包括了 PLL）&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/7.2.jpg&#34; title=&#34;PLL分频原理&#34; style=&#34;max-width: 70%; height: auto;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;实验任务&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#实验任务&#34;&gt;#&lt;/a&gt; 实验任务&lt;/h1&gt;
&lt;p&gt;使用开发板输出 4 路不同频率或相位的时钟，时钟分别为 100Mhz，100Mhz（相位偏移 180 度）、50Mhz 和 25Mhz。将四路时钟分别输出至扩展口的端口，并通过示波器来测量输出结果是否正确。&lt;/p&gt;
&lt;h1 id=&#34;实现思路&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#实现思路&#34;&gt;#&lt;/a&gt; 实现思路&lt;/h1&gt;
&lt;div style=&#34;max-width: 550px; margin: 0 auto;&#34;&gt;
  &lt;div style=&#34;position: relative; padding-bottom: 72.73%; height: 0; overflow: hidden;&#34;&gt;
    &lt;iframe 
      src=&#34;https://zhimap.com/m/apZgwBLR&#34; 
      frameborder=&#34;0&#34; 
      style=&#34;position: absolute; top:0; left:0; width:100%; height:100%;&#34; 
      sandbox=&#34;allow-scripts allow-same-origin&#34;&gt;
    &lt;/iframe&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h1 id=&#34;代码实现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#代码实现&#34;&gt;#&lt;/a&gt; 代码实现&lt;/h1&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;span&gt;ip_clk_wiz.v&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//-----------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Design Name: ip_clk_wiz&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// File Name: ip_clk_wiz.v&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Function: PLL 时钟模块，输出四路时钟，验证 IP 核的时钟输出&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Coder: Rei&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Date: 2025.03.24&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//-----------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; ip_clk_wiz &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;           sys_clk&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;           sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;output&lt;/span&gt;          clk_100m&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;output&lt;/span&gt;          clk_100m_180deg&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;output&lt;/span&gt;          clk_50m&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;output&lt;/span&gt;          clk_25m&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt;        locked&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;                       &lt;span class=&#34;token comment&#34;&gt;// 锁定信号，锁定信号有效时，表示时钟已经稳定&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt;        rst_n&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;assign&lt;/span&gt;      rst_n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; sys_rst_n &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; locked&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 该信号一般用于其他信号的复位信号，即复位信号与锁定信号同时有效时，复位信号有效&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    clk_wiz_0 &lt;span class=&#34;token function&#34;&gt;u_clk_wiz_0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clock_out1     &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;clk_100m&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;           &lt;span class=&#34;token comment&#34;&gt;// 100MHz 时钟输出&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clock_out2     &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;clk_100m_180deg&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;// 100MHz 时钟输出，180 度相位&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clock_out3     &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;clk_50m&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;            &lt;span class=&#34;token comment&#34;&gt;// 50MHz 时钟输出&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clock_out4     &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;clk_25m&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;            &lt;span class=&#34;token comment&#34;&gt;// 25MHz 时钟输出&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;reset          &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;              &lt;span class=&#34;token comment&#34;&gt;// 复位信号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;locked         &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;locked&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;             &lt;span class=&#34;token comment&#34;&gt;// 锁定信号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clk_in1        &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys_clk&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;              &lt;span class=&#34;token comment&#34;&gt;// 输入时钟&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;就是简单的端口定义，以及根据时钟 IP 核模板进行例化，但首先需要在 Vivado 中进行时钟 IP 核的配置。&lt;/p&gt;
&lt;h1 id=&#34;仿真结果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#仿真结果&#34;&gt;#&lt;/a&gt; 仿真结果&lt;/h1&gt;
&lt;p&gt;由于 IP 核的封闭性，Xilinx 的 IP 核不能直接在 Modelsim 里仿真，因此有两种仿真方式：一是直接使用 Vivado 自带调试器；二是 Vivado 生成仿真库，并进行相关配置，之后在 Vivado 里运行仿真就能跳转到 Modelsim 进行仿真。&lt;/p&gt;
&lt;p&gt;测试代码：&lt;/p&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;span&gt;tb_ip_clk_wiz.v&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token constant&#34;&gt;`timescale&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;ns&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;ns  &lt;span class=&#34;token comment&#34;&gt;// Time scale is set to 1ns/1ns&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;tb_ip_clk_wiz&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; CLK_PERIOD &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 50MHz&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;         sys_clk&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;        &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;         sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt;        clk_100m            &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt;        clk_100m_180deg     &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt;        clk_50m             &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt;        clk_25m             &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;        &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;initial&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sys_clk &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sys_rst_n &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#200&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sys_rst_n &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token important&#34;&gt;always&lt;/span&gt; #&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CLK_PERIOD&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; sys_clk &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;sys_clk&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 时钟周期为 20ns&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ip_clk_wiz u_ip_clk_wiz &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sys_clk&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys_clk&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;                           &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;          &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sys_rst_n&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;                       &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clk_100m               &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;clk_100m&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;          &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;                    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clk_100m_180deg        &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;clk_100m_180deg&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;               &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clk_50m                &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;clk_50m&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;           &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clk_25m                &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;clk_25m&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;           &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="课程学习" scheme="https://ei4869.github.io/miyano/categories/Course-Study/" />
        <category term="FPGA" scheme="https://ei4869.github.io/miyano/categories/Course-Study/FPGA/" />
        <category term="课程" scheme="https://ei4869.github.io/miyano/tags/%E8%AF%BE%E7%A8%8B/" />
        <category term="FPGA" scheme="https://ei4869.github.io/miyano/tags/FPGA/" />
        <updated>2025-03-24T02:16:00.000Z</updated>
    </entry>
    <entry>
        <id>https://ei4869.github.io/miyano/Course-Study/FPGA/FPGA%E5%AD%A6%E4%B9%A0(%E5%85%AD)-%E5%91%BC%E5%90%B8%E7%81%AF/</id>
        <title>FPGA学习(六)-呼吸灯</title>
        <link rel="alternate" href="https://ei4869.github.io/miyano/Course-Study/FPGA/FPGA%E5%AD%A6%E4%B9%A0(%E5%85%AD)-%E5%91%BC%E5%90%B8%E7%81%AF/"/>
        <content type="html">&lt;h1 id=&#34;目的&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#目的&#34;&gt;#&lt;/a&gt; 目的&lt;/h1&gt;
&lt;p&gt;利用脉冲宽度调制 (PWM) 实现呼吸灯效果，使呼吸灯有亮到暗，由暗到亮，每个过程 2s。&lt;/p&gt;
&lt;h1 id=&#34;实现思路&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#实现思路&#34;&gt;#&lt;/a&gt; 实现思路&lt;/h1&gt;
&lt;div style=&#34;max-width: 550px; margin: 0 auto;&#34;&gt;
  &lt;div style=&#34;position: relative; padding-bottom: 72.73%; height: 0; overflow: hidden;&#34;&gt;
    &lt;iframe 
      src=&#34;https://zhimap.com/m/NwWIYBFP&#34; 
      frameborder=&#34;0&#34; 
      style=&#34;position: absolute; top:0; left:0; width:100%; height:100%;&#34; 
      sandbox=&#34;allow-scripts allow-same-origin&#34;&gt;
    &lt;/iframe&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h1 id=&#34;代码实现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#代码实现&#34;&gt;#&lt;/a&gt; 代码实现&lt;/h1&gt;
&lt;div class=&#34;tab&#34; data-id=&#34;id1&#34; data-title=&#34;原方法&#34;&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;span&gt;breath_led.v&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//-----------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Design Name: breath_led&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// File Name: breath_led.v&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Function: 呼吸灯，2s 周期呼吸，1000 份&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Coder: Rei&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Date: 2025.03.19&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//-----------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;breath_led&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;           sys_clk&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;      &lt;span class=&#34;token comment&#34;&gt;// 系统时钟&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;           sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;// 系统复位（低有效）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;      led          &lt;span class=&#34;token comment&#34;&gt;// LED PWM 输出&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; CNT_2US_MAX &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7&#39;d100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; CNT_2MS_MAX &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&#39;d1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; CNT_2S_MAX &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&#39;d1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; cnt_2us&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; cnt_2ms&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; cnt_2s&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; inc_dec_flag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;       &lt;span class=&#34;token comment&#34;&gt;// 亮度变化方向：1 为下降（从亮到暗），0 为上升（从暗到亮）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 计时器计时 2us&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            cnt_2us &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cnt_2us &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CNT_2US_MAX &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            cnt_2us &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            cnt_2us &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; cnt_2us &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 计时器计时 2ms&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            cnt_2ms &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cnt_2us &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CNT_2US_MAX &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cnt_2ms &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CNT_2MS_MAX &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            cnt_2ms &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cnt_2us &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CNT_2US_MAX &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            cnt_2ms &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; cnt_2ms &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            cnt_2ms &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; cnt_2ms&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 计时器计时 2s&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            cnt_2s &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cnt_2us &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CNT_2US_MAX &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cnt_2ms &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CNT_2MS_MAX &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cnt_2s &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CNT_2S_MAX &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            cnt_2s &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cnt_2us &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CNT_2US_MAX &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cnt_2ms &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CNT_2MS_MAX &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            cnt_2s &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; cnt_2s &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            cnt_2s &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; cnt_2s&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 亮度递增递减标志&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            inc_dec_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cnt_2us &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CNT_2US_MAX &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cnt_2ms &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CNT_2MS_MAX &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cnt_2s &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CNT_2S_MAX &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            inc_dec_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;inc_dec_flag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            inc_dec_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; inc_dec_flag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 控制 LED PWM 输出&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;inc_dec_flag &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cnt_2ms &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; cnt_2s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;inc_dec_flag &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cnt_2ms &lt;span class=&#34;token operator&#34;&gt;&gt;=&lt;/span&gt; cnt_2s&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;78&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;div class=&#34;tab&#34; data-id=&#34;id1&#34; data-title=&#34;份数可调的方法&#34;&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//-----------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Design Name: breath_led_param&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// File Name: breath_led_param.v&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Function: 呼吸灯，带参数化的呼吸周期和分辨率&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Coder: Rei&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Date: 2025.03.19&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//-----------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; breath_led_param #&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; BREATH_TIME_S  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;          &lt;span class=&#34;token comment&#34;&gt;// 呼吸周期，单位：秒&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; SUBDIV_COUNT   &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;       &lt;span class=&#34;token comment&#34;&gt;//s、ms、us 之间的分割份数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; CLK_FREQ       &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;50_000&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;_000&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;// 时钟频率：50 MHz&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt; sys_clk&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;      &lt;span class=&#34;token comment&#34;&gt;// 系统时钟&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;// 系统复位（低有效）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;  led           &lt;span class=&#34;token comment&#34;&gt;// LED PWM 输出&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 总时钟周期数 = BREATH_TIME_S * CLK 频率&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt; TOTAL_CYCLES &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; BREATH_TIME_S &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; CLK_FREQ&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 每一细分步所需的时钟周期数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt; BASE_MAX &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; TOTAL_CYCLES &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBDIV_COUNT &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; SUBDIV_COUNT&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 保证 BASE_MAX 不低于 1（最低 20ns 计数器由时钟保证）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt; BASE_WIDTH   &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token kernel-function property&#34;&gt;$clog2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;BASE_MAX&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt; SUBDIV_WIDTH &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token kernel-function property&#34;&gt;$clog2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBDIV_COUNT&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 细分计数器：每个细分步长 BASE_MAX 个时钟周期&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;BASE_WIDTH&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; base_cnt&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 中间计数器：范围 0 ~ SUBDIV_COUNT-1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;SUBDIV_WIDTH&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; mid_cnt&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 粗计数器：范围 0 ~ SUBDIV_COUNT-1，用于 PWM 调制比较&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;SUBDIV_WIDTH&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; top_cnt&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 亮度变化方向标志：0 表示上升，1 表示下降&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; inc_dec_flag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 细分计数器，每个时钟周期递增&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            base_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;base_cnt &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; BASE_MAX &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            base_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            base_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; base_cnt &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 中间计数器：当细分计数器溢出时递增&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            mid_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;base_cnt &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; BASE_MAX &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;mid_cnt &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; SUBDIV_COUNT &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                mid_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                mid_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; mid_cnt &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 粗计数器：当中间计数器溢出时递增&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            top_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;base_cnt &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; BASE_MAX &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;mid_cnt &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; SUBDIV_COUNT &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;top_cnt &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; SUBDIV_COUNT &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                top_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                top_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; top_cnt &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 亮度变化方向：当粗计数器满值时翻转方向&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            inc_dec_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;base_cnt &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; BASE_MAX &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;mid_cnt &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; SUBDIV_COUNT &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;top_cnt &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; SUBDIV_COUNT &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            inc_dec_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;inc_dec_flag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;78&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// LED PWM 输出逻辑：&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;79&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 当处于上升阶段（inc_dec_flag == 0）时，若中间计数器小于粗计数器则点亮 LED，&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;80&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 否则熄灭；下降阶段则比较 (SUBDIV_COUNT - top_cnt)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;81&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;82&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;83&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;84&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;inc_dec_flag &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; mid_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; top_cnt&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;85&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;86&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;inc_dec_flag &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; mid_cnt &lt;span class=&#34;token operator&#34;&gt;&gt;=&lt;/span&gt; top_cnt&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;87&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;88&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;89&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;90&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;91&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;92&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;对于原方法&lt;/strong&gt;，实现思路为：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;分层计数器设计与级联&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;计数器 cnt_2us（2μs 级别）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每当系统时钟上升沿到来时，cnt_2us 递增，直到达到预设的上限（CNT_2US_MAX - 1）后清零。&lt;/li&gt;
&lt;li&gt;这一计数器负责产生基本的 2μs 时间单位。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;计数器 cnt_2ms（2ms 级别）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当 cnt_2us 计数到达上限时（即完成一个 2μs 周期），cnt_2ms 递增；&lt;/li&gt;
&lt;li&gt;若 cnt_2ms 也达到预设上限（CNT_2MS_MAX - 1），则清零。&lt;/li&gt;
&lt;li&gt;cnt_2ms 相当于累积多个 2μs 的周期。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;计数器 cnt_2s（2s 级别）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;同理，在 cnt_2us 和 cnt_2ms 均溢出时，cnt_2s 递增；&lt;/li&gt;
&lt;li&gt;当 cnt_2s 达到预设上限（CNT_2S_MAX - 1）时，清零。&lt;/li&gt;
&lt;li&gt;cnt_2s 相当于累积多个 2ms 的周期。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;呼吸效果实现 —— 亮度调节逻辑&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;亮度递增 / 递减标志（inc_dec_flag）&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;每当所有三个计数器同时溢出（完成一个完整的 2s 周期）时，inc_dec_flag 取反。&lt;/li&gt;
&lt;li&gt;当 inc_dec_flag 为 0 时，表示 LED 亮度处于上升阶段（从暗到亮）；为 1 时表示下降阶段（从亮到暗）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;PWM 输出实现&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LED 的 PWM 控制采用 cnt_2ms 与 cnt_2s 的比较：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;上升阶段（inc_dec_flag==0）：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;当 cnt_2ms 小于或等于 cnt_2s 时，LED 输出高电平；否则 LED 低电平。&lt;/li&gt;
&lt;li&gt;这样 cnt_2s 的数值越大，LED 点亮的时长越长，亮度越高。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;下降阶段（inc_dec_flag==1）：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;当 cnt_2ms 大于或等于 cnt_2s 时，LED 输出高电平；否则 LED 低电平。&lt;/li&gt;
&lt;li&gt;随着 cnt_2s 逐渐增大，LED 点亮时长缩短，亮度逐步降低。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;整体效果&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;利用多级计数器构成了一个从微秒到秒级的分辨率体系，生成 PWM 波形；&lt;/li&gt;
&lt;li&gt;通过周期性地翻转亮度变化方向（inc_dec_flag），实现 LED 从暗到亮再到暗的平滑呼吸效果。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;实现的效果将是：每个 cnt_2s 内，会有一个 LED PWM 波形，以由暗到亮时为例，此时该波形的高电平个数递增，单个高电平的持续时间为一个 cnt_2us 完整周期的时间。cnt_2ms 的作用是决定高电平的个数，已知每个 cnt_2s 包含着一个完整的 cnt_2ms 从 0 到 CNT_2MS_MAX - 1 的周期，当 cnt_2s 为 0 时，满足 cnt_2ms&amp;lt;=cnt_2s 的条件只有 cnt_2ms 为 0 时，即此时为高电平，而又因为每个 cnt_2ms 包含着一个完整的 cnt_2us 从 0 到 CNT_2US_MAX - 1 的周期，所以该高电平持续时间为一个 cnt_2us 完整周期的时间。之后随着 cnt_2s 的递增，满足 cnt_2ms&amp;lt;=cnt_2s 的情况递增，即高电平个数递增。 直到最后完整一个 cnt_2s 周期时标志翻转，开始由亮到暗。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;对于第二个方法&lt;/strong&gt;，即份数可调，不再局限于 1000，虽然第一个代码也可调整，但需要手动计算最底层计数器的计数阈值（如果分 500 份，最底层计数时间为：2s/500/500，需要计算此时的计数最大值及位宽）。第二个方法设置呼吸周期和份数的参数，具体计数器和位宽用如下代码确定：&lt;/p&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 总时钟周期数 = BREATH_TIME_S * CLK 频率&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt; TOTAL_CYCLES &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; BREATH_TIME_S &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; CLK_FREQ&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 每一细分步所需的时钟周期数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt; BASE_MAX &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; TOTAL_CYCLES &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBDIV_COUNT &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; SUBDIV_COUNT&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 保证 BASE_MAX 不低于 1（最低 20ns 计数器由时钟保证）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt; BASE_WIDTH   &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token kernel-function property&#34;&gt;$clog2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;BASE_MAX&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt; SUBDIV_WIDTH &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token kernel-function property&#34;&gt;$clog2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;SUBDIV_COUNT&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 细分计数器：每个细分步长 BASE_MAX 个时钟周期&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;BASE_WIDTH&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; base_cnt&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 中间计数器：范围 0 ~ SUBDIV_COUNT-1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;SUBDIV_WIDTH&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; mid_cnt&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 粗计数器：范围 0 ~ SUBDIV_COUNT-1，用于 PWM 调制比较&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;SUBDIV_WIDTH&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; top_cnt&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;但实现的效果是相同的。&lt;/p&gt;
&lt;h1 id=&#34;仿真结果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#仿真结果&#34;&gt;#&lt;/a&gt; 仿真结果&lt;/h1&gt;
&lt;p&gt;测试代码：&lt;/p&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;span&gt;tb_breath_led.v&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token constant&#34;&gt;`timescale&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;ns&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;ns  &lt;span class=&#34;token comment&#34;&gt;// Time scale is set to 1ns/1ns&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;tb_breath_led&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; CLK_PERIOD &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 50MHz&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;         sys_clk&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;        &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;         sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt;        led&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;initial&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sys_clk &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sys_rst_n &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#200&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sys_rst_n &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token important&#34;&gt;always&lt;/span&gt; #&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CLK_PERIOD&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; sys_clk &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;sys_clk&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 时钟周期为 20ns&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; CNT_2US_MAX &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7&#39;d10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; CNT_2MS_MAX &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&#39;d100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; CNT_2S_MAX &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&#39;d100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;breath_led #&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;CNT_2US_MAX&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CNT_2US_MAX&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;CNT_2MS_MAX&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CNT_2MS_MAX&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;CNT_2S_MAX&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CNT_2S_MAX&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; u_breath_led &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sys_clk&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys_clk&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sys_rst_n&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;led&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;led&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//parameter BREATH_TIME_S  = 0.00015;         // 呼吸周期，单位：秒&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//parameter SUBDIV_COUNT   = 50;       //s、ms、us 之间的分割份数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// breath_led_param #(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//     .BREATH_TIME_S(BREATH_TIME_S),&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//     .SUBDIV_COUNT(SUBDIV_COUNT)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// ) u_breath_led (&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//     .sys_clk(sys_clk),&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//     .sys_rst_n(sys_rst_n),&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//     .led(led)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// );&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;仿真结果如图：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;完整的 cnt_2us 周期为 20ns*10=200ns，完整的 cnt_2ms 周期为 200ns*100=20000ns，完整的 cnt_2s 周期为 200000ns*100=2000000ns。&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/6.1.jpg&#34; title=&#34;呼吸灯仿真（一）&#34; style=&#34;max-width: 70%; height: auto;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;BREATH_TIME_S 为 0.00015s，SUBDIV_COUNT 为 50，即完整的 top_cnt 周期为 0.00015s=150000ns，完整的 mid_cnt 周期为 150000ns/50=3000ns，完整的 base_cnt 周期为 3000ns/50=60ns。&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/6.2.jpg&#34; title=&#34;呼吸灯仿真（二）&#34; style=&#34;max-width: 70%; height: auto;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="课程学习" scheme="https://ei4869.github.io/miyano/categories/Course-Study/" />
        <category term="FPGA" scheme="https://ei4869.github.io/miyano/categories/Course-Study/FPGA/" />
        <category term="课程" scheme="https://ei4869.github.io/miyano/tags/%E8%AF%BE%E7%A8%8B/" />
        <category term="FPGA" scheme="https://ei4869.github.io/miyano/tags/FPGA/" />
        <updated>2025-03-21T02:33:00.000Z</updated>
    </entry>
    <entry>
        <id>https://ei4869.github.io/miyano/Course-Study/Japanese/%E5%88%9D%E7%BA%A7%E4%B8%8A-%E7%AC%AC5%E5%8D%95%E5%85%83/</id>
        <title>单元五——小李在日本迎新春</title>
        <link rel="alternate" href="https://ei4869.github.io/miyano/Course-Study/Japanese/%E5%88%9D%E7%BA%A7%E4%B8%8A-%E7%AC%AC5%E5%8D%95%E5%85%83/"/>
        <content type="html">&lt;h1 id=&#34;第十七课わたしは-新あたらしい-洋服ようふくが-欲ほしいです&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第十七课わたしは-新あたらしい-洋服ようふくが-欲ほしいです&#34;&gt;#&lt;/a&gt; 第十七课：わたしは　&lt;ruby&gt;新&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あたら&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; しい　&lt;ruby&gt;洋服&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ようふく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; が　&lt;ruby&gt;欲&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ほ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; しいです&lt;/h1&gt;
&lt;h2 id=&#34;语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;名が-欲しいです&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名が-欲しいです&#34;&gt;#&lt;/a&gt; [名] が　欲しいです&lt;/h3&gt;
&lt;p&gt;表示愿望时使用。&lt;br /&gt;
eg：わたしは　&lt;ruby&gt;新&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あたら&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; しい　&lt;ruby&gt;洋服&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ようふく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; が　&lt;ruby&gt;欲&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ほ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; しいです。　我想有套新西服。&lt;/p&gt;
&lt;h3 id=&#34;名を-动たいです&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名を-动たいです&#34;&gt;#&lt;/a&gt; [名] を　[动] たいです&lt;/h3&gt;
&lt;p&gt;表示 “想～”，“名 1 は　名 2 を　～たいです”。名词 1 为愿望的主体，名词 2 表示希望进行动作的对象。&lt;mark&gt;“たい” 前接动词 “ます形” 去掉 “ます” 的形式。&lt;/mark&gt;&lt;br /&gt;
使用 “欲しいです” 或 “～たいです” 时，如果是&lt;mark&gt;陈述句&lt;/mark&gt;，则第一人称 “わたし” 为主语。如果句子是&lt;mark&gt;疑问句&lt;/mark&gt;，则第二人称 “あなた” 是主语，这两种情况的主语通常可以从句子前后关系判断出来，常省略。  注：不能用在第三人称上。&lt;br /&gt;
eg: 今日は　お酒を　飲みたく　ないです。     今天不想喝酒。&lt;/p&gt;
&lt;p&gt;注意： 如 “わたしは　お茶が　飲みたいです” 所示，“たい” 的对象有时不用 “を”，而用 “が” 表示，但 “欲しい” 的对象只能用 “が” 表示。&lt;br /&gt;
水を　飲みたいです。&lt;br /&gt;
水が　飲みたいです。&lt;br /&gt;
水が　欲しいです。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;全面否定 “名词 + を + 动词” 时，使用：“疑问词 + も + 动词否定形式”。&lt;/li&gt;
&lt;li&gt;全面否定 “名词 + に / から / と + 动词” 时，使用：“疑问词 + にも / からも / とも + 动词否定形式”。&lt;/li&gt;
&lt;li&gt;全面否定 “名词 + へ + 动词” 时，既可以使用 “疑问词 + も + 动词否定形式”，也可以使用 “疑问词 + へも + 动词否定形式”。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;eg: 誰に　会いたいですか。   —— 誰にも　会いたくないです。   你想见谁？ 谁也不想见。&lt;/p&gt;
&lt;h3 id=&#34;动ませんか&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动ませんか&#34;&gt;#&lt;/a&gt; [动] ませんか&lt;/h3&gt;
&lt;p&gt;动词的否定形式 “~ ませんか”，表示一种提议。“做某事怎么样”。&lt;/p&gt;
&lt;h3 id=&#34;动ましょう&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动ましょう&#34;&gt;#&lt;/a&gt; [动] ましょう&lt;/h3&gt;
&lt;p&gt;把动词 “ます形” 去掉 “ます” 换成 “ましょう”，可表示提议。&lt;br /&gt;
eg: ちょっと　休みましょう。　休息一下吧。&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;“ましょう” 的礼貌程度没有 “ませんか” 高。&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&#34;疑问词でも&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#疑问词でも&#34;&gt;#&lt;/a&gt; 疑问词 + でも&lt;/h3&gt;
&lt;p&gt;表示在任何情况下事态都相同时使用。&lt;br /&gt;
eg:&lt;br /&gt;
 誰も　&lt;ruby&gt;分&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;わ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; かります。  　谁都明白。&lt;br /&gt;
誰も　&lt;ruby&gt;分&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;わ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; かりません。   谁都不明白。&lt;/p&gt;
&lt;p&gt;注：いつも表示 “常常，经常” 的意思，而いつでも表示 “不论任何时候”。&lt;br /&gt;
いつでも　行きます。　随时去或有必要的话任何时候都去。&lt;br /&gt;
いつも　行きます。  经常去。&lt;/p&gt;
&lt;h3 id=&#34;ね&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ね&#34;&gt;#&lt;/a&gt; ね&lt;/h3&gt;
&lt;p&gt;缓和语气。&lt;/p&gt;
&lt;h2 id=&#34;表达&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;“欲しいです” 和 “飲みませんか” 愿望、希望和邀请&lt;br /&gt;
 “何が　欲しいですか”“何を　食べたいですか” 等直接询问他人的愿望，可用于朋友，上级对下级之间，但如果对方是上级、长辈，应使用 “どうですか”“～ませんか” 等。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;另外，别人邀请自己参加某一活动时，可用 “&lt;sub&gt;ましょう” 回答，“&lt;/sub&gt;ましょう” 有一起、共同做某事的含义，既可以用于提议，也可以用于对别人提议的回答。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;ruby&gt;今年&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ことし&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;ruby&gt; 中&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じゅう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; に&lt;br /&gt;
 “~&lt;ruby&gt; 中&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じゅう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; に” 表示该期间结束之前的意思，一般接在表示未来某一特定时间的词后，如 “今日”“明日”“&lt;ruby&gt;今週&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;こんしゅう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;”“&lt;ruby&gt;来週&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;らいしゅう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;”“&lt;ruby&gt;今年&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ことし&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;” 等后面。“今日”“明日”“&lt;ruby&gt;今年&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ことし&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;” 后续 “~&lt;ruby&gt; 中&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じゅう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; に” 时，读 “じゅうに”，“~&lt;ruby&gt; 週&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しゅう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;”“~&lt;ruby&gt; 月&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;がつ / げつ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;” 后续 “~&lt;ruby&gt; 中&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ちゅう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; に” 时，读 “ちゅうに”。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;eg: &lt;ruby&gt;今年&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ことし&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;ruby&gt; 中&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じゅう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; に 結婚したいです。    我想今年结婚。&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;ぜひ&lt;br /&gt;
 “一定，必定”，后接 “~ たい”“~ てください”“~ ましょう” 等，表达强烈愿望、意志。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第十八课携帯電話けいたいでんわは-とても-小ちいさく-なりました&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第十八课携帯電話けいたいでんわは-とても-小ちいさく-なりました&#34;&gt;#&lt;/a&gt; 第十八课：&lt;ruby&gt;携帯電話&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;けいたいでんわ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　とても　&lt;ruby&gt;小&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ちい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; さく　なりました&lt;/h1&gt;
&lt;h2 id=&#34;语法-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法-2&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;形1-なります&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#形1-なります&#34;&gt;#&lt;/a&gt; [形 1] なります&lt;/h3&gt;
&lt;p&gt;表示性质或状态的变化，构成方式是：形 1 的词尾 “い” 变成 “く” 再加 “なります”。&lt;br /&gt;
&lt;mark&gt;“自然地变化”&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;eg: パソコンは　&lt;ruby&gt;安&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;やす&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; く　なりました。   个人电脑便宜了。&lt;/p&gt;
&lt;h3 id=&#34;形1-します&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#形1-します&#34;&gt;#&lt;/a&gt; [形 1] します&lt;/h3&gt;
&lt;p&gt;表示因主语的意志性动作、作用而引起事物发生变化的场合。构成方式是：形 1 的词尾 “い” 变成 “く” 再加 “します”。&lt;br /&gt;
&lt;mark&gt;“人为地变化”&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;eg: ジュースを　&lt;ruby&gt;冷&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;つめ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; たく　します。     把果汁冰镇一下。&lt;/p&gt;
&lt;h3 id=&#34;形2名に-なります&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#形2名に-なります&#34;&gt;#&lt;/a&gt; [形 2]/[名] に　なります&lt;/h3&gt;
&lt;p&gt;同语法一，同样表示性质或状态的变化，构成形式：直接在形 2 和名词后加 “になります”。&lt;br /&gt;
&lt;mark&gt;“自然地变化”&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;eg:&lt;br /&gt;
&lt;ruby&gt; 息子&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;むすこ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　&lt;ruby&gt;医者&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;いしゃ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; に　なりました。  儿子当医生了。&lt;br /&gt;
もう　元気に　なりました。      已经恢复健康了。&lt;/p&gt;
&lt;h3 id=&#34;形2名に-します&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#形2名に-します&#34;&gt;#&lt;/a&gt; [形 2]/[名] に　します&lt;/h3&gt;
&lt;p&gt;同语法二，同样表示因主语的意志性的动作、作用等引起事物发生变化。&lt;br /&gt;
&lt;mark&gt;“人为地改变”&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;eg:&lt;br /&gt;
 部屋を　&lt;ruby&gt;綺麗&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;きれい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; に　して　ください。       请把房间打扫干净。&lt;br /&gt;
&lt;ruby&gt;会議室&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かいぎしつ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　禁煙きんえんに　します。   会议室里禁烟。&lt;/p&gt;
&lt;p&gt;注：在餐馆里回答服务员的点餐询问时，可以使用 “~ に　します” 这一形式。表示把自己决定的事情告诉对方。“コーヒーに　します（我要咖啡。）”&lt;/p&gt;
&lt;h3 id=&#34;形1形2-ほうが-いいです&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#形1形2-ほうが-いいです&#34;&gt;#&lt;/a&gt; [形 1]/[形 2] ほうが　いいです&lt;/h3&gt;
&lt;p&gt;比较两个以上事物的性质，认为其中一个比较好。  &lt;ins class=&#34;dot&#34;&gt;形 2 要多加一个 “な”&lt;/ins&gt;。&lt;br /&gt;
eg:&lt;br /&gt;
 部屋は　広い　ほうが いいです。         房间还是宽敞一点好。&lt;br /&gt;
子供は　元気な　ほうが　いいです。      孩子还是精神一点好。&lt;/p&gt;
&lt;h3 id=&#34;自动词和他动词&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#自动词和他动词&#34;&gt;#&lt;/a&gt; 自动词和他动词&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;自动词：现象、状态  是谁做的？（和我没关系）&lt;br /&gt;
不带宾语的动词，不考虑外力影响的情况下，主语自主地进行动作，或自然地发生变化。主语用 “が” 表示。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;ruby&gt;窓&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;まど&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; が &lt;ruby&gt;開&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; きました。   窗子开了。&lt;br /&gt;
タイムサービスが　始はじまります。  时段廉价销售就要开始了。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;他动词：动作、行为  强调是谁做的&lt;br /&gt;
主语作用于宾语使其发生变化，宾语用 “を” 表示&lt;br /&gt;
 (李さんが)  &lt;ruby&gt;窓&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;まど&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を &lt;ruby&gt;開&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; けました。   (小李) 打开窗户了。&lt;br /&gt;
(デパートが)　タイムサービスを　始はじめます。  百货公司开始时段廉价销售。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;日语的一部分自、他动词在词形上有对应关系，即需要多记单词，作为自动词和他动词时单词形式可能不同。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;本课中 “~ なります” 为自动词，“~ します” 为他动词。&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;注：特殊情况：当自动词表示移动行为时，移动的 “经过点” 和 “起点” 用助词 “を” 表示，这里的 “を” 不表示宾语。&lt;br /&gt;
eg:&lt;br /&gt;
 公園を　散歩する。  （移动性自动词）&lt;br /&gt;
&lt;ruby&gt;学校&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;がっこう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　&lt;ruby&gt;卒業&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;そつぎょう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; する。  （离开的场所）&lt;br /&gt;
パレーを　&lt;ruby&gt;踊&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おど&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; る&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;。   （解释一：同族目的语，可用を，因为芭蕾是舞蹈，&lt;ruby&gt;踊&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おど&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; る&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;是跳舞，所以用を ——“踊りを　踊る”；解释二：古日语里踊る为移动性动词）&lt;/p&gt;
&lt;h2 id=&#34;表达-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达-2&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;声&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;こえ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　和 &lt;ruby&gt;音&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おと&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;br /&gt;
 人和动物发出的声音为&lt;ruby&gt;声&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;こえ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;；物体发出的声音为&lt;ruby&gt;音&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おと&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;。类似英语中 voice 和 sound。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;まとめて&lt;br /&gt;
 “汇总”。&lt;br /&gt;
eg:&lt;ruby&gt; お&lt;rt&gt;&lt;/rt&gt;正月&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しょうがつ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　洋服が　&lt;ruby&gt;安&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;やす&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; く　なりますから，まとめて　買います。     过年时，西式服装降价，所以我一下子买很多。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;三割引&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;さんわりびき&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;br /&gt;
 表示 “七折” 的意思，即降价三成。&lt;br /&gt;
“八五折” 即 “&lt;ruby&gt;15&lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;じゅうご&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;ruby&gt;％&lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;パーセント&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　&lt;ruby&gt;引&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;びき&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;似合&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;にあ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; います&lt;br /&gt;
 “&lt;ruby&gt;似合&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;にあ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; います” 为自动词，表示 “相称”“适合”。&lt;br /&gt;
eg: 赤い　ほうが　いいですね。よく　&lt;ruby&gt;似合&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;にあ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; いますよ。      红的好吧，很适合你。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;“&lt;ruby&gt;間&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ま&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; もなく”　和 “もう　よぐ”&lt;br /&gt;
 两者都是副词，表示 &amp;quot;一会儿&amp;quot;&amp;quot; 不久 &amp;quot;，但 “&lt;ruby&gt;間&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ま&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; もなく” 更郑重些，用于书面语，而 “もう　よぐ” 多用于口语。&lt;br /&gt;
eg:&lt;br /&gt;
&lt;ruby&gt; 間&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ま&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; もなく　タイムサービスの　時間です。 时段廉价销售时间马上就要到了。&lt;br /&gt;
もうよぐ　六時に　なります。       马上就到六点了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;“さらに”　和 “もっと”&lt;br /&gt;
 都表示 “更加” 的意思，但 “さらに” 更郑重些，而 “もっと” 较随便。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;さあ&lt;br /&gt;
用于向对方提出建议或促使对方做某事，只用于口语。&lt;br /&gt;
eg：さあ，今から　&lt;ruby&gt;試験&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しけん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　始めますよ。&lt;ruby&gt;準備&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じゅんび&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　いいですか。   好了，现在开始考试，准备好了吗？&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第十九课部屋の-かぎを-忘れないで-ください&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第十九课部屋の-かぎを-忘れないで-ください&#34;&gt;#&lt;/a&gt; 第十九课：部屋の　かぎを　忘れないで　ください&lt;/h1&gt;
&lt;h2 id=&#34;语法-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法-3&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;动词的ない形&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动词的ない形&#34;&gt;#&lt;/a&gt; 动词的ない形&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;动 1：把ます形去掉ます后的最后一个音变成相应的あ段音，再加ない。如果最后音为い时，则い变わ加ない。&lt;br /&gt;
（或者，对于动词原型，结尾う段变あ段加ない即可，但对于う结尾，う变わ，再加ない）&lt;/li&gt;
&lt;li&gt;动 2：把ます形去掉再加ない。（或者，对于动词原型，る变ない）&lt;/li&gt;
&lt;li&gt;动 3：把 “&lt;ruby&gt;来&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;き&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ます” 变成 “&lt;ruby&gt;来&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;こ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ない”，把 “します” 变成 “しない”。&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类别&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;一类动词&lt;/td&gt;
&lt;td&gt;書く → &lt;ruby&gt;書&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;か&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; きます&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → &lt;ruby&gt;かき&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → &lt;ruby&gt;かかない&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; &lt;br&gt; 急ぐ → &lt;ruby&gt;急&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;いそ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; ぎます&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → &lt;ruby&gt;いそぎ&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → &lt;ruby&gt;いそがない&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; &lt;br&gt; 飛ぶ　→　&lt;ruby&gt;飛&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;と&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; びます&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → &lt;ruby&gt;とび&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → &lt;ruby&gt;とばない&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; &lt;br&gt; 読む　→　&lt;ruby&gt;読&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;よ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; みます&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → &lt;ruby&gt;よみ&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → &lt;ruby&gt;よまない&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; &lt;br&gt; 死ぬ　→　&lt;ruby&gt;死&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;し&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; にます&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → &lt;ruby&gt;しに&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → &lt;ruby&gt;しなない&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; &lt;br&gt; 待つ　→　&lt;ruby&gt;待&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ま&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; ちます&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → &lt;ruby&gt;まち&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → &lt;ruby&gt;またない&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; &lt;br&gt; 売る　→　&lt;ruby&gt;売&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;う&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; ります&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → &lt;ruby&gt;うり&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → &lt;ruby&gt;うらない&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; &lt;br&gt; 買う　→　&lt;ruby&gt;買&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;か&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; います&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → &lt;ruby&gt;かい&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → &lt;ruby&gt;かわない&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; &lt;br&gt; 話す　→　&lt;ruby&gt;話&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はな&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; します&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → &lt;ruby&gt;はなし&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → はなさない&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;二类动词&lt;/td&gt;
&lt;td&gt;食べる　→　&lt;ruby&gt;食&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;た&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; べます&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → &lt;ruby&gt;たべ&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → &lt;ruby&gt;たべない&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; &lt;br&gt; 見る　→　&lt;ruby&gt;見&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;み&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; ます&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → &lt;ruby&gt;み&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → &lt;ruby&gt;みない&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;三类动词&lt;/td&gt;
&lt;td&gt;来る　→　&lt;ruby&gt;来&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;き&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; ます&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → &lt;ruby&gt;き&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → &lt;ruby&gt;こない&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; &lt;br&gt; する　→　&lt;ruby&gt;します&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → &lt;ruby&gt;し&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; → &lt;ruby&gt;しない&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;动ないで-ください&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动ないで-ください&#34;&gt;#&lt;/a&gt; [动] ないで　ください&lt;/h3&gt;
&lt;p&gt;表示否定的命令。即 “动词未然形 + ないで　ください” 或者 “动词ない形 + でください”。&lt;mark&gt;动词未然形是ない形去掉ない的形式。&lt;/mark&gt;&lt;br /&gt;
eg：&lt;ruby&gt;無理&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;むり&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　しないで　ください。 请不要勉强。&lt;/p&gt;
&lt;h3 id=&#34;动なければ-なりません&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动なければ-なりません&#34;&gt;#&lt;/a&gt; [动] なければ　なりません&lt;/h3&gt;
&lt;p&gt;表示必须，“未然形 + なければ　なりません” 或者 “未然形 + ないと　いけません”。&lt;br /&gt;
eg: すぐに　&lt;ruby&gt;書類&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しょるい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　&lt;ruby&gt;送&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ら　ないと　いけません。    得马上把文件寄出去。&lt;br /&gt;
この　&lt;ruby&gt;薬&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;くすり&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　毎日　飲まなければ　なりません。       这个药必须每天吃。&lt;/p&gt;
&lt;h3 id=&#34;动なくても-いいです&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动なくても-いいです&#34;&gt;#&lt;/a&gt; [动] なくても　いいです&lt;/h3&gt;
&lt;p&gt;表示不做某事也可以。“未然形 + なくても　いいです”。&lt;br /&gt;
eg: &lt;ruby&gt;慌&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あわ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; て　なくても　いいですよ。　 不要慌慌张张的。&lt;/p&gt;
&lt;h3 id=&#34;名1が-名2です&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名1が-名2です&#34;&gt;#&lt;/a&gt; [名 1] が　[名 2] です&lt;/h3&gt;
&lt;p&gt;区别：&lt;br /&gt;
旧信息 は　新信息 です&lt;br /&gt;
新信息 が　旧信息 です&lt;/p&gt;
&lt;p&gt;其中旧信息指的是话题的对象。&lt;/p&gt;
&lt;p&gt;&lt;ruby&gt;山田&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;やまだ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 先生は　どの　&lt;ruby&gt;方&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ですか。&lt;br /&gt;
—— &lt;ruby&gt;山田&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;やまだ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 先生は あの&lt;ruby&gt;方&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　です。&lt;br /&gt;
—— あの　&lt;ruby&gt;方&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; が　&lt;ruby&gt;山田&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;やまだ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 先生です。&lt;br /&gt;
问题提到了话题即 “&lt;ruby&gt;山田&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;やまだ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 先生”，故 “&lt;ruby&gt;山田&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;やまだ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 先生” 为旧信息。&lt;/p&gt;
&lt;p&gt;注：叙述直接观察到的某事物，而不是作为话题谈论该事物时，使用 “[名词] が　[动词]” 的形式。因为这里同样是新信息作主语。&lt;br /&gt;
eg：子供が　公園で　&lt;ruby&gt;遊&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あそ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; んで　います。     孩子在公园里玩。&lt;br /&gt;
パスが　&lt;ruby&gt;来&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;き&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ました。     公共汽车来了。&lt;/p&gt;
&lt;p&gt;注：“&lt;ruby&gt;何&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なに&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　&lt;ruby&gt;誰&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;だれ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　どこ　いつ” 等表示疑问的词作主语时不能用 “は”，只能用 “が”，因为这些词不能表示旧信息。&lt;br /&gt;
eg: 何が　好きですか。  喜欢什么？&lt;/p&gt;
&lt;h2 id=&#34;表达-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达-3&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&amp;quot;~ なければ　なりません&amp;quot; 和 &amp;quot;~ ないと　いけません&amp;quot;&lt;br /&gt;
两者都表示义务、必要性，但&amp;quot;~ なければ　なりません &amp;quot;更正式，用于书面语，&amp;quot;~ ないと　いけません &amp;quot;多用于口语，并且可以省略为 “&amp;quot;~ ないと”&lt;br /&gt;
eg: あっ，８時ですね。もう　駅へ　行かないと。  啊，8 点了，我得去车站了。  （っ（ltu））&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;初心者&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しょしんしゃ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　&lt;ruby&gt;上級者&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じょうきゅうしゃ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;br /&gt;
&lt;ruby&gt; 初心者&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しょしんしゃ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 表示 “初学者”。在日语中，表示技能等级为高级时，使用 “&lt;ruby&gt;上級&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じょうきゅう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;”，而 “&lt;ruby&gt;高級&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;こうきゅう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;” 不用于描述人的技能、技术等，只限于表示高质量的物品。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;何度&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なんど&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; も&lt;br /&gt;
 &amp;quot;何 + 量词 + も + 肯定形式&amp;quot; 表示数量多。&lt;br /&gt;
eg：何度も　&lt;ruby&gt;転&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ころ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; びましたが，とても　おもしろいです。  我摔了好几次，不过挺有意思的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;だいぶ　 [表示程度的副词]&lt;br /&gt;
 表示程度相当高，用于 “~ なりました” 等表示变化的句型中，突出强调变化的程度。&lt;br /&gt;
eg: 昨日は　だいぶ　お酒を　飲みました。        昨天喝了不少酒。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;大丈夫&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;だいじょうぶ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; です&lt;br /&gt;
 “没问题”“可以”“没事的”，但可以根据上下文有不同的解释。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;残業&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ざんぎょう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;br /&gt;
 在工作时间以外工作，即 “加班”。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第二十课スミスさんは-ピアノを-弾ひく-ことが-できます&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第二十课スミスさんは-ピアノを-弾ひく-ことが-できます&#34;&gt;#&lt;/a&gt; 第二十课：スミスさんは　ピアノを　&lt;ruby&gt;弾&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ひ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; く　ことが　できます&lt;/h1&gt;
&lt;h2 id=&#34;语法-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法-4&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;动词的基本形&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动词的基本形&#34;&gt;#&lt;/a&gt; 动词的基本形&lt;/h3&gt;
&lt;p&gt;即动词原形，详见 “动词和形容词知识点”。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类别&lt;/th&gt;
&lt;th&gt;ます形&lt;/th&gt;
&lt;th&gt;去掉ます&lt;/th&gt;
&lt;th&gt;基本形&lt;/th&gt;
&lt;th&gt;基本形&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;一类动词&lt;/td&gt;
&lt;td&gt;書きます&lt;/td&gt;
&lt;td&gt;かき&lt;/td&gt;
&lt;td&gt;書く&lt;/td&gt;
&lt;td&gt;かく&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;急ぎます&lt;/td&gt;
&lt;td&gt;いそぎ&lt;/td&gt;
&lt;td&gt;急ぐ&lt;/td&gt;
&lt;td&gt;いそぐ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;飛びます&lt;/td&gt;
&lt;td&gt;とび&lt;/td&gt;
&lt;td&gt;飛ぶ&lt;/td&gt;
&lt;td&gt;とぶ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;読みます&lt;/td&gt;
&lt;td&gt;よみ&lt;/td&gt;
&lt;td&gt;読む&lt;/td&gt;
&lt;td&gt;よむ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;死にます&lt;/td&gt;
&lt;td&gt;しに&lt;/td&gt;
&lt;td&gt;死ぬ&lt;/td&gt;
&lt;td&gt;しぬ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;待ちます&lt;/td&gt;
&lt;td&gt;まち&lt;/td&gt;
&lt;td&gt;待つ&lt;/td&gt;
&lt;td&gt;まつ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;売ります&lt;/td&gt;
&lt;td&gt;うり&lt;/td&gt;
&lt;td&gt;売る&lt;/td&gt;
&lt;td&gt;うる&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;買います&lt;/td&gt;
&lt;td&gt;かい&lt;/td&gt;
&lt;td&gt;買う&lt;/td&gt;
&lt;td&gt;かう&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;話します&lt;/td&gt;
&lt;td&gt;はなし&lt;/td&gt;
&lt;td&gt;話す&lt;/td&gt;
&lt;td&gt;はなす&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;二类动词&lt;/td&gt;
&lt;td&gt;食べます&lt;/td&gt;
&lt;td&gt;たべ&lt;/td&gt;
&lt;td&gt;食べる&lt;/td&gt;
&lt;td&gt;たべる&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;見ます&lt;/td&gt;
&lt;td&gt;み&lt;/td&gt;
&lt;td&gt;見る&lt;/td&gt;
&lt;td&gt;みる&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;三类动词&lt;/td&gt;
&lt;td&gt;来ます&lt;/td&gt;
&lt;td&gt;き&lt;/td&gt;
&lt;td&gt;来る&lt;/td&gt;
&lt;td&gt;くる&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;します&lt;/td&gt;
&lt;td&gt;し&lt;/td&gt;
&lt;td&gt;する&lt;/td&gt;
&lt;td&gt;する&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;名人は-动基本形-ことが-できます&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名人は-动基本形-ことが-できます&#34;&gt;#&lt;/a&gt; [名 (人)] は　[动 (基本形)] ことが　できます&lt;/h3&gt;
&lt;p&gt;“某人会做某事”。“[动 (基本形)] + ことが　できます” 表示能力，在回答别人的询问时，肯定情况下可用 “できます”，否定情况下可用 “できません”。&lt;br /&gt;
森さんは　&lt;ruby&gt;中華料理&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ちゅうかりょうり&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　&lt;ruby&gt;作&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;つく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; る　ことが　できますか。  森先生会做中国菜吗？&lt;br /&gt;
—— はい，できます。     是的，会做。&lt;/p&gt;
&lt;h3 id=&#34;名は-动基本形-ことです&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名は-动基本形-ことです&#34;&gt;#&lt;/a&gt; [名] は　[动 (基本形)]　ことです&lt;/h3&gt;
&lt;p&gt;当谓语部分的内容是一种动作、行为时使用这个句型。&lt;br /&gt;
eg:&lt;br /&gt;
 私は　&lt;ruby&gt;趣味&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しゅみ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　&lt;ruby&gt;切手&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;きって&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　&lt;ruby&gt;集&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あつ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; める　ことです。   我的爱好是集邮。&lt;br /&gt;
王さんの　&lt;ruby&gt;特技&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;とくぎ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　&lt;ruby&gt;胡弓&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;こきゅう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　弾く　ことです。      小王的特长是拉胡琴。&lt;/p&gt;
&lt;p&gt;“&lt;ruby&gt;切手&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;きって&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　&lt;ruby&gt;集&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あつ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; める　こと” 和 “&lt;ruby&gt;胡弓&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;こきゅう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　弾く　こと” 相当于名词，即 “动词基本词 + こと” 起到和名词同样的作用，因此也可以用名词或名词短语代替。（类似英语中动名词。）&lt;br /&gt;
小野さんは　&lt;ins class=&#34;dot&#34;&gt;&lt;ruby&gt;車&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;くるま&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　&lt;ruby&gt;運転&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;うんてん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; する　こと&lt;/ins&gt;が　できません。    小野不会开车。&lt;br /&gt;
小野さんは　&lt;ins class=&#34;dot&#34;&gt;車の運転&lt;/ins&gt;　が　できません。      小野不会开车。&lt;/p&gt;
&lt;h3 id=&#34;动基本形-前に~&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动基本形-前に~&#34;&gt;#&lt;/a&gt; [动 (基本形)] 前に，～&lt;/h3&gt;
&lt;p&gt;表示一个动作在另一个动作之前发生时，使用该句型。&lt;br /&gt;
eg：毎日　寝る　前に　シャワーを　&lt;ruby&gt;浴&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; びます。   每天睡觉前淋浴。&lt;/p&gt;
&lt;p&gt;这个句型也可以用 “名词 + の + 前に” 的形式使用。&lt;br /&gt;
&lt;ruby&gt;会議&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かいぎ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　の　前に，&lt;ruby&gt;資料&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しりょう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　コピー　します。　开会之前复印资料。&lt;/p&gt;
&lt;h3 id=&#34;疑问词-か&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#疑问词-か&#34;&gt;#&lt;/a&gt; 疑问词 + か&lt;/h3&gt;
&lt;p&gt;疑问词 “いつ　どこ　だれ” 等词后续 “か”，表示 “某时 某地 某人” 等意思。&lt;br /&gt;
部屋に　誰&lt;mark&gt;か&lt;/mark&gt;　いますか。    房间里有人吗？  “誰か” 指什么人，某个人&lt;br /&gt;
部屋に　誰&lt;mark&gt;が&lt;/mark&gt;　いますか。    房间里有谁？    “が” 是助词&lt;/p&gt;
&lt;p&gt;“いつか　どこか　だれか　なにか” 等本身并不表示疑问的意思，所以也用于陈述句。&lt;br /&gt;
&lt;ruby&gt;冬休&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ふゆやす&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; み，&lt;mark&gt;どこか&lt;/mark&gt;へ　行きたいです。    寒假想去个什么地方。&lt;/p&gt;
&lt;h3 id=&#34;~よね&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#~よね&#34;&gt;#&lt;/a&gt; ～よね&lt;/h3&gt;
&lt;p&gt;表示提出自己的意见，以征求对方的同意。&lt;br /&gt;
当说话人确信对方和自己的意见、想法完全相同时，只用 “ね”，而说话人对自己的意见、想法没有足够的把握时用 “よね”。&lt;br /&gt;
この　&lt;ruby&gt;傘&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かさ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　森さんのですよね。   这把伞是森先生的吧？&lt;/p&gt;
&lt;h2 id=&#34;表达-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达-4&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;写真を　&lt;ruby&gt;撮&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;と&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; る　ことが　できます  [可能和允许]&lt;br /&gt;
“[动 (基本形)] + ことが　できます” 基本功能是表示可能，但有时根据上下文关系可表示允许。&lt;br /&gt;
&lt;ruby&gt;寮&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;りょう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; の　&lt;ruby&gt;洗濯機&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;せんたくき&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　何時まで　&lt;ruby&gt;使&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;つか&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; う　ことが　できますか。   宿舍的洗衣机可以用到几点？&lt;br /&gt;
——　８時までです。それからは　使う　ことが　できません。    用到 8 点，那以后就不能用了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;みんなで&lt;br /&gt;
 “みんな + で” 组成，这里的で表示动作主体的样态。如：“&lt;ruby&gt;一人&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ひとり&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; で（一个人）”“&lt;ruby&gt;自分&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じぶん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; で（自己）”“&lt;ruby&gt;全員&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ぜんいん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; で（全体人员）”。&lt;br /&gt;
eg： みんなで　&lt;ruby&gt;餃子&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ギョウザ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　作ります。    大家在一起包饺子。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;趣味&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しゅみ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　和 &lt;ruby&gt;興味&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;きょうみ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;br /&gt;
 日语的 “&lt;ruby&gt;趣味&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しゅみ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;” 是 “爱好，喜好” 的意思，表示兴趣的时候，使用 “&lt;ruby&gt;興味&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;きょうみ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;”。&lt;br /&gt;
私の　&lt;ruby&gt;趣味&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しゅみ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　切手を集める　ことです。             我的爱好是集邮。&lt;br /&gt;
私は　日本の　&lt;ruby&gt;書道&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しょどう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; に　&lt;ruby&gt;興味&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;きょうみ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; が　あります。 我对日本的书法感兴趣。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ごちそうします&lt;br /&gt;
 “ごちそう” 本身指奢华而高级的菜肴，后续动词 “します” 表示 “请别人吃饭”。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="课程学习" scheme="https://ei4869.github.io/miyano/categories/Course-Study/" />
        <category term="日语" scheme="https://ei4869.github.io/miyano/categories/Course-Study/Japanese/" />
        <category term="课程" scheme="https://ei4869.github.io/miyano/tags/%E8%AF%BE%E7%A8%8B/" />
        <updated>2025-03-20T09:13:00.000Z</updated>
    </entry>
    <entry>
        <id>https://ei4869.github.io/miyano/Course-Study/FPGA/FPGA%E5%AD%A6%E4%B9%A0(%E4%BA%94)-%E6%8C%89%E9%94%AE%E8%87%AA%E9%94%81%E4%B8%8E%E6%B6%88%E6%8A%96%E6%B1%87%E6%80%BB/</id>
        <title>FPGA学习(五)-按键自锁与消抖汇总</title>
        <link rel="alternate" href="https://ei4869.github.io/miyano/Course-Study/FPGA/FPGA%E5%AD%A6%E4%B9%A0(%E4%BA%94)-%E6%8C%89%E9%94%AE%E8%87%AA%E9%94%81%E4%B8%8E%E6%B6%88%E6%8A%96%E6%B1%87%E6%80%BB/"/>
        <content type="html">&lt;h1 id=&#34;介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#介绍&#34;&gt;#&lt;/a&gt; 介绍&lt;/h1&gt;
&lt;p&gt;以按键控制蜂鸣器实验为例，设计消抖模块，自锁模块，按键控制蜂鸣器模块，顶层模块。&lt;br /&gt;
任务是：按键默认为高，蜂鸣器默认为高 鸣叫。按键按下时鸣叫结束，松开后保持。再次按下时，重新开始鸣叫，松开后保持。&lt;/p&gt;
&lt;h1 id=&#34;实现思路&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#实现思路&#34;&gt;#&lt;/a&gt; 实现思路&lt;/h1&gt;
&lt;div style=&#34;max-width: 550px; margin: 0 auto;&#34;&gt;
  &lt;div style=&#34;position: relative; padding-bottom: 72.73%; height: 0; overflow: hidden;&#34;&gt;
    &lt;iframe 
      src=&#34;https://zhimap.com/m/hVghkEjF&#34; 
      frameborder=&#34;0&#34; 
      style=&#34;position: absolute; top:0; left:0; width:100%; height:100%;&#34; 
      sandbox=&#34;allow-scripts allow-same-origin&#34;&gt;
    &lt;/iframe&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;预期波形图：&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/5.1.png&#34; title=&#34;消抖模块预期波形图&#34; style=&#34;max-width: 70%; height: auto;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;消抖模块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#消抖模块&#34;&gt;#&lt;/a&gt; 消抖模块&lt;/h1&gt;
&lt;p&gt;采样三种代码实现方式：&lt;/p&gt;
&lt;div class=&#34;tab&#34; data-id=&#34;id1&#34; data-title=&#34;方法一&#34;&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;span&gt;key_debounce.v&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//-----------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Design Name: key_debounce&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// File Name: key_debounce.v&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Function: 按键消抖模块。已知按键默认为高电平，按下时为低电平。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Coder: Rei&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Date: 2025.03.17&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//-----------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; key_debounce &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;           sys_clk&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;           sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;           key&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;output&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;     key_filter   &lt;span class=&#34;token comment&#34;&gt;// 滤除抖动的 key&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token comment&#34;&gt;// 消抖参数定义，假设系统时钟为 50MHz，若需要 20ms 的消抖时间，则阈值为：20ms * 50MHz = 1,000,000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; DEBOUNCE_TIME                 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.02&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;                     &lt;span class=&#34;token comment&#34;&gt;// 消抖时间（秒）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; CLK_FREQ                     &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;50_000&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;_000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;                &lt;span class=&#34;token comment&#34;&gt;// 时钟频率（Hz）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt; DEBOUNCE_THRESHOLD   &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt;&#39;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CLK_FREQ &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; DEBOUNCE_TIME&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 根据时钟频率和闪烁间隔计算计数上限&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; CNT_WIDTH                    &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token kernel-function property&#34;&gt;$clog2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;DEBOUNCE_THRESHOLD&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;token comment&#34;&gt;// 计算计数器所需位宽。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;                 key_d0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;                 key_d1&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;CNT_WIDTH&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; debounce_cnt&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 根据阈值选择足够宽度的计数器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 打两拍采集按键信号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            key_d0 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            key_d1 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            key_d0 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; key&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            key_d1 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; key_d0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 按键消抖计时&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            debounce_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key_d0 &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; key_d1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;     &lt;span class=&#34;token comment&#34;&gt;// 按键状态发生变化&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            debounce_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; DEBOUNCE_THRESHOLD&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;debounce_cnt &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;     &lt;span class=&#34;token comment&#34;&gt;// 按键状态未发生变化且计数器未到 0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            debounce_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; debounce_cnt &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;                          &lt;span class=&#34;token comment&#34;&gt;// 按键状态未发生变化且计数器已到 0 表明达到稳定时间，计数器清零&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            debounce_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 输出消抖后的按键信号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            key_filter &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;debounce_cnt &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;// 计数器从最大到 1 时，经过了一个消抖时间，输出滤波后的按键信号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;//key_filter &amp;lt;= key_d1;        // 可以把 key_d1 赋值给 key_filter&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            key_filter &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;key_filter&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;token comment&#34;&gt;// 也可以取反&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            key_filter &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; key_filter&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;div class=&#34;tab&#34; data-id=&#34;id1&#34; data-title=&#34;方法二&#34;&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;toggle_switch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt; clk&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt; rst_n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt; btn&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;      &lt;span class=&#34;token comment&#34;&gt;// 轻触开关原始输入（异步）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;  toggle_out  &lt;span class=&#34;token comment&#34;&gt;// 消抖信号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// -------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; DEBOUNCE_TIME  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.02&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;                     &lt;span class=&#34;token comment&#34;&gt;// 消抖时间（秒）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; CLK_FREQ        &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;50_000&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;_000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;                &lt;span class=&#34;token comment&#34;&gt;// 时钟频率（Hz）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt; DEBOUNCE_THRESHOLD        &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt;&#39;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CLK_FREQ &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; DEBOUNCE_TIME&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 根据时钟频率和闪烁间隔计算计数上限&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; CNT_WIDTH       &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token kernel-function property&#34;&gt;$clog2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;DEBOUNCE_THRESHOLD&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;token comment&#34;&gt;// 计算计数器所需位宽。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// -------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 消抖电路&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; btn_sync_0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;         &lt;span class=&#34;token comment&#34;&gt;// 同步后的按钮信号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;CNT_WIDTH&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; debounce_cnt&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 根据阈值选择足够宽度的计数器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; btn_debounced&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;// 消抖后稳定的按钮信号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 首先对异步信号进行两级同步（或更多级同步）以防止亚稳态问题&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; btn_sync_1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; btn_sync_2&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_sync_0   &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_sync_1 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_sync_2 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_sync_0   &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; btn&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_sync_1 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; btn_sync_0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_sync_2 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; btn_sync_1&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 消抖逻辑：只有当采样值与稳定值不一致时，计数器开始计数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            debounce_cnt  &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_debounced &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 假设未按时为高电平&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;btn_sync_2 &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; btn_debounced&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token comment&#34;&gt;// 状态不一致，开始计数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;debounce_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; DEBOUNCE_THRESHOLD&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    debounce_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; debounce_cnt &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token comment&#34;&gt;// 达到稳定时间，更新消抖信号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    btn_debounced &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; btn_sync_2&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    debounce_cnt  &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token comment&#34;&gt;// 信号稳定，清零计数器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                debounce_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;div class=&#34;tab&#34; data-id=&#34;id1&#34; data-title=&#34;方法三&#34;&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;toggle_switch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt; clk&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt; rst_n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt; btn&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;      &lt;span class=&#34;token comment&#34;&gt;// 轻触开关原始输入（异步）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;  toggle_out  &lt;span class=&#34;token comment&#34;&gt;// 自锁输出状态&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// -------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; DEBOUNCE_TIME  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.02&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;                     &lt;span class=&#34;token comment&#34;&gt;// 消抖时间（秒）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; CLK_FREQ        &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;50_000&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;_000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;                &lt;span class=&#34;token comment&#34;&gt;// 时钟频率（Hz）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt; DEBOUNCE_THRESHOLD &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt;&#39;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CLK_FREQ &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; DEBOUNCE_TIME&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 消抖计数阈值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; CNT_WIDTH       &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token kernel-function property&#34;&gt;$clog2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;DEBOUNCE_THRESHOLD&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 计数器所需位宽&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// -------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 消抖电路&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; btn_sync_0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;         &lt;span class=&#34;token comment&#34;&gt;// 同步后的按钮信号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;CNT_WIDTH&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; debounce_cnt&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 递增计数器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; btn_debounced&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;token comment&#34;&gt;// 消抖后稳定的按钮信号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 多级同步，防止亚稳态问题&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; btn_sync_1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; btn_sync_2&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_sync_0 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_sync_1 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_sync_2 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_sync_0 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; btn&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_sync_1 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; btn_sync_0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_sync_2 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; btn_sync_1&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 消抖逻辑（递增计数器版）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 当采样信号（btn_sync_2）与当前消抖信号（btn_debounced）不同时，&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 计数器开始递增；如果计数器达到阈值，则更新消抖信号，&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 否则当采样信号与稳定信号一致时立即清零计数器。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            debounce_cnt  &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_debounced &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 假设空闲时按键为高电平&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;btn_sync_2 &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; btn_debounced&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                debounce_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 采样信号与当前稳定状态一致，清零计数器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;debounce_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; DEBOUNCE_THRESHOLD&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    debounce_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; debounce_cnt &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 递增计数器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token comment&#34;&gt;// 达到稳定时间，更新消抖信号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    btn_debounced &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; btn_sync_2&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    debounce_cnt  &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;这三种方法的不同重点在于消抖时间的计数方式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方法一：采用递减的计数器，从最大值 DEBOUNCE_THRESHOLD 开始，当一级同步和二级同步信号不一致时，表明按键状态未稳定，计数器赋最大值。接下来，若信号一致，则递减，但一旦又不一致则赋最大值（前面的递减失效）。这样，只有当信号一致且一直递减到 0，才表示达到消抖时间，在计数器为 1 时（消抖时间为计数器最大值到 1）对消抖的信号 key_filter 进行翻转或者赋为 key_d1 的值。&lt;/li&gt;
&lt;li&gt;方法二：采用递增的计数器，先定义了消抖的信号 btn_debounced，当 btn_debounced 与同步后的信号不一致时，消抖计数器 debounce_cnt 开始计数。但如果未计满时两者一致表明是抖动，则清零重新开始计数。反之若开始计数后两者没有一致的情况，能让计数一直计到最大值时，表明信号稳定，给 btn_debounced 赋为同步信号的值，计数器清零。&lt;br /&gt;
- 方法三：采用递增的计数器，先定义了消抖的信号 btn_debounced，当 btn_debounced 与同步后的信号一致时，表明处于抖动或者已经稳定，计数器归零，若不一致，则计数器从 0 递增。当不一致的时间达到消抖时间，表明稳定，更新消抖信号，给 btn_debounced 赋为同步信号的值，同时清零计数器。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;自锁模块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#自锁模块&#34;&gt;#&lt;/a&gt; 自锁模块&lt;/h1&gt;
&lt;p&gt;代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;span&gt;g key_locked.v&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//-----------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Design Name: key_locked&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// File Name: key_locked.v&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Function: 按键自锁模块。已知按键默认为高电平，按下时为低电平。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Coder: Rei&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Date: 2025.03.17&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//-----------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; key_locked &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;           sys_clk&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;           sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;           key&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;      key_locked&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; key_d0&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; key_d1&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 打两拍，两级同步&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always@&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            key_d0 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            key_d1 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            key_d0 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; key&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            key_d1 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; key_d0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 采集按键下降沿&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always@&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            key_locked &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;key_d0 &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; key_d1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            key_locked &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;key_locked&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            key_locked &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; key_locked&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;对于自锁模块，则是通过打两拍（更保险三拍），然后取最后两个同步信号进行采集下降沿（若按下为低电平则采集下降沿，否则采集上升沿），并进行翻转，这样只有在再次遇到下降沿才会翻转信号，实现自锁。（前提是按键消抖过。）&lt;/p&gt;
&lt;h1 id=&#34;按键控制蜂鸣器模块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#按键控制蜂鸣器模块&#34;&gt;#&lt;/a&gt; 按键控制蜂鸣器模块&lt;/h1&gt;
&lt;p&gt;代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;span&gt;key_beep.v&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//-----------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Design Name: key_beep&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// File Name: key_beep.v&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Function: 按键控制蜂鸣器，蜂鸣器默认为高电平鸣叫，按键为高电平时停止鸣叫，按键为低电平又继续鸣叫。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Coder: Rei&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Date: 2025.03.17&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//-----------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; key_beep &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;           sys_clk&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;           sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;           key&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;      beep&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            beep &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            beep &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; key&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;输入为消抖并能自锁的按键信号，根据需求控制蜂鸣器即可，这里通过 beep 同步 key 的信号实现需求。&lt;/p&gt;
&lt;h1 id=&#34;顶层模块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#顶层模块&#34;&gt;#&lt;/a&gt; 顶层模块&lt;/h1&gt;
&lt;p&gt;代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;span&gt;top_key_beep.v&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//-----------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Design Name: top_key_beep&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// File Name: top_key_beep.v&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Function: 按键控制蜂鸣器顶层模块，对按键进行消抖，再实现自锁，实现，蜂鸣器默认为高，按下按键为低，松开保持，再按下为高，松开保持。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Coder: Rei&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Date: 2025.03.17&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//-----------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; top_key_beep &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;           sys_clk&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;           sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;           key&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;output&lt;/span&gt;          beep&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; DEBOUNCE_TIME &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.02&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;// 20ms&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt; key_filter&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; key_locked&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key_debounce #&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;DEBOUNCE_TIME&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;DEBOUNCE_TIME&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; key_debounce_inst &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sys_clk&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys_clk&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sys_rst_n&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;key_filter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key_filter&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key_locked key_locked_inst &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sys_clk&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys_clk&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sys_rst_n&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key_filter&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;key_locked&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key_locked&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key_beep key_beep_inst &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sys_clk&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys_clk&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sys_rst_n&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key_locked&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;beep&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;beep&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;调用并例化各个子模块，实现最终功能：按键按下时鸣叫结束，松开后保持。再次按下时，重新开始鸣叫，松开后保持。&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;在例化子模块时，对于子模块的输出信号，在顶层模块里一般声明为 wire 类型，如这里的 key_filter、key_locked、beep&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;一般对于：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;module top_key_beep (
    input           sys_clk,
    input           sys_rst_n,
    input           key,

    output          beep
);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;没有特别说明 reg 时（如 output  reg  beep），都默认是 wire 类型。&lt;/p&gt;
&lt;h1 id=&#34;仿真结果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#仿真结果&#34;&gt;#&lt;/a&gt; 仿真结果&lt;/h1&gt;
&lt;p&gt;测试代码为：&lt;/p&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;span&gt;tb_top_key_beep.v&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token constant&#34;&gt;`timescale&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;ns&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;ns  &lt;span class=&#34;token comment&#34;&gt;// Time scale is set to 1ns/1ns&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;tb_top_key_beep&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; CLK_PERIOD &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 50MHz&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;         sys_clk&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;        &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;         sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;         key&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt;        beep&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; DEBOUNCE_TIME &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.0000002&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 200ns&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;initial&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sys_clk &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sys_rst_n &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#200&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sys_rst_n &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#100&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;// 按下按键&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#40&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;// 按键抖动&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#30&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;// 按键抖动结束&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#1000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;// 松开按键&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#50&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;// 按键抖动&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#30&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;// 按键抖动结束&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 再次按下按键&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#1000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;// 按下按键&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#40&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;// 按键抖动&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#30&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;// 按键抖动结束&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#1000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;// 松开按键&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#50&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;// 按键抖动&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#30&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;// 按键抖动结束    &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token important&#34;&gt;always&lt;/span&gt; #&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CLK_PERIOD&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; sys_clk &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;sys_clk&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 时钟周期为 20ns&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;top_key_beep #&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;DEBOUNCE_TIME&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;DEBOUNCE_TIME&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    u_top_key_beep &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sys_clk&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys_clk&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sys_rst_n&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;beep&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;beep&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;仿真结果为：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;消抖模块&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/5.2.jpg&#34; title=&#34;消抖模块仿真结果&#34; style=&#34;max-width: 70%; height: auto;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;顶层模块&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/5.3.jpg&#34; title=&#34;顶层模块仿真结果&#34; style=&#34;max-width: 70%; height: auto;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="课程学习" scheme="https://ei4869.github.io/miyano/categories/Course-Study/" />
        <category term="FPGA" scheme="https://ei4869.github.io/miyano/categories/Course-Study/FPGA/" />
        <category term="课程" scheme="https://ei4869.github.io/miyano/tags/%E8%AF%BE%E7%A8%8B/" />
        <category term="FPGA" scheme="https://ei4869.github.io/miyano/tags/FPGA/" />
        <updated>2025-03-17T09:25:00.000Z</updated>
    </entry>
    <entry>
        <id>https://ei4869.github.io/miyano/Course-Study/Japanese/%E5%8A%A8%E8%AF%8D%E5%92%8C%E5%BD%A2%E5%AE%B9%E8%AF%8D%E7%9F%A5%E8%AF%86%E7%82%B9/</id>
        <title>动词和形容词知识点</title>
        <link rel="alternate" href="https://ei4869.github.io/miyano/Course-Study/Japanese/%E5%8A%A8%E8%AF%8D%E5%92%8C%E5%BD%A2%E5%AE%B9%E8%AF%8D%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
        <content type="html">&lt;h1 id=&#34;动词三分类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动词三分类&#34;&gt;#&lt;/a&gt; 动词三分类&lt;/h1&gt;
&lt;p&gt;所有的动词原型都是う段结尾。&lt;/p&gt;
&lt;h2 id=&#34;一类动词五う段动词&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一类动词五う段动词&#34;&gt;#&lt;/a&gt; 一类动词（五 (う) 段动词）&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;结尾是う段非る的动词，肯定是五段动词。&lt;/li&gt;
&lt;li&gt;あ段 + る、う段 + る、お段 + る 是五段动词&lt;/li&gt;
&lt;li&gt;特例：
&lt;ul&gt;
&lt;li&gt;かく　さがす　かつ　あそぶ　よむ&lt;/li&gt;
&lt;li&gt;こまる　おこる　やる&lt;/li&gt;
&lt;li&gt;きる　かえる　はしる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;二类动词上一段动词い段-下一段动词え段&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二类动词上一段动词い段-下一段动词え段&#34;&gt;#&lt;/a&gt; 二类动词（上一段动词 (い段)、下一段动词 (え段)）&lt;/h2&gt;
&lt;p&gt;い段 + る、え段 + る&lt;br /&gt;
 eg:&lt;br /&gt;
 おきる (い段 + る)&lt;br /&gt;
 たべる (え段 + る)&lt;br /&gt;
 みえる (え段 + る)&lt;br /&gt;
 きる (い段 + る)&lt;/p&gt;
&lt;h2 id=&#34;三类动词か变-サ变&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三类动词か变-サ变&#34;&gt;#&lt;/a&gt; 三类动词（か变、サ变）&lt;/h2&gt;
&lt;p&gt;&lt;ruby&gt;来&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;く&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; る&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; - か变&lt;br /&gt;
する　- サ变&lt;/p&gt;
&lt;p&gt;但サ变有很多，通过 ” 名词 + する “ 作动词。&lt;br /&gt;
eg: 勉強する　運動する　散歩する    (一般可活用动词的名词才可加する)&lt;/p&gt;
&lt;h1 id=&#34;动词变形-原型-ます形&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动词变形-原型-ます形&#34;&gt;#&lt;/a&gt; 动词变形  &lt;mark&gt;原型 -&amp;gt; ます形&lt;/mark&gt;&lt;/h1&gt;
&lt;h2 id=&#34;五段动词一类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#五段动词一类&#34;&gt;#&lt;/a&gt; 五段动词（一类）&lt;/h2&gt;
&lt;p&gt;う段 -&amp;gt; い段 + ます （う段变同行い段）&lt;br /&gt;
eg:&lt;br /&gt;
&lt;ruby&gt; 書&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;か&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; く&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;　-&amp;gt; &lt;ruby&gt;書&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;か&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; き&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;ます&lt;br /&gt;
&lt;ruby&gt;吸&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;す&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; う&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; -&amp;gt; &lt;ruby&gt;吸&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;す&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; い&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;ます&lt;br /&gt;
&lt;ruby&gt;切&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;き&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; る&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; -&amp;gt; &lt;ruby&gt;切&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;き&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; り&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;ます&lt;br /&gt;
&lt;ruby&gt;呼&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;よ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; ぶ&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; -&amp;gt; &lt;ruby&gt;呼&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;よ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; び&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;ます&lt;/p&gt;
&lt;h2 id=&#34;上一段动词-下一段动词二类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#上一段动词-下一段动词二类&#34;&gt;#&lt;/a&gt; 上一段动词、下一段动词（二类）&lt;/h2&gt;
&lt;p&gt;る -&amp;gt; ます&lt;br /&gt;
 eg:&lt;br /&gt;
&lt;ruby&gt; 教&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おし&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; える&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;   -&amp;gt; &lt;ruby&gt;教&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おし&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; えます&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;br /&gt;
&lt;ruby&gt;開&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; ける&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; -&amp;gt; &lt;ruby&gt;開&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; けます&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;br /&gt;
&lt;ruby&gt;調&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しら&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; べる&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; -&amp;gt; &lt;ruby&gt;調&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しら&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; べます&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;br /&gt;
&lt;ruby&gt;得&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;え&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; る&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;　-&amp;gt; &lt;ruby&gt;得&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;え&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; ます&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/p&gt;
&lt;h2 id=&#34;か变-サ变动词三类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#か变-サ变动词三类&#34;&gt;#&lt;/a&gt; か变、サ变动词（三类）&lt;/h2&gt;
&lt;p&gt;&lt;ruby&gt;来&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;く&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; る&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; -&amp;gt; &lt;ruby&gt;来&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;き&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; ます&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;br /&gt;
する　-&amp;gt; します&lt;br /&gt;
 eg:&lt;br /&gt;
&lt;ruby&gt; 勉強&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;べんきょう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; する   -&amp;gt; 勉強します&lt;/p&gt;
&lt;h1 id=&#34;て形动词-原型-て形&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#て形动词-原型-て形&#34;&gt;#&lt;/a&gt; て形动词  &lt;mark&gt;原型 -&amp;gt; て形&lt;/mark&gt;&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;三类动词的变形：する　-&amp;gt; して、&lt;ruby&gt;来&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;く&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; る&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; -&amp;gt; &lt;ruby&gt;来&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;き&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; て&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;二类动词的变形：る -&amp;gt; て&lt;br /&gt;
 eg: &lt;ruby&gt;食&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;た&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; べる　-&amp;gt; &lt;ruby&gt;食&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;た&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; べて   &lt;ruby&gt;調&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しら&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; べる -&amp;gt; &lt;ruby&gt;調&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しら&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; べて&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一类动词（う段动词的变形）：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;结尾&lt;/th&gt;
&lt;th&gt;变形规则&lt;/th&gt;
&lt;th&gt;例子&lt;/th&gt;
&lt;th&gt;变形后&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;す&lt;/td&gt;
&lt;td&gt;-&amp;gt; して&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;話&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はな&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; す&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;話&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はな&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; して&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;く&lt;/td&gt;
&lt;td&gt;-&amp;gt; いて&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;磨&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;みが&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; く&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;磨&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;みが&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; いて&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ぐ&lt;/td&gt;
&lt;td&gt;-&amp;gt; いで&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;急&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;いそ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; ぐ&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;急&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;いそ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; いで&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;う、つ、る&lt;/td&gt;
&lt;td&gt;-&amp;gt; って&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;洗&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あら&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; う&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;洗&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あら&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; って&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;う、つ、る&lt;/td&gt;
&lt;td&gt;-&amp;gt; って&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;待&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ま&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; つ&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;待&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ま&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; って&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;う、つ、る&lt;/td&gt;
&lt;td&gt;-&amp;gt; って&lt;/td&gt;
&lt;td&gt;やる&lt;/td&gt;
&lt;td&gt;やって&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ぶ、む、ね&lt;/td&gt;
&lt;td&gt;-&amp;gt; んで&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;遊&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あそ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; ぶ&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;遊&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あそ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; んで&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ぶ、む、ね&lt;/td&gt;
&lt;td&gt;-&amp;gt; んで&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;読&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;よ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; む&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;読&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;よ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; んで&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ぶ、む、ね&lt;/td&gt;
&lt;td&gt;-&amp;gt; んで&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;死&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;し&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; ね&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;死&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;し&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; んで&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;特例：&lt;ruby&gt;行&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;い&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; く&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; -&amp;gt; &lt;ruby&gt;行&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;い&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; って&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/p&gt;
&lt;h1 id=&#34;た形动词&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#た形动词&#34;&gt;#&lt;/a&gt; た形动词&lt;/h1&gt;
&lt;p&gt;把て形动词的て换成た即可。&lt;/p&gt;
&lt;h1 id=&#34;形容词&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#形容词&#34;&gt;#&lt;/a&gt; 形容词&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;一类形容词
&lt;ul&gt;
&lt;li&gt;以い结尾&lt;/li&gt;
&lt;li&gt;&lt;ruby&gt;漢字&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かんじ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　+ い&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;eg: &lt;ruby&gt;寒&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;さむ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; い&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;　&lt;ruby&gt;暖&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あたた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; かい&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;二类形容词&lt;br /&gt;
 eg: &lt;ruby&gt;綺麗&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;きれい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　&lt;ruby&gt;詳細&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しょうさい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　&lt;ruby&gt;愉快&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ゆかい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;形 1 表肯定时： い　+ です　（&lt;ruby&gt;熱&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あつ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; い&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;　-&amp;gt; 熱いです）&lt;br /&gt;
表否定时：い -&amp;gt; くない　（&lt;ruby&gt;熱&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あつ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; い&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;　-&amp;gt; 熱くない　です　=　熱くありません）&lt;br /&gt;
表过去时：い -&amp;gt; かった    （&lt;ruby&gt;熱&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あつ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; い&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; -&amp;gt; 熱かった）&lt;br /&gt;
表过去否定时：い -&amp;gt; くなかった   （&lt;ruby&gt;熱&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あつ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; い&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; -&amp;gt; 熱くなかった）&lt;/p&gt;
</content>
        <category term="课程学习" scheme="https://ei4869.github.io/miyano/categories/Course-Study/" />
        <category term="日语" scheme="https://ei4869.github.io/miyano/categories/Course-Study/Japanese/" />
        <category term="课程" scheme="https://ei4869.github.io/miyano/tags/%E8%AF%BE%E7%A8%8B/" />
        <updated>2025-03-15T07:45:00.000Z</updated>
    </entry>
    <entry>
        <id>https://ei4869.github.io/miyano/Course-Study/FPGA/FPGA%E5%AD%A6%E4%B9%A0(%E5%9B%9B)-%E6%8C%89%E9%94%AE%E6%8E%A7%E5%88%B6LED/</id>
        <title>FPGA学习(四)-按键控制LED</title>
        <link rel="alternate" href="https://ei4869.github.io/miyano/Course-Study/FPGA/FPGA%E5%AD%A6%E4%B9%A0(%E5%9B%9B)-%E6%8C%89%E9%94%AE%E6%8E%A7%E5%88%B6LED/"/>
        <content type="html">&lt;h1 id=&#34;目的&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#目的&#34;&gt;#&lt;/a&gt; 目的&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;基本功能&lt;br /&gt;
两个按键控制两个 LED。&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;按键状态&lt;/th&gt;
&lt;th&gt;LED 显示效果&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;无按键按下&lt;/td&gt;
&lt;td&gt;两个 LED 全灭&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;按下 Key0&lt;/td&gt;
&lt;td&gt;两个灯交替闪烁&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;按下 Key1&lt;/td&gt;
&lt;td&gt;两个灯同时闪烁&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;两个都按下&lt;/td&gt;
&lt;td&gt;两个灯全亮&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;已知按键默认为高电平，按下时拉低；且需要设置 LED 流水间隔或闪烁间隔时间。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;进阶功能 1&lt;br /&gt;
 四个按键控制四个 LED。&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;按键状态&lt;/th&gt;
&lt;th&gt;LED 显示效果&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;无按键按下&lt;/td&gt;
&lt;td&gt;四个 LED 全灭&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;按下 Key0&lt;/td&gt;
&lt;td&gt;自左向右流水灯&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;按下 Key1&lt;/td&gt;
&lt;td&gt;自右向左流水灯&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;按下 Key2&lt;/td&gt;
&lt;td&gt;四个灯同时闪烁&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;按下 Key3&lt;/td&gt;
&lt;td&gt;四个灯全亮&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;进阶功能 2&lt;br /&gt;
 原本的开关是轻触开关，需要设计为自锁开关。且进行按键消抖。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;基本功能&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本功能&#34;&gt;#&lt;/a&gt; 基本功能&lt;/h1&gt;
&lt;h2 id=&#34;实现思路&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#实现思路&#34;&gt;#&lt;/a&gt; 实现思路&lt;/h2&gt;
&lt;p&gt;实现思路为：&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/4.1.jpg&#34; title=&#34;两按键控制LED&#34; style=&#34;max-width: 70%; height: auto;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;代码实现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#代码实现&#34;&gt;#&lt;/a&gt; 代码实现&lt;/h2&gt;
&lt;p&gt;对于基本功能，verilog 代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;span&gt;key_led_2.v&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//-----------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Design Name: key_led_2 &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// File Name: key_led_2.v&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Function: LED 流水或闪烁间隔为 0.5s&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//  按键状态        LED 显示效果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//  无按键按下      两个 LED 全灭&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//  按下 Key0        两个灯交替闪烁&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//  按下 Key1        两个灯同时闪烁&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//  同时按下        两个灯全亮&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 按下时按键为低电平，默认为高电平&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Coder: Rei&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Date: 2025.03.12&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//-----------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; key_led_2 #&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; BLINK_INTERVAL  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.5&lt;/span&gt;                       &lt;span class=&#34;token comment&#34;&gt;// 闪烁间隔（秒）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;               sys_clk&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;               sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;         key&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;    led&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; CLK_FREQ        &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;50_000&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;_000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;                &lt;span class=&#34;token comment&#34;&gt;// 时钟频率（Hz）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; INTERVAL        &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt;&#39;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CLK_FREQ &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; BLINK_INTERVAL&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 根据时钟频率和闪烁间隔计算计数上限&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; CNT_WIDTH       &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token kernel-function property&#34;&gt;$clog2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;INTERVAL&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;token comment&#34;&gt;// 计算计数器所需位宽。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;CNT_WIDTH&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;     cnt&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;                     led_flag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 计数器计时 0.5s&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; INTERVAL &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; cnt &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//led 状态切换标志位&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        led_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cnt &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; INTERVAL &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        led_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;led_flag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        led_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; led_flag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;////led 控制，根据按键状态和 led_flag 切换 led 状态 (使用 if-else)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// always @(posedge sys_clk or negedge sys_rst_n) begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//     if (!sys_rst_n) &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//         led &amp;lt;= 2&#39;b00;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//     else if (key == 2&#39;b00)                  // 同时按下&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//         led &amp;lt;= 2&#39;b11;                       &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//     else if (key == 2&#39;b11)                  // 两个都没按&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//         led &amp;lt;= 2&#39;b00;  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//     else if (key == 2&#39;b10)                  // 按下 Key0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//         led &amp;lt;= led_flag ? 2&#39;b01 : 2&#39;b10;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//     else if (key == 2&#39;b01)                  // 按下 Key1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//         led &amp;lt;= led_flag ? 2&#39;b11 : 2&#39;b00;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//     else ;                                  // 其他情况灯状态不变&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//led 控制，根据按键状态和 led_flag 切换 led 状态 (使用 case)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&#39;b00&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token number&#34;&gt;2&#39;b00&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&#39;b11&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;            &lt;span class=&#34;token comment&#34;&gt;// 同时按下&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token number&#34;&gt;2&#39;b11&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&#39;b00&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;            &lt;span class=&#34;token comment&#34;&gt;// 两个都没按&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token number&#34;&gt;2&#39;b10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; led_flag &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&#39;b01&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&#39;b10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 按下 Key0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token number&#34;&gt;2&#39;b01&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; led_flag &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&#39;b11&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&#39;b00&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 按下 Key1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; led&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;            &lt;span class=&#34;token comment&#34;&gt;// 其他情况灯状态不变   或者写成：default: ;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;78&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;endcase&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;79&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;                               &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;80&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;81&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;82&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;其中的 led 控制逻辑可采用 case 和 if-else 块，但多分支下，case 块结构更加清晰易读。该代码最主要的思路就是：当计数器计数到所需时间时，对 led_flag 进行取反，则 led_flag 的每个电平的持续时间都表示需要的时间间隔，led 的闪烁状态即根据 led_flag 进行切换保证闪烁间隔满足要求，led 状态模式则有按键控制。&lt;/p&gt;
&lt;h2 id=&#34;仿真结果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#仿真结果&#34;&gt;#&lt;/a&gt; 仿真结果&lt;/h2&gt;
&lt;p&gt;测试代码为：&lt;/p&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;span&gt;tb_key_led_2.v&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token constant&#34;&gt;`timescale&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;ns &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;ns&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; tb_key_led_2&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Parameters&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; PERIOD          &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;                            &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; BLINK_INTERVAL  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.0000005&lt;/span&gt;                           &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Inputs&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;             sys_clk                           &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;             sys_rst_n                         &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;     &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;   key                               &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Outputs&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt;    &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;   led&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;initial&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sys_clk     &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sys_rst_n   &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key         &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&#39;b11&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;           &lt;span class=&#34;token comment&#34;&gt;// 按键没按下&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#200&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sys_rst_n &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#2000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&#39;b10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;           &lt;span class=&#34;token comment&#34;&gt;// 按下 Key0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#2000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&#39;b11&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;           &lt;span class=&#34;token comment&#34;&gt;// 按键没按下&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#2000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&#39;b01&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;           &lt;span class=&#34;token comment&#34;&gt;// 按下 Key1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#2000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&#39;b11&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;           &lt;span class=&#34;token comment&#34;&gt;// 按键没按下&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#2000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&#39;b00&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;           &lt;span class=&#34;token comment&#34;&gt;// 同时按下&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#2000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&#39;b11&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;           &lt;span class=&#34;token comment&#34;&gt;// 按键没按下&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token important&#34;&gt;always&lt;/span&gt; #&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;PERIOD&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; sys_clk &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;sys_clk&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;key_led_2 #&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;BLINK_INTERVAL &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; BLINK_INTERVAL &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; u_key_led_2 &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sys_clk                 &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; sys_clk                  &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sys_rst_n               &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; sys_rst_n                &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;key                     &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; key                      &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;led                     &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; led                      &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/4.2.jpg&#34; title=&#34;Modelsim 两按键控制LED-仿真结果&#34; style=&#34;max-width: 70%; height: auto;&#34;&gt; 
&lt;p&gt;设置的参数是闪烁间隔为 500ns。&lt;/p&gt;
&lt;h1 id=&#34;进阶功能1&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#进阶功能1&#34;&gt;#&lt;/a&gt; 进阶功能 1&lt;/h1&gt;
&lt;h2 id=&#34;实现思路-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#实现思路-2&#34;&gt;#&lt;/a&gt; 实现思路&lt;/h2&gt;
&lt;p&gt;实现思路为：&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/4.3.jpg&#34; title=&#34;四按键控制LED&#34; style=&#34;max-width: 70%; height: auto;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;代码实现-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#代码实现-2&#34;&gt;#&lt;/a&gt; 代码实现&lt;/h2&gt;
&lt;p&gt;verilog 代码如下：&lt;/p&gt;
&lt;div class=&#34;tab&#34; data-id=&#34;id1&#34; data-title=&#34;方法一&#34;&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;span&gt;key_led_4.v&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//-----------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Design Name: key_led_4 &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// File Name: key_led_4.v&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Function: LED 流水或闪烁间隔为 0.5s&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//  按键状态        LED 显示效果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//  无按键按下      四个 LED 全灭&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//  按下 Key0        自左向右流水灯&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//  按下 Key1        自右向左流水灯&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//  按下 Key2        四个灯同时闪烁&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//  按下 Key3        四个灯全亮 &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Coder: Rei&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Date: 2025.03.12&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//-----------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; key_led_4  #&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; BLINK_INTERVAL  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.5&lt;/span&gt;                       &lt;span class=&#34;token comment&#34;&gt;// 闪烁间隔（秒）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;               sys_clk&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;               sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;         key&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;    led&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; CLK_FREQ        &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;50_000&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;_000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;                &lt;span class=&#34;token comment&#34;&gt;// 时钟频率（Hz）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; INTERVAL        &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt;&#39;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CLK_FREQ &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; BLINK_INTERVAL&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 根据时钟频率和闪烁间隔计算计数上限&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; CNT_WIDTH       &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token kernel-function property&#34;&gt;$clog2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;INTERVAL&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;token comment&#34;&gt;// 计算计数器所需位宽。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;CNT_WIDTH&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;     cnt&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;                     led_flag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt;                 flow_led_flag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 计数器计时 0.5s&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; INTERVAL &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; cnt &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//led 状态切换标志位&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        led_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cnt &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; INTERVAL &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        led_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;led_flag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        led_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; led_flag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//led 流水灯控制位&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        flow_led_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cnt &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; INTERVAL &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;flow_led_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            flow_led_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; flow_led_flag &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            flow_led_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//led 控制，根据按键状态和 led_flag 切换 led 状态 (使用 case)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b0000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token number&#34;&gt;4&#39;b1111&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b0000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;                            &lt;span class=&#34;token comment&#34;&gt;// 两个都没按&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token number&#34;&gt;4&#39;b1110&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;                                            &lt;span class=&#34;token comment&#34;&gt;// 按下 Key0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;flow_led_flag &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b0001&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;flow_led_flag &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;flow_led_flag &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b0100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b0010&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token number&#34;&gt;4&#39;b1101&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;                                            &lt;span class=&#34;token comment&#34;&gt;// 按下 Key1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;flow_led_flag &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b0001&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;78&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;flow_led_flag &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b0010&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;79&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;flow_led_flag &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b0100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;80&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;81&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token number&#34;&gt;4&#39;b1011&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; led_flag &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b1111&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b0000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;       &lt;span class=&#34;token comment&#34;&gt;// 按下 Key2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;82&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token number&#34;&gt;4&#39;b0111&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b1111&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;                            &lt;span class=&#34;token comment&#34;&gt;// 按下 Key3&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;83&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; led&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;84&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;endcase&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;85&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;                               &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;86&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;87&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;88&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;div class=&#34;tab&#34; data-id=&#34;id1&#34; data-title=&#34;方法二&#34;&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;span&gt;key_led_controller.v&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; key_led_controller #&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; BLINK_INTERVAL &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;       &lt;span class=&#34;token comment&#34;&gt;// 闪烁或流水间隔（秒）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; LED_NUM        &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;          &lt;span class=&#34;token comment&#34;&gt;// LED 个数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt; sys_clk&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; key&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;// 按键输入，假设低有效：key [3]=Key3，key [0]=Key0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;LED_NUM&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; led&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt; CLK_FREQ  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;50_000&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;_000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;                &lt;span class=&#34;token comment&#34;&gt;// 时钟频率（Hz）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 计算定时更新周期（周期数），例如：50MHz 时 0.5s = 25_000_000 个时钟周期&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt; INTERVAL  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; CLK_FREQ &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; BLINK_INTERVAL&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt; CNT_WIDTH &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token kernel-function property&#34;&gt;$clog2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;INTERVAL&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 定时计数器，每 INTERVAL 个时钟周期产生一次更新时刻&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;CNT_WIDTH&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; cnt&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cnt &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; INTERVAL &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; cnt &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 按键检测：低有效（0 表示按下）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt; key0_pressed &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt; key1_pressed &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt; key2_pressed &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt; key3_pressed &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 模式定义&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; MODE_OFF    &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 无按键按下：LED 全灭&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; MODE_FLOW_L &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// Key0：自左向右流水&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; MODE_FLOW_R &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// Key1：自右向左流水&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; MODE_BLINK  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// Key2：全闪烁（交替全灭 / 全亮）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; MODE_ALL_ON &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// Key3：全部 LED 全亮&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; mode&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;                  &lt;span class=&#34;token comment&#34;&gt;// 当前工作模式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;LED_NUM&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; led_reg&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;         &lt;span class=&#34;token comment&#34;&gt;// 内部 LED 状态寄存器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 状态更新：在每个定时更新时刻，根据按键优先级更新模式及 LED 状态&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            mode    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; MODE_OFF&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            led_reg &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;#123;&lt;/span&gt;LED_NUM&lt;span class=&#34;token operator&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cnt &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; INTERVAL &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 按键优先级：Key3 &gt; Key2 &gt; Key1 &gt; Key0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key3_pressed&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                mode    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; MODE_ALL_ON&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                led_reg &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;#123;&lt;/span&gt;LED_NUM&lt;span class=&#34;token operator&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key2_pressed&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;mode &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; MODE_BLINK&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    mode    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; MODE_BLINK&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    led_reg &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;#123;&lt;/span&gt;LED_NUM&lt;span class=&#34;token operator&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 初始化全灭，下个周期取反&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    led_reg &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;led_reg&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;// 取反实现闪烁&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key1_pressed&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;mode &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; MODE_FLOW_L&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    mode    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; MODE_FLOW_L&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token comment&#34;&gt;// 初始化：最低位为 1（左侧流水）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    led_reg &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token comment&#34;&gt;// 循环左移：最高位移到最低位&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    led_reg &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;LED_NUM &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;#123;&lt;/span&gt;led_reg&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;LED_NUM&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; led_reg&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;LED_NUM&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; led_reg&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key0_pressed&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;mode &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; MODE_FLOW_R&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    mode    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; MODE_FLOW_R&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token comment&#34;&gt;// 初始化：最高位为 1（右侧流水），当 LED_NUM==1 时仍有效&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    led_reg &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;LED_NUM &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;LED_NUM &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token comment&#34;&gt;// 循环右移：最低位移到最高位&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    led_reg &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;LED_NUM &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;#123;&lt;/span&gt;led_reg&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; led_reg&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;LED_NUM&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; led_reg&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;78&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;79&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;80&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token comment&#34;&gt;// 无按键按下：LED 全部关闭&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;81&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                mode    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; MODE_OFF&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;82&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                led_reg &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;#123;&lt;/span&gt;LED_NUM&lt;span class=&#34;token operator&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;83&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;84&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;85&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;86&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;87&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 输出同步更新 LED 状态&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;88&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;89&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;90&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;#123;&lt;/span&gt;LED_NUM&lt;span class=&#34;token operator&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;91&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;92&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; led_reg&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;93&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;94&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;95&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;方法一和方法二的不同主要在于流水灯方向的控制思路上，方法一根据 flow_led_flag 的不同值设置不同的 led 置位，方法二则根据不同方向，先设置最低位或最高位为 1，再进行移位控制。&lt;br /&gt;
且方法二将 led 的数量进行参数化了，且具备按键优先级：Key3 &amp;gt; Key2 &amp;gt; Key1 &amp;gt; Key0，如同时按下 key3 和 key2 时，会优先执行 key3 的任务。且对五种 MODE 进行参数化，以便对 MODE 的初始状态进行控制，如 MODE_FLOW_R 的初始状态需要保证最高位为 1，MODE_BLINK 的初始状态需要保证全为 0，确保了初始状态后，该 MODE 下的功能对应实现即可。&lt;/p&gt;
&lt;p&gt;注：对于方法二，还使用了 led_reg 作为内部 LED 状态寄存器，而不是直接使用 output reg led，意义如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;确保在状态更新时，LED 的状态不会受到干扰。在某些情况下，直接使用 led 可能会导致毛刺（glitch），即在状态变化的瞬间出现短暂的不稳定状态。使用 led_reg 可以有效避免这种情况。&lt;/li&gt;
&lt;li&gt;在状态更新时，led_reg 可以在一个时钟周期内完成所有的状态变化，而 led 的更新则是在下一个时钟周期内完成。这种方式可以避免在状态变化过程中出现不稳定的输出。&lt;br /&gt;
&lt;mark&gt;（当某个时钟上升沿下，led_reg 的状态需要进行更新，但与此同时，并行执行下，也执行了 led &amp;lt;= led_reg ，但此时 led 继承的其实是 led_reg 在这个时钟上升沿前一刻的状态，而 led_reg 的状态更新发生在这个时钟上升沿后一刻，所以，需要在下个时钟上升沿，led 才能同步上 led_reg 在上个时钟上升沿更新的状态，所以 led 的状态更新始终会比 led_reg 慢一个时钟周期。 但能有效避免直接使用 led 作为状态更新时 状态变化过程可能出现的不稳定输出。）&lt;/mark&gt;&lt;/li&gt;
&lt;li&gt;将内部逻辑和输出逻辑分离，可以使代码更加清晰和易于维护。led_reg 负责内部状态的计算和更新，而 led 负责将最终的状态输出到外部。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;仿真结果-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#仿真结果-2&#34;&gt;#&lt;/a&gt; 仿真结果&lt;/h2&gt;
&lt;p&gt;测试代码为：&lt;/p&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;span&gt;tb_key_led_4.v&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token constant&#34;&gt;`timescale&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;ns &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;ns&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; tb_key_led_4&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Parameters&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; PERIOD          &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;                            &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; BLINK_INTERVAL  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.0000005&lt;/span&gt;                           &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Inputs&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;             sys_clk                           &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;             sys_rst_n                         &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;     &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;   key                               &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Outputs&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt;    &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;   led&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;initial&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sys_clk     &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sys_rst_n   &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key         &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b1111&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;           &lt;span class=&#34;token comment&#34;&gt;// 按键没按下&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#200&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sys_rst_n &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#4000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b1110&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;           &lt;span class=&#34;token comment&#34;&gt;// 按下 Key0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#4000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b1111&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;           &lt;span class=&#34;token comment&#34;&gt;// 按键没按下&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#4000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b1101&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;           &lt;span class=&#34;token comment&#34;&gt;// 按下 Key1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#4000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b1111&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;           &lt;span class=&#34;token comment&#34;&gt;// 按键没按下&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#4000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b1011&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;           &lt;span class=&#34;token comment&#34;&gt;// 按下 Key2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#4000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b1111&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;           &lt;span class=&#34;token comment&#34;&gt;// 按键没按下&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#4000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b0111&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;           &lt;span class=&#34;token comment&#34;&gt;// 按下 Key3&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#4000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    key &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b1111&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;           &lt;span class=&#34;token comment&#34;&gt;// 按键没按下&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token important&#34;&gt;always&lt;/span&gt; #&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;PERIOD&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; sys_clk &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;sys_clk&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;key_led_controller #&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;           &lt;span class=&#34;token comment&#34;&gt;// 或者 key_led_4 &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;BLINK_INTERVAL &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; BLINK_INTERVAL &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; u_key_led_4 &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sys_clk                 &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; sys_clk                  &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sys_rst_n               &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; sys_rst_n                &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;key                     &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; key                      &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;led                     &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; led                      &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;使用方法 2，即对 key_led_controller 进行例化的仿真结果为：&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/4.4.jpg&#34; title=&#34;Modelsim 四按键控制LED-仿真结果1&#34; style=&#34;max-width: 70%; height: auto;&#34;&gt;&lt;/p&gt;
&lt;p&gt;设置的参数是闪烁间隔为 500ns。由图可见，led 确实比 led_reg 慢了一个时钟周期，且当前按下 key0 有自左向右的流水效果。&lt;/p&gt;
&lt;p&gt;使用方法 1，即对 key_led_4 进行例化的仿真结果为：&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/4.5.jpg&#34; title=&#34;Modelsim 四按键控制LED-仿真结果2&#34; style=&#34;max-width: 70%; height: auto;&#34;&gt;&lt;/p&gt;
&lt;p&gt;由图可见，按下 key0 和 key1 后出现了理想的流水效果。且时间间隔控制在了设定的 500ns。&lt;/p&gt;
&lt;h1 id=&#34;进阶功能2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#进阶功能2&#34;&gt;#&lt;/a&gt; 进阶功能 2&lt;/h1&gt;
&lt;p&gt;verilog 实现将轻触开关转为自锁开关的效果，且考虑抖动现象。&lt;/p&gt;
&lt;h2 id=&#34;实现思路-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#实现思路-3&#34;&gt;#&lt;/a&gt; 实现思路&lt;/h2&gt;
&lt;h3 id=&#34;异步实现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#异步实现&#34;&gt;#&lt;/a&gt; 异步实现&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;内部信号定义：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;debounce_cnt：计数器，用于计数连续稳定的时钟周期数，判断按键信号是否消抖。&lt;br /&gt;
debounce_flag：消抖启动标志。当检测到预期边沿（下降或上升）时，该标志置 1，开始计数。&lt;br /&gt;
stable_flag：信号稳定标志，当计数器达到消抖阈值后，置 1 表示按键状态稳定。&lt;br /&gt;
check_neg_flag、check_pos_flag：边沿检测标志，用于交替检测按键下降沿（按下）和上升沿（释放）。初始状态期望下降沿。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;功能模块划分：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;异步边沿检测模块：&lt;br /&gt;
在 always @(btn or negedge sys_rst_n) 块中，模块对按键信号进行边沿检测。根据当前按键状态与预期的边沿标志（check_neg_flag 或 check_pos_flag）比较，当按键状态与预期一致时，设置 debounce_flag，同时清除 stable_flag 以便重新开始计数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;消抖计数器模块：&lt;br /&gt;
在 always @(posedge sys_clk or negedge sys_rst_n) 块中，模块在系统时钟上升沿计数。当 debounce_flag 有效时，计数器递增；当计数达到 DEBOUNCE_THRESHOLD 时，说明按键信号已经稳定，置 stable_flag 为 1，并将计数器复位；如果按键信号未触发，则始终保持计数器归零，确保只在状态稳定时进行判断。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自锁切换逻辑模块：&lt;br /&gt;
在 always @(posedge stable_flag or negedge sys_rst_n) 块中，利用消抖后的稳定信号触发切换逻辑。若当前检测到的是预期的下降沿（即 check_neg_flag 为 1 时），则对输出 toggle_out 取反，完成自锁翻转；同时清除 debounce_flag，并切换边沿检测标志，为下一次按键事件做好准备，实现按下与释放交替检测。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实现的流程图为：&lt;/p&gt;
&lt;iframe id=&#34;embed_dom&#34; name=&#34;embed_dom&#34; frameborder=&#34;0&#34; style=&#34;display:block;margin: 0px;margin-left: auto;margin-right: auto;width:550px; height:400px;&#34;  src=&#34;https://www.processon.com/embed/67d3ad041ca5222c94a0324a&#34;&gt;&lt;/iframe&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/4.6.jpg&#34; title=&#34;自锁开关异步实现&#34; style=&#34;max-width: 70%; height: auto;&#34;&gt; 
&lt;p&gt;预期的波形图：&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/4.8.jpg&#34; title=&#34;自锁开关预期波形图（异步）&#34; style=&#34;max-width: 70%; height: auto;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;同步实现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#同步实现&#34;&gt;#&lt;/a&gt; 同步实现&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;异步信号同步&lt;br /&gt;
由于 btn 是一个异步输入，为避免亚稳态问题，模块采用两级同步结构（btn_sync 与 btn_sync_d）。通过连续两个时钟周期的同步，保证后续消抖逻辑接收到的是稳定的按键采样信号。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;计数器机制&lt;br /&gt;
方案一：当同步后的按键信号 btn_sync_d 与当前消抖后的信号 btn_debounced 不一致时，说明按键状态可能发生了变化，消抖计数器 debounce_cnt 开始计数。但如果未计满时两者一致表明是抖动，则清零重新开始计数。&lt;br /&gt;
如果 btn_sync_d 和 btn_debounced 不一致持续了一个消抖时间（即计数到达最大值）（也即，例如，btn_sync_d 完整按下后为低，而 btn_debounced 默认为没按下的高，若不一致时间达到消抖时间，也即确认了完整按下，此时 btn_debounced 翻转或者说赋为 btn_sync_d 的值），此时默认按键状态已经稳定，随后将 btn_debounced 更新为当前采样值，并将计数器清零。&lt;br /&gt;
若当前采样值与 btn_debounced 一致，则计数器保持归零状态，若已达到消抖时间则表示信号稳定，否则表示为信号抖动，都需要使计数器归零，且无需更新 btn_debounced。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;方案二：当同步后的按键信号 btn_sync_d 与当前消抖后的信号 btn_debounced 一致时，计数器归零，若不一致，则计数器从 0 递增。当不一致的时间达到消抖时间，表明稳定，更新消抖信号同时清零计数器&lt;br /&gt;
 3. 稳定信号输出&lt;br /&gt;
消抖后的稳定信号 btn_debounced 就代表了经过滤波后真实有效的按键状态，后续自锁逻辑将基于该信号进行边沿检测。&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;
&lt;p&gt;边沿检测：&lt;br /&gt;
为了检测按键的有效触发（例如轻触按键时的下降沿），模块使用寄存器 btn_debounced_last 存储上一个时钟周期的消抖信号。&lt;br /&gt;
在每个时钟周期内，通过比较当前 btn_debounced 与上一周期的 btn_debounced_last，即可检测出从高到低的下降沿。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自锁开关逻辑：&lt;br /&gt;
在检测到按键有效下降沿（即 btn_debounced_last 为高而当前 btn_debounced 为低）时，将输出信号 toggle_out 取反，实现自锁状态的翻转。&lt;br /&gt;
这样，每次按键有效触发后，输出状态在高与低之间交替变化，实现自锁开关的功能。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;实现的流程图：&lt;/p&gt;
&lt;iframe id=&#34;embed_dom&#34; name=&#34;embed_dom&#34; frameborder=&#34;0&#34; style=&#34;display:block;margin: 0px;margin-left: auto;margin-right: auto;width:550px; height:400px;&#34; src=&#34;https://www.processon.com/embed/67d3ed0017cd0c3f0a3ad54a?cid=67d3ed0017cd0c3f0a3ad54d&#34;&gt;&lt;/iframe&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/4.7.jpg&#34; title=&#34;自锁开关同步实现&#34; style=&#34;max-width: 70%; height: auto;&#34;&gt; 
&lt;h2 id=&#34;代码实现-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#代码实现-3&#34;&gt;#&lt;/a&gt; 代码实现&lt;/h2&gt;
&lt;p&gt;实现的 verilog 代码分别如下：&lt;/p&gt;
&lt;div class=&#34;tab&#34; data-id=&#34;id2&#34; data-title=&#34;异步实现（优化代码）&#34;&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;span&gt;debounce_opti.v&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; debounce_opti &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;  sys_clk&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;  sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;  btn&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;         &lt;span class=&#34;token comment&#34;&gt;// 按键输入（低有效）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; toggle_out  &lt;span class=&#34;token comment&#34;&gt;// 自锁开关输出&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// -----------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 消抖参数定义&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 这里为了仿真方便使用较低时间 60ns，实际应用时请调高&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; DEBOUNCE_TIME  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.00000006&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;                     &lt;span class=&#34;token comment&#34;&gt;// 消抖时间（秒）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; CLK_FREQ        &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;50_000&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;_000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;                &lt;span class=&#34;token comment&#34;&gt;// 时钟频率（Hz）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt; DEBOUNCE_THRESHOLD        &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt;&#39;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CLK_FREQ &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; DEBOUNCE_TIME&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 根据时钟频率和闪烁间隔计算计数上限&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; CNT_WIDTH       &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token kernel-function property&#34;&gt;$clog2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;DEBOUNCE_THRESHOLD&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;token comment&#34;&gt;// 计算计数器所需位宽。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// -----------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 内部信号定义&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;CNT_WIDTH&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; debounce_cnt&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;// 消抖计数器，根据阈值选宽度&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;                 debounce_flag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 当检测到边沿时置 1，开始计数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;                 stable_flag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;// 当计数达到阈值，信号稳定后置 1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;                 check_neg_flag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 边沿检测标志：预期下降沿时为 1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;                 check_pos_flag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 边沿检测标志：预期上升沿时为 1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// -----------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 异步边沿检测（合并 posedge 与 negedge 检测）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 当 btn 状态与预期（check_*_flag）相符时，置 debounce_flag 有效&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;btn &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            debounce_flag   &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            check_neg_flag  &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 初始状态预期下降沿（按下）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            check_pos_flag  &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            toggle_out      &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 未按下时为高&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;btn &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; check_neg_flag&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;btn &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; check_pos_flag&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                debounce_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                stable_flag   &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                debounce_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; debounce_flag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                stable_flag   &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; stable_flag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 若不满足条件，保持原有 flag 不变&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// -----------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 消抖计数器：在系统时钟域内计数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            debounce_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            stable_flag  &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;debounce_flag&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;debounce_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; DEBOUNCE_THRESHOLD&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    debounce_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; debounce_cnt &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    stable_flag  &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    debounce_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                debounce_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 当输入稳定时，重置计数器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// -----------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 当消抖计数完成（stable_flag 上升）时，执行自锁切换&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 使用稳定信号作为触发条件保持原有逻辑&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; stable_flag &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            toggle_out     &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            debounce_flag  &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            check_neg_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            check_pos_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 若当前是检测下降沿状态，则翻转输出实现自锁切换&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;check_neg_flag &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;check_pos_flag&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;78&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                toggle_out &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;toggle_out&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;79&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 清除消抖标志，为下一次检测做准备&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;80&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            debounce_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;81&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 切换边沿检测标志：交替处理按下和释放&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;82&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            check_neg_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;check_neg_flag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;83&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            check_pos_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;check_pos_flag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;84&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;85&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;86&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;87&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;div class=&#34;tab&#34; data-id=&#34;id2&#34; data-title=&#34;异步实现（初始代码）&#34;&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;span&gt;debounce.v&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; debounce &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt; sys_clk&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt; btn&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; toggle_out&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// -------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 消抖参数定义&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 假设系统时钟为 50MHz，若需要 20ms 的消抖时间，则阈值为：20ms * 50MHz = 1,000,000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// localparam integer DEBOUNCE_THRESHOLD = 1000000;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; DEBOUNCE_TIME  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.00000006&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;                     &lt;span class=&#34;token comment&#34;&gt;// 消抖时间（秒）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; CLK_FREQ        &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;50_000&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;_000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;                &lt;span class=&#34;token comment&#34;&gt;// 时钟频率（Hz）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt; DEBOUNCE_THRESHOLD        &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt;&#39;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CLK_FREQ &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; DEBOUNCE_TIME&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 根据时钟频率和闪烁间隔计算计数上限&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; CNT_WIDTH       &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token kernel-function property&#34;&gt;$clog2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;DEBOUNCE_THRESHOLD&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;token comment&#34;&gt;// 计算计数器所需位宽。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;CNT_WIDTH&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; debounce_cnt&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 根据阈值选择足够宽度的计数器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; debounce_flag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;       &lt;span class=&#34;token comment&#34;&gt;// 消抖标志位&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; stable_flag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;         &lt;span class=&#34;token comment&#34;&gt;// 稳定标志位&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; check_neg_flag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;token comment&#34;&gt;// 检测下降沿标志位&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; check_pos_flag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;token comment&#34;&gt;// 检测上升沿标志位&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; btn &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            debounce_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            toggle_out &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 假设未按时为高电平&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            debounce_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 消抖标志位清零&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            check_neg_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 检测下降沿标志位默认为高&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            check_pos_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 检测上升沿标志位默认为低&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;check_neg_flag &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;check_pos_flag&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                debounce_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                stable_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; debounce_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; debounce_flag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; btn&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;check_neg_flag &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; check_pos_flag&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            debounce_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            stable_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; debounce_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; debounce_flag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            debounce_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            stable_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;debounce_flag &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;debounce_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; DEBOUNCE_THRESHOLD&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    debounce_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; debounce_cnt &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    stable_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    debounce_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                debounce_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 信号稳定，清零计数器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;      &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; stable_flag &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            toggle_out &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;    &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;check_neg_flag &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;check_pos_flag&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                toggle_out &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;toggle_out&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                toggle_out &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; toggle_out&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            debounce_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            check_neg_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;check_neg_flag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            check_pos_flag &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;check_pos_flag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;div class=&#34;tab&#34; data-id=&#34;id2&#34; data-title=&#34;同步实现&#34;&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;span&gt;toggle_switch.v&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Desc: 一个简单的轻触开关消抖与自锁模块 同步设计&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//-----------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Design Name: toggle_switch&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// File Name: toggle_switch.v&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Function: 轻触开关实现消抖和自锁功能。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Coder: Rei&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Date: 2025.03.13&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//-----------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;toggle_switch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt; clk&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt; rst_n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt; btn&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;      &lt;span class=&#34;token comment&#34;&gt;// 轻触开关原始输入（异步）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;  toggle_out  &lt;span class=&#34;token comment&#34;&gt;// 自锁输出状态&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// -------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; DEBOUNCE_TIME  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.02&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;                     &lt;span class=&#34;token comment&#34;&gt;// 消抖时间（秒）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; CLK_FREQ        &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;50_000&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;_000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;                &lt;span class=&#34;token comment&#34;&gt;// 时钟频率（Hz）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt; DEBOUNCE_THRESHOLD        &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt;&#39;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CLK_FREQ &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; DEBOUNCE_TIME&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 根据时钟频率和闪烁间隔计算计数上限&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; CNT_WIDTH       &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token kernel-function property&#34;&gt;$clog2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;DEBOUNCE_THRESHOLD&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;token comment&#34;&gt;// 计算计数器所需位宽。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// -------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 消抖电路&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; btn_sync_0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;         &lt;span class=&#34;token comment&#34;&gt;// 同步后的按钮信号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;CNT_WIDTH&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; debounce_cnt&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 根据阈值选择足够宽度的计数器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; btn_debounced&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;// 消抖后稳定的按钮信号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 首先对异步信号进行两级同步（或更多级同步）以防止亚稳态问题&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; btn_sync_1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; btn_sync_2&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_sync_0   &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_sync_1 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_sync_2 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_sync_0   &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; btn&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_sync_1 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; btn_sync_0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_sync_2 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; btn_sync_1&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 消抖逻辑：只有当采样值与稳定值不一致时，计数器开始计数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            debounce_cnt  &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_debounced &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 假设未按时为高电平&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;btn_sync_2 &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; btn_debounced&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token comment&#34;&gt;// 状态不一致，开始计数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;debounce_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; DEBOUNCE_THRESHOLD&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    debounce_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; debounce_cnt &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token comment&#34;&gt;// 达到稳定时间，更新消抖信号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    btn_debounced &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; btn_sync_2&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    debounce_cnt  &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token comment&#34;&gt;// 信号稳定，清零计数器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                debounce_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// -------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 边沿检测与自锁功能&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; btn_debounced_last&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_debounced_last &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_debounced_last &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; btn_debounced&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 自锁输出：检测下降沿（由高到低）有效跳变时，翻转输出状态&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;78&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;79&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            toggle_out &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 初始状态可根据需求设定为高或低&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;80&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;81&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 仅在检测到按下有效边沿（从高到低）时触发翻转&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;82&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;btn_debounced_last &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;btn_debounced&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;83&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                toggle_out &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;toggle_out&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;84&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;85&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;86&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;87&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;div class=&#34;tab&#34; data-id=&#34;id2&#34; data-title=&#34;同步实现2&#34;&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//-----------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Design Name: toggle_switch&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// File Name: toggle_switch.v&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Function: 轻触开关实现消抖和自锁功能。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Coder: Rei&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Date: 2025.03.13&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//-----------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;toggle_switch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt; clk&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt; rst_n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt; btn&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;      &lt;span class=&#34;token comment&#34;&gt;// 轻触开关原始输入（异步）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;  toggle_out  &lt;span class=&#34;token comment&#34;&gt;// 自锁输出状态&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// -------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; DEBOUNCE_TIME  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.02&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;                     &lt;span class=&#34;token comment&#34;&gt;// 消抖时间（秒）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; CLK_FREQ        &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;50_000&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;_000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;                &lt;span class=&#34;token comment&#34;&gt;// 时钟频率（Hz）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt; DEBOUNCE_THRESHOLD &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt;&#39;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CLK_FREQ &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; DEBOUNCE_TIME&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 消抖计数阈值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; CNT_WIDTH       &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token kernel-function property&#34;&gt;$clog2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;DEBOUNCE_THRESHOLD&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 计数器所需位宽&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// -------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 消抖电路&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; btn_sync_0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;         &lt;span class=&#34;token comment&#34;&gt;// 同步后的按钮信号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;CNT_WIDTH&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; debounce_cnt&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 递增计数器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; btn_debounced&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;token comment&#34;&gt;// 消抖后稳定的按钮信号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 多级同步，防止亚稳态问题&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; btn_sync_1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; btn_sync_2&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_sync_0 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_sync_1 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_sync_2 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_sync_0 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; btn&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_sync_1 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; btn_sync_0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_sync_2 &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; btn_sync_1&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 消抖逻辑（递增计数器版）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 当采样信号（btn_sync_2）与当前消抖信号（btn_debounced）不同时，&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 计数器开始递增；如果计数器达到阈值，则更新消抖信号，&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 否则当采样信号与稳定信号一致时立即清零计数器。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            debounce_cnt  &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_debounced &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 假设空闲时按键为高电平&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;btn_sync_2 &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; btn_debounced&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                debounce_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 采样信号与当前稳定状态一致，清零计数器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;debounce_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; DEBOUNCE_THRESHOLD&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    debounce_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; debounce_cnt &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 递增计数器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token comment&#34;&gt;// 达到稳定时间，更新消抖信号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    btn_debounced &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; btn_sync_2&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    debounce_cnt  &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// -------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 边沿检测与自锁功能&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; btn_debounced_last&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_debounced_last &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            btn_debounced_last &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; btn_debounced&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 自锁输出：仅在检测到按下有效边沿（从高到低）时触发翻转&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;78&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            toggle_out &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 初始状态，可根据需求设为高或低&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;79&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;80&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;btn_debounced_last &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;btn_debounced&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;81&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                toggle_out &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;toggle_out&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;82&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;83&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;84&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;85&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;对于异步实现的代码，优化后的代码合并了 btn 的 posedge 与 negedge 检测，针对两种情形分别对应着 btn 为低且 check_neg_flag 为高即处于下降沿 以及 btn 为高且 check_pos_flag 为高即处于上升沿，此时对消抖标志置 1 和稳定标志置 0 表示开始进行消抖时间计数。在消抖稳定后计数器清零且标记为稳定，再通过检测 stable_flag 上升沿触发判断条件：如果当前按钮为按下的下降沿则翻转 toggle_out，否则不变。并对消抖标志清零，翻转 check_neg_flag 和 check_pos_flag。&lt;/p&gt;
&lt;p&gt;对于同步实现的代码，则是先对异步的原始按钮信号进行两层同步，再对同步后的第二层信号进行消抖，当消抖计数结束后进行同步状态更新，即得到稳定的消抖后的信号 btn_debounced。再对该信号进行一层同步得到 btn_debounced_last，可知 btn_debounced_last 的状态比 btn_debounced 落后一个时钟周期，那么当 btn_debounced_last 为高但 btn_debounced 为低时，则表明此时为按钮按下的下降沿阶段，翻转 toggle_out。&lt;/p&gt;
&lt;h2 id=&#34;仿真结果-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#仿真结果-3&#34;&gt;#&lt;/a&gt; 仿真结果&lt;/h2&gt;
&lt;p&gt;测试的代码为：&lt;/p&gt;
&lt;div class=&#34;tab&#34; data-id=&#34;id3&#34; data-title=&#34;异步的tb&#34;&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;span&gt;tb_debounce.v&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token constant&#34;&gt;`timescale&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;ns&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;ns&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; tb_debounce&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; clk&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; rst_n&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; btn&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;          &lt;span class=&#34;token comment&#34;&gt;// 按键输入：低有效表示按下&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt; toggle_out&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 自锁开关输出状态&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; DEBOUNCE_TIME  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.00000006&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 实例化待测模块（toggle_switch）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    debounce_opti#&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;DEBOUNCE_TIME &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; DEBOUNCE_TIME &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  uut &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sys_clk&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;clk&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sys_rst_n&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;btn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;btn&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toggle_out&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;toggle_out&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// -------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 时钟生成：50MHz, 周期 20ns&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;initial&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        clk &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;forever&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;#10&lt;/span&gt; clk &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;clk&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// -------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 复位生成及初始按键状态（假设未按下时为高）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;initial&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        rst_n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 按键释放&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token number&#34;&gt;#100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;     &lt;span class=&#34;token comment&#34;&gt;// 100 ns 后解除复位&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        rst_n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// -------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 按键信号模拟：包含抖动和按下 / 释放过程&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;initial&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 等待复位完成后稍作延时&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token number&#34;&gt;#200&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 第一轮：按下时产生抖动，再稳定为低&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token kernel-function property&#34;&gt;$display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Simulating first button press with bounce at time %0t&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token kernel-function property&#34;&gt;$time&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 开始按下：从高到低，期间出现短暂反弹&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 首次下降到低&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;// 短暂反弹为高&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;// 再次下降为低&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;// 又一次反弹&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 最后稳定为低&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 保持低一段足够时间，确保消抖生效&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token number&#34;&gt;#100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 第一轮：释放按键时模拟抖动，再稳定为高&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token kernel-function property&#34;&gt;$display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Simulating first button release with bounce at time %0t&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token kernel-function property&#34;&gt;$time&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 首次上升到高&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;// 短暂反弹为低&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;// 再次上升为高&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;// 又一次反弹&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 最后稳定为高&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 保持高一段时间&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token number&#34;&gt;#100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 第二轮：再次按下（含抖动）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token kernel-function property&#34;&gt;$display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Simulating second button press with bounce at time %0t&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token kernel-function property&#34;&gt;$time&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 稳定低&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token number&#34;&gt;#100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 第二轮：释放按键（含抖动）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token kernel-function property&#34;&gt;$display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Simulating second button release with bounce at time %0t&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token kernel-function property&#34;&gt;$time&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;78&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;79&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;80&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;81&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;82&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 稳定高&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;83&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token number&#34;&gt;#100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;84&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;85&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 第三轮：长按（无明显抖动）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;86&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token kernel-function property&#34;&gt;$display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Simulating long press (no bounce) at time %0t&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token kernel-function property&#34;&gt;$time&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;87&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#200&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 按下保持较长时间&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;88&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#200&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 释放保持较长时间&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;89&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;90&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 结束仿真&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;91&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token number&#34;&gt;#200&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;92&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;93&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;94&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;div class=&#34;tab&#34; data-id=&#34;id3&#34; data-title=&#34;同步的tb&#34;&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;span&gt;tb_toggle_switch.v&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token constant&#34;&gt;`timescale&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;ns&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;ns&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; tb_toggle_switch&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; clk&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; rst_n&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; btn&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;          &lt;span class=&#34;token comment&#34;&gt;// 按键输入：低有效表示按下&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt; toggle_out&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 自锁开关输出状态&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 实例化待测模块（toggle_switch）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    toggle_switch uut &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;clk&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;clk&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;rst_n&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;btn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;btn&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toggle_out&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;toggle_out&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// -------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 时钟生成：50MHz, 周期 20ns&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;initial&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        clk &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;forever&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;#10&lt;/span&gt; clk &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;clk&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// -------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 复位生成及初始按键状态（假设未按下时为高）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;initial&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        rst_n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 按键释放&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token number&#34;&gt;#100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;     &lt;span class=&#34;token comment&#34;&gt;// 100 ns 后解除复位&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        rst_n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// -------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 按键信号模拟：包含抖动和按下 / 释放过程&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;initial&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 等待复位完成后稍作延时&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token number&#34;&gt;#200&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 第一轮：按下时产生抖动，再稳定为低&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token kernel-function property&#34;&gt;$display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Simulating first button press with bounce at time %0t&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token kernel-function property&#34;&gt;$time&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 开始按下：从高到低，期间出现短暂反弹&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 首次下降到低&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;// 短暂反弹为高&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;// 再次下降为低&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;// 又一次反弹&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 最后稳定为低&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 保持低一段足够时间，确保消抖生效&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token number&#34;&gt;#100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 第一轮：释放按键时模拟抖动，再稳定为高&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token kernel-function property&#34;&gt;$display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Simulating first button release with bounce at time %0t&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token kernel-function property&#34;&gt;$time&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 首次上升到高&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;// 短暂反弹为低&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;// 再次上升为高&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;// 又一次反弹&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 最后稳定为高&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 保持高一段时间&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token number&#34;&gt;#100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 第二轮：再次按下（含抖动）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token kernel-function property&#34;&gt;$display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Simulating second button press with bounce at time %0t&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token kernel-function property&#34;&gt;$time&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 稳定低&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token number&#34;&gt;#100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 第二轮：释放按键（含抖动）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token kernel-function property&#34;&gt;$display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Simulating second button release with bounce at time %0t&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token kernel-function property&#34;&gt;$time&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;78&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;79&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 稳定高&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;80&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token number&#34;&gt;#100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;81&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;82&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 第三轮：长按（无明显抖动）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;83&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token kernel-function property&#34;&gt;$display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Simulating long press (no bounce) at time %0t&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token kernel-function property&#34;&gt;$time&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;84&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#200&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 按下保持较长时间&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;85&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;token number&#34;&gt;#200&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 释放保持较长时间&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;86&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;87&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 结束仿真&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;88&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token number&#34;&gt;#200&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;89&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;90&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;91&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;实际上两份测试代码基本相同，只是端口不同懒得换。&lt;/p&gt;
&lt;p&gt;仿真结果：&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/4.9.jpg&#34; title=&#34;自锁开关仿真结果（异步）&#34; style=&#34;max-width: 70%; height: auto;&#34;&gt;&lt;/p&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/4.10.jpg&#34; title=&#34;自锁开关仿真结果（同步）&#34; style=&#34;max-width: 70%; height: auto;&#34;&gt; 
&lt;p&gt;可以发现基本都和预期一致。toggle_out 在每次开关按下松开后，电平不变，只在再次按下松开才发生变化。&lt;/p&gt;
&lt;h1 id=&#34;总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;为什么使用了两级寄存器同步外部按键信号（btn）&lt;br /&gt;
外部按钮信号（btn）通常是异步的，即它的变化不与系统时钟对齐。如果直接将这种异步信号用于同步逻辑，很容易引入亚稳态问题，用两级寄存器同步能降低亚稳态风险。&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;一级同步器：当异步信号在时钟边沿采样时，如果恰好在时钟切换附近变化，触发器可能进入亚稳态（输出不确定、延迟很长才能恢复到稳定 0 或 1）。&lt;/li&gt;
&lt;li&gt;两级同步器：第一级触发器采样到的信号可能暂时处于亚稳态状态，但给第二级触发器一个完整的时钟周期，让第一级输出有足够时间恢复到稳定状态。第二级触发器采样后，最终输出就会非常可靠。&lt;br /&gt;
如果只用一级同步器，一旦采样发生在临界时间（时钟边沿附近），触发器可能长时间处于不确定状态，这种亚稳态可能传播到整个设计中，导致系统逻辑错误或不确定行为。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;ins class=&#34;wavy&#34;&gt;亚稳态是数字电路中一种中间状态，当触发器接收到不符合设定时间（setup 和 hold 时间要求）的输入信号时，输出可能无法立即确定为逻辑高或逻辑低，而在一段时间内徘徊在一个模棱两可的状态，直到最终恢复为稳定的 0 或 1。亚稳态可能导致后续逻辑产生错误，因此必须采取措施（如多级同步）来降低风险。&lt;/ins&gt;&lt;/p&gt;
&lt;p&gt;触发器（Flip-Flop）是数字电路中的基本存储元件，用于&lt;ins class=&#34;dot&#34;&gt;在时钟信号控制下采样和存储数据&lt;/ins&gt;。每当时钟达到其采样边沿（上升沿或下降沿）时，触发器会 “捕获” 数据输入的状态，并将其输出保持到下一个时钟边沿。触发器对输入信号有一定的时序要求，通常包括 Setup Time（建立时间）和 Hold Time（保持时间）：&lt;br /&gt;
&lt;ins class=&#34;dot&#34;&gt;建立时间要求在时钟边沿之前，输入数据必须稳定一段时间&lt;/ins&gt;；&lt;br /&gt;
&lt;ins class=&#34;dot&#34;&gt;保持时间要求在时钟边沿之后，输入数据仍需保持不变一段时间&lt;/ins&gt;。&lt;br /&gt;
如果异步的按键信号（btn）甚至一级同步后的信号&lt;ins class=&#34;dot&#34;&gt;在时钟边沿附近发生变化，也就是说，数据变化的时刻接近或违反了建立时间和保持时间要求，触发器可能无法及时、正确地捕获一个确定的逻辑电平，而进入一种称为亚稳态的状态。&lt;/ins&gt;这时，触发器的输出可能既不是稳定的 0，也不是 1，而是在一段不确定的时间内徘徊，直到最终恢复到稳定状态，但这恢复时间可能比预期的要长。&lt;/p&gt;
&lt;p&gt;同步信号通常由寄存器产生，这些寄存器只在时钟边沿更新输出。由于数据更新严格依赖时钟，这确保了数据在时钟边沿前后不会出现突然变化，从而有助于满足建立和保持时间。（前提是设计正确且不涉及跨时钟域传输）在 FPGA 设计中，通常会&lt;ins class=&#34;dot&#34;&gt;为时钟、建立时间和保持时间设置约束&lt;/ins&gt;。时序分析工具（如 Xilinx Vivado、Intel Quartus 或 Synopsys PrimeTime）会根据设计的路径延迟、时钟频率、时钟偏移等信息进行静态时序分析，验证是否满足建立时间和保持时间要求。&lt;/p&gt;
&lt;p&gt;假设一个寄存器的建立时间要求为 1ns，保持时间要求为 0.5ns。如果系统时钟为 50MHz（周期 20ns），且数据从前一个寄存器经过组合逻辑到达下一个寄存器，其延迟为 5ns。如果所有的路径延迟（包括寄存器输出延迟、逻辑延迟和走线延迟）保证数据在时钟边沿前至少 1ns 就已经稳定，并在时钟边沿后保持稳定至少 0.5ns，那么这个寄存器就能正确采样数据，不会出现时序违例，也就不会引起亚稳态。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;计数方式&lt;br /&gt;
计数器从 0 开始计数，当满足&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;if (debounce_cnt &amp;lt; DEBOUNCE_THRESHOLD) begin
    debounce_cnt &amp;lt;= debounce_cnt + 1;
end else begin
    stable_flag &amp;lt;= 1&#39;b1;
    debounce_cnt &amp;lt;= 0;
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;时，实际上计数器经历了 DEBOUNCE_THRESHOLD 个完整的时钟周期。&lt;/p&gt;
&lt;p&gt;而对于&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;if (cnt &amp;lt; INTERVAL - 1)
    cnt &amp;lt;= cnt + 1;
else
    cnt &amp;lt;= 0;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;INTERVAL 定义为所需总时钟周期数。&lt;/p&gt;
&lt;p&gt;两者的区别在于：第一份代码中参数直接表示需要计数的周期数，即表示需要再过多少个时钟周期再执行某个任务，所以不需要减 1 即可表示还需要走的时钟周期数，如果想在 60ns 后执行某些任务，则需要经历 3 个时间周期，DEBOUNCE_THRESHOLD 设为 3 即可 (0&lt;sub&gt;1，1&lt;/sub&gt;2，2~3)；而第二份代码中参数表示总周期数，即从 0 开始，你想要将整个时钟脉冲按想要的时间间隔分割，例如 50MHz，于是想得到 0.5s 的时间就需要分成 25,000,000 个周期，从 0 到 24,999,999 即为一个时间跨度表示 0.5s，需要减 1。&lt;/p&gt;
&lt;p&gt;补充：对于第一份代码，消抖时间的开始是始于两者状态不一致的条件下，当两者不一致开始计数时，此时 cnt 从 0 加 1 变成 1，消抖时间是从 1&lt;sub&gt;DEBOUNCE_THRESHOLD，而不是 0&lt;/sub&gt;DEBOUNCE_THRESHOLD，所以不需要减 1。&lt;br /&gt;
3. 赋值问题&lt;br /&gt;
当某个触发条件下状态更新时，例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    always @(posedge clk or negedge rst_n) begin
        if (!rst_n) begin
            btn_sync   &amp;lt;= 1&#39;b1;
            btn_sync_d &amp;lt;= 1&#39;b1;
        end else begin
            btn_sync   &amp;lt;= btn;
            btn_sync_d &amp;lt;= btn_sync;
        end
    end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;表示：时钟上升沿到来这一刻，把 btn 前一刻的值赋给 btn_sync，且该值保持接下来一个时钟周期，同理，把 btn_sync 前一刻的值赋给 btn_sync_d，该值保持一个时钟周期。&lt;br /&gt;
所以对于：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    always @(posedge clk or negedge rst_n) begin
        if (!rst_n)
            btn_debounced_last &amp;lt;= 1&#39;b1;
        else
            btn_debounced_last &amp;lt;= btn_debounced;
    end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;btn_debounced_last 的状态始终比 btn_debounced 慢一个时钟周期。&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;补充：同步问题&lt;br /&gt;
前面的同步代码，当极端情况（可以通过仿真特意设置验证）下，也即原始按键信号的变化刚好发生在时钟边沿时，也即导致亚稳态，此时，一级同步的信号很可能也不能捕获到正确信号（仿真下出现一级同步的信号时钟边沿下同步的信号为 btn 后一刻的状态而不是前一刻的状态。），此时导致后续逻辑出现问题。所以，需要进行三级同步，第三级同步的信号才能正确反映原始的按键信号的状态。&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/4.11.jpg&#34; title=&#34;自锁开关三级同步&#34; style=&#34;max-width: 70%; height: auto;&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="课程学习" scheme="https://ei4869.github.io/miyano/categories/Course-Study/" />
        <category term="FPGA" scheme="https://ei4869.github.io/miyano/categories/Course-Study/FPGA/" />
        <category term="课程" scheme="https://ei4869.github.io/miyano/tags/%E8%AF%BE%E7%A8%8B/" />
        <category term="FPGA" scheme="https://ei4869.github.io/miyano/tags/FPGA/" />
        <updated>2025-03-14T02:11:00.000Z</updated>
    </entry>
    <entry>
        <id>https://ei4869.github.io/miyano/Course-Study/Japanese/%E5%88%9D%E7%BA%A7%E4%B8%8A-%E7%AC%AC4%E5%8D%95%E5%85%83/</id>
        <title>单元四——小李的公司生活</title>
        <link rel="alternate" href="https://ei4869.github.io/miyano/Course-Study/Japanese/%E5%88%9D%E7%BA%A7%E4%B8%8A-%E7%AC%AC4%E5%8D%95%E5%85%83/"/>
        <content type="html">&lt;h1 id=&#34;第十三课机つくえの-上に-本が-三冊さつ-あります&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第十三课机つくえの-上に-本が-三冊さつ-あります&#34;&gt;#&lt;/a&gt; 第十三课：&lt;ruby&gt;机&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;つくえ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; の　上に　本が　三&lt;ruby&gt;冊&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;さつ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　あります&lt;/h1&gt;
&lt;h2 id=&#34;语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;名数量-动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名数量-动&#34;&gt;#&lt;/a&gt; [名 (数量)] + [动]&lt;/h3&gt;
&lt;p&gt;数量词用在动词前面，量词因所修饰的事物种类而不同。&lt;/p&gt;
&lt;p&gt;注：询问数量时，在 “&lt;ruby&gt;何&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;” 的后面加量词，如 “&lt;ruby&gt;何個&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なんこ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;（多少个）”“&lt;ruby&gt;何本&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なんぼん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;（多少根）”“&lt;ruby&gt;何冊&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なんさつ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;（多少本）”。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;量词&lt;/th&gt;
&lt;th&gt;使用对象&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;~&lt;ruby&gt; 人&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;にん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;人&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;~&lt;ruby&gt; 台&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;だい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;机械或车辆：车、机动车、电脑等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;~&lt;ruby&gt; 枚&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;まい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;薄平物品：纸、盘子、邮票、衬衫等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;~&lt;ruby&gt; 冊&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;さつ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;书、笔记本等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;~&lt;ruby&gt; 歳&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;さい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;年龄&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;~&lt;ruby&gt; 回&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;次数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;~&lt;ruby&gt; 着&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ちゃく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;衣服等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;~&lt;ruby&gt; 個&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;こ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;立体的物品：鸡蛋、饭团子、球等&lt;br&gt;空容器或器皿：箱子、盒子、空罐、玻璃杯等&lt;br&gt;概念性的、抽象的事物：密码等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;~&lt;ruby&gt; 本&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ぼん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;细长物品：瓶、铅笔、伞、香蕉等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;~&lt;ruby&gt; 杯&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;容器内的饮料：茶、咖啡、啤酒等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;~&lt;ruby&gt; 匹&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ひき&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;小动物：狗、猫、昆虫、鱼等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;~&lt;ruby&gt; 頭&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;とう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;大动物：牛、马、象等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;~&lt;ruby&gt; 羽&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;わ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;鸟、兔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;~&lt;ruby&gt; 番&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ばん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;顺序&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;~&lt;ruby&gt; 足&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;そく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;成对物品：鞋、袜子等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;~ つ&lt;/td&gt;
&lt;td&gt;1-9 岁的年龄&lt;br&gt;立体的物品：橘子、帽子等&lt;br&gt;抽象的事物：谜、选项等&lt;br&gt;”~ つ “不用于 10 以上的数字&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;名时间-动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名时间-动&#34;&gt;#&lt;/a&gt; [名 (时间)] + [动]&lt;/h3&gt;
&lt;p&gt;表示时间数量的词语和动词一起使用时，说明动作、状态的持续时间。这时表示时间数量的词语后面不能加に。&lt;br /&gt;
eg: 李さんは　毎日　&lt;ruby&gt;七時間&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しちじかん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　&lt;ruby&gt;働&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はたら&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; きます。  小李每天工作 7 小时。&lt;/p&gt;
&lt;h3 id=&#34;名时间に-名次数-动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名时间に-名次数-动&#34;&gt;#&lt;/a&gt; [名 (时间)] に　[名 (次数)] + [动]&lt;/h3&gt;
&lt;p&gt;表示在一定时间内进行若干次动作时，使用该句型。&lt;br /&gt;
eg: この　&lt;ruby&gt;花&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はな&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　&lt;ruby&gt;二年&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;にねん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; に　&lt;ruby&gt;一度&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;いちど&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　&lt;ruby&gt;咲&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;さ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; きます&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;。    这种花每两年开一次。&lt;/p&gt;
&lt;h3 id=&#34;名场所へ-动に-行いきます来きます&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名场所へ-动に-行いきます来きます&#34;&gt;#&lt;/a&gt; [名 (场所)] へ　[动] に　&lt;ruby&gt;行&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;い&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; きます /&lt;ruby&gt; 来&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;き&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ます&lt;/h3&gt;
&lt;p&gt;“去某地做某事”。 表示移动行为的目的时使用，句型中表示场所的名词为移动行为的目的地；动词为 “ます形” 去掉 “ます” 的形式，表示移动行为的目的。&lt;br /&gt;
eg: 李さんは　私の家　へ　&lt;ruby&gt;遊&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あそ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; び&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;　に　来ました。 小李来我家玩了。 （遊びます　-&amp;gt; 遊び）&lt;/p&gt;
&lt;h3 id=&#34;名数量-で&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名数量-で&#34;&gt;#&lt;/a&gt; [名 (数量)] + で&lt;/h3&gt;
&lt;p&gt;用于不称重量而以数个的方式售物。&lt;br /&gt;
eg: この　ケーキは　&lt;ruby&gt;三個&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;さんこ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; で　&lt;ruby&gt;五百円&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ごひゃくえん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; です。 这种蛋糕 3 个 500 日元。&lt;/p&gt;
&lt;p&gt;不过数量是 1 个时，不加で。&lt;br /&gt;
eg: この　ケーキは　&lt;ruby&gt;一個&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;いっこ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　二百円です。     这种蛋糕 1 个 200 日元。&lt;/p&gt;
&lt;h2 id=&#34;表达&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;数的数法&lt;br /&gt;
 (1) 数词和量词&lt;br /&gt;
日语中，数词和量词读法会因为组合不同发生变化&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;～つ&lt;/th&gt;
&lt;th&gt;～人&lt;/th&gt;
&lt;th&gt;～台&lt;/th&gt;
&lt;th&gt;～個&lt;/th&gt;
&lt;th&gt;～本&lt;/th&gt;
&lt;th&gt;～杯&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;ひとつ&lt;/td&gt;
&lt;td&gt;ひとり&lt;/td&gt;
&lt;td&gt;いちだい&lt;/td&gt;
&lt;td&gt;いっこ&lt;/td&gt;
&lt;td&gt;いっぽん&lt;/td&gt;
&lt;td&gt;いっぱい&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;ふたつ&lt;/td&gt;
&lt;td&gt;ふたり&lt;/td&gt;
&lt;td&gt;にだい&lt;/td&gt;
&lt;td&gt;にこ&lt;/td&gt;
&lt;td&gt;にほん&lt;/td&gt;
&lt;td&gt;にはい&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;みっつ&lt;/td&gt;
&lt;td&gt;さんにん&lt;/td&gt;
&lt;td&gt;さんだい&lt;/td&gt;
&lt;td&gt;さんこ&lt;/td&gt;
&lt;td&gt;さんぼん&lt;/td&gt;
&lt;td&gt;さんばい&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;よっつ&lt;/td&gt;
&lt;td&gt;よにん&lt;/td&gt;
&lt;td&gt;よんだい&lt;/td&gt;
&lt;td&gt;よんこ&lt;/td&gt;
&lt;td&gt;よんほん&lt;/td&gt;
&lt;td&gt;よんはい&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;いつつ&lt;/td&gt;
&lt;td&gt;ごにん&lt;/td&gt;
&lt;td&gt;ごだい&lt;/td&gt;
&lt;td&gt;ごこ&lt;/td&gt;
&lt;td&gt;ごほん&lt;/td&gt;
&lt;td&gt;ごはい&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;むっつ&lt;/td&gt;
&lt;td&gt;ろくにん&lt;/td&gt;
&lt;td&gt;ろくだい&lt;/td&gt;
&lt;td&gt;ろっこ&lt;/td&gt;
&lt;td&gt;ろっぽん&lt;/td&gt;
&lt;td&gt;ろっぱい&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;ななつ&lt;/td&gt;
&lt;td&gt;※なナにん&lt;/td&gt;
&lt;td&gt;ななだい&lt;/td&gt;
&lt;td&gt;ななこ&lt;/td&gt;
&lt;td&gt;ななほん&lt;/td&gt;
&lt;td&gt;ななはい&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;やっつ&lt;/td&gt;
&lt;td&gt;はちにん&lt;/td&gt;
&lt;td&gt;はちだい&lt;/td&gt;
&lt;td&gt;はっこ&lt;/td&gt;
&lt;td&gt;はっぽん&lt;/td&gt;
&lt;td&gt;はっぱい&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;ここのつ&lt;/td&gt;
&lt;td&gt;きゅうにん&lt;/td&gt;
&lt;td&gt;きゅうだい&lt;/td&gt;
&lt;td&gt;きゅうこ&lt;/td&gt;
&lt;td&gt;きゅうほん&lt;/td&gt;
&lt;td&gt;きゅうはい&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;とお&lt;/td&gt;
&lt;td&gt;じゅうにん&lt;/td&gt;
&lt;td&gt;じゅうだい&lt;/td&gt;
&lt;td&gt;じゅっこ&lt;/td&gt;
&lt;td&gt;じゅっぽん&lt;/td&gt;
&lt;td&gt;じゅっぱい&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;何&lt;/td&gt;
&lt;td&gt;いくつ&lt;/td&gt;
&lt;td&gt;なんにん&lt;/td&gt;
&lt;td&gt;なんだい&lt;/td&gt;
&lt;td&gt;なんこ&lt;/td&gt;
&lt;td&gt;なんぼん&lt;/td&gt;
&lt;td&gt;なんばい&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;(2) &lt;ruby&gt;週に&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しゅう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; に　二&lt;ruby&gt;回&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;br /&gt;
“&lt;ruby&gt;週に&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しゅう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; に　二&lt;ruby&gt;回&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;“ 的完整表达时 “&lt;ruby&gt;一週間&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;いっしゅうかん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; に　二回 “，像这样以一定期间为基准计算频率时，常常省略数字”1 “和”&lt;ruby&gt; 間&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;“，而使用”&lt;ruby&gt; 週&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しゅう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; に　~&lt;ruby&gt; 回&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;“的形式。“&lt;ruby&gt;一日&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;いちにち&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; に&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;” 变成 “&lt;ruby&gt;日&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ひ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; に&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;”&lt;/p&gt;
&lt;p&gt;(3) &lt;ruby&gt;生&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なま&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ビールを　&lt;ruby&gt;三&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;みっ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; つ&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;       来三杯生啤&lt;br /&gt;
属于省去量词直接使用 “&lt;ruby&gt;一&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ひと&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; つ&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;　&lt;ruby&gt;二&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ふた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; つ&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;” 等方式计数的情况。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;くらい　/ ぐらい&lt;br /&gt;
在表示数量的词后加 “くらい”“ぐらい” 表示大概的数量。有时还与副词 “&lt;ruby&gt;大体&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;だいたい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;” 同时使用。&lt;br /&gt;
eg:&lt;br /&gt;
 この　パソコンは　いくらでしたか。  这台电脑多少钱买的？&lt;br /&gt;
—— だいたい　&lt;ruby&gt;二十万円&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;にじゅうまんえん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ぐらいです。   大约 20 万日元。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;どのぐらい　かかりますか&lt;br /&gt;
 “かかります” 用于时间和钱，相当于 “需要，花费”。（多少时间，多少钱）&lt;br /&gt;
eg:&lt;br /&gt;
 家から　会社まで　どのぐらい　かかりますか。    从你家到公司需要多少时间。&lt;br /&gt;
—— 電車で　一時間ぐらい　かかります。       乘电车需要 1 小时左右。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;飲みに行きます&lt;br /&gt;
不指明说 “お茶を”“ジュースを”，而只说 飲みに行きます ，则指 “去喝酒”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;とりあえず&lt;br /&gt;
从具有可能性的几种动作或事项中，暂且选择一种先做。 “暂且先...”&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第十四课昨日-デパートへ-行って買かい物ものしました&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第十四课昨日-デパートへ-行って買かい物ものしました&#34;&gt;#&lt;/a&gt; 第十四课：昨日　デパートへ　行って，&lt;ruby&gt;買&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;か&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; い&lt;rt&gt;&lt;/rt&gt;物&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;もの&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; しました&lt;/h1&gt;
&lt;h2 id=&#34;语法-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法-2&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;动て-动-相继发生&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动て-动-相继发生&#34;&gt;#&lt;/a&gt; [动] て　[动]    相继发生&lt;/h3&gt;
&lt;p&gt;表达两个以上的动作按照时间相继发生时，可用 “动词て形 + 动词” 表示。 即用一句话表达连续的动作。&lt;br /&gt;
eg: 家へ　帰って，&lt;ruby&gt;宿題&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しゅくだい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　します。     回家，（然后）写作业。&lt;/p&gt;
&lt;h3 id=&#34;动て-から-动-相继发生&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动て-から-动-相继发生&#34;&gt;#&lt;/a&gt; [动] て　から　[动]  相继发生&lt;/h3&gt;
&lt;p&gt;也可以表述两个以上动作按照时间顺序相继发生。，和上一点区别是，“てから” 不能再一个句子中反复使用两次以上。 即上一点可以多个て形连用，这个句型只能使用一次て形。&lt;/p&gt;
&lt;p&gt;eg:&lt;br /&gt;
 図書館へ　行って　本を　&lt;ruby&gt;借&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;か&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; りて&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;，家へ　帰ります。    去图书馆借书，（然后）回家。&lt;br /&gt;
&lt;ruby&gt;昼&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ひる&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ご飯を　食べてから　&lt;ruby&gt;出&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;で&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; かけます。  吃了午饭后出门。&lt;/p&gt;
&lt;h3 id=&#34;动て-ください&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动て-ください&#34;&gt;#&lt;/a&gt; [动] て  ください&lt;/h3&gt;
&lt;p&gt;请求某人做某事。&lt;br /&gt;
eg: ここに　&lt;ruby&gt;住所&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じゅうしょ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; と　&lt;ruby&gt;名前&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なまえ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　&lt;ruby&gt;書&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;か&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; いて　ください。    请在这里填写住址和姓名。&lt;/p&gt;
&lt;h3 id=&#34;名场所を-动-经过-离开&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名场所を-动-经过-离开&#34;&gt;#&lt;/a&gt; [名 (场所)] を　[动]      经过 离开&lt;/h3&gt;
&lt;p&gt;经过的场所用助词を表示，常用动词有 “&lt;ruby&gt;通&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;とお&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; ります&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;”“&lt;ruby&gt;渡&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;わた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; ります&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;”“&lt;ruby&gt;過&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;す&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; ぎます&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;” 等。此外，を与动词 “&lt;ruby&gt;出&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;で&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; ます&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;”“&lt;ruby&gt;卒業&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;そつぎょう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; します” 等搭配使用时，表示离开的场所。&lt;br /&gt;
eg:&lt;br /&gt;
 この　パスは　&lt;ruby&gt;駅前&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;えきまえ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　を　通ります。  这趟公共汽车经过车站一带。&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;&lt;ruby&gt;駅前&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;えきまえ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 指车站周围的整个区域。明确表示 “车站前” 时使用 “&lt;ruby&gt;駅&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;えき&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; の　前”&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;私は　来年　&lt;ruby&gt;大学&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;だいがく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　を　&lt;ruby&gt;卒業&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;そつぎょう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; します。  我明年大学毕业。&lt;/p&gt;
&lt;h2 id=&#34;表达-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达-2&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;句子的连接方式&lt;br /&gt;
 “~ て” 是一个连续相继发生动作的形式，但连接太多会使人难以理解，所以一般只连接两项或三项，需要连接更多动作时，使用 “それから”。&lt;br /&gt;
eg: 図書館へ　行って，勉強を　します。それから　家へ　帰って，手紙を　書きます。    去图书馆学习。然后回家写信。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;買&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;か&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; い&lt;rt&gt;&lt;/rt&gt;物&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;もの&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; します [三类动词]&lt;br /&gt;
 一般 “します” 前接汉字或外来词可以构成三类动词。&lt;br /&gt;
这种形式也可以说成 “名词 + を + します”（を可不加。）&lt;br /&gt;
eg:&lt;br /&gt;
&lt;ruby&gt; 出張&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しゅっちょう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; します　出差；&lt;ruby&gt;仕事&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しごと&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; します    工作    （汉字词）&lt;br /&gt;
ジョギングします    慢跑；ファックスします  发传真            （外来词）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;なかなか 表示程度的副词&lt;br /&gt;
一般用于上级对下级。后续接肯定表达时，表示从自己个人角度看程度属于上乘。&lt;br /&gt;
eg: 李さんの　日本語は　なかなか　&lt;ruby&gt;上手&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じょうず&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ですね。   小李的日语相当棒！&lt;br /&gt;
该词含有实际情况比自己预想的程度要高的含义，一般用于说话人预想程度较低时。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;~ て　くださいませんか&lt;br /&gt;
加 “ませんか” 是更为礼貌的形式，请求某人做某事。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;もう&lt;br /&gt;
前面学过 “已经” 意思，表示事情已经结束，但还有 “马上，就要” 的意思，此时句尾不是用 “ました”，而是 “ます”。&lt;br /&gt;
eg: 李さん，もう　会社を　&lt;ruby&gt;出&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;で&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ますか。   小李，这就走吗？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;すみませんが，~      搭话&lt;br /&gt;
请求别人做某事时，句子前面加 “すみません” 或者 “すみませんが”，表示因占用对方时间而感到过意不去，表示 “麻烦你”“不好意思”。一般家人或亲切的朋友间不怎么使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;そうして　ください&lt;br /&gt;
 “请那样做 “。这里的” そう “承接了上面的内容，用于指代前面的内容。    其中涉及变形：そうする　-&amp;gt; そうして&lt;br /&gt;
 eg:&lt;br /&gt;
&lt;ruby&gt; 速達&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;そくたつ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; で　&lt;ruby&gt;出&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;だ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; しますか。      寄快件吗？&lt;br /&gt;
—— ええ，そうして　ください。       对，寄快件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;お&lt;ruby&gt;金&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かね&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　&lt;ruby&gt;下&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;お&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ろします&lt;br /&gt;
 “&lt;ruby&gt;下&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;お&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ろします” 表示将上面的东西取下来，这里意为 “把存在银行或邮局的钱从账户中取出来”。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第十五课小野さんは-今-新聞しんぶんを-読よんで-います&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第十五课小野さんは-今-新聞しんぶんを-読よんで-います&#34;&gt;#&lt;/a&gt; 第十五课：小野さんは　今　&lt;ruby&gt;新聞&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しんぶん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　&lt;ruby&gt;読&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;よ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; んで　います&lt;/h1&gt;
&lt;h2 id=&#34;语法-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法-3&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;动て-います-正在进行&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动て-います-正在进行&#34;&gt;#&lt;/a&gt; [动] て　います      正在进行&lt;/h3&gt;
&lt;p&gt;表示动作或变化正在进行时。“正在做某事”。&lt;br /&gt;
eg: 森さんは　今　仕事を　しています。      森先生正在工作。&lt;/p&gt;
&lt;h3 id=&#34;动ても-いいです&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动ても-いいです&#34;&gt;#&lt;/a&gt; [动] ても　いいです&lt;/h3&gt;
&lt;p&gt;表示许可时，“可以做某事”。[动] ても　いいですか。　“可以做某事吗？”&lt;br /&gt;
eg: 家で　仕事を　しても　いいです。    在家里工作也可以。&lt;br /&gt;
家に　帰っても　いいですか。        可以回家吗？&lt;br /&gt;
—— はい，帰っても　いいです。       是的，可以回家。&lt;/p&gt;
&lt;p&gt;其中，” はい，帰っても　いいです “可以省略为” はい，いいです。“&lt;br /&gt;
表示说话人的许可时，使用 “いですよ”，语气更柔和，读升调，但不用于尊长。&lt;/p&gt;
&lt;h3 id=&#34;动ては-いけません&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动ては-いけません&#34;&gt;#&lt;/a&gt; [动] ては　いけません&lt;/h3&gt;
&lt;p&gt;表示禁止时，“禁止做某事”。&lt;br /&gt;
eg:&lt;br /&gt;
 この　部屋に　&lt;ruby&gt;入&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; っては　いけませんか。   不能进这个屋子吗？&lt;br /&gt;
—— はい，入っては　いけません。     是的，不能。&lt;br /&gt;
—— いいえ，入っても　いいです。     不，可以进。&lt;br /&gt;
对尊长一般不用 “~ ては　いけません” 而使用 “~ ないで　ください”。&lt;/p&gt;
&lt;h3 id=&#34;名附着点に-动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名附着点に-动&#34;&gt;#&lt;/a&gt; [名 (附着点)] に　[动]&lt;/h3&gt;
&lt;p&gt;表示人或物体的附着点，即人或物体停留在交通工具或椅子上等时，附着点用助词 “に” 表示。&lt;br /&gt;
eg: 李さんは　電車に　&lt;ruby&gt;乗&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;の&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; りました。 小李上了电车。&lt;br /&gt;
この　いす　に　&lt;ruby&gt;座&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;すわ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; って　ください。   请坐在这把椅子上。&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;不能用を连接！&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&#34;名目的地-に-动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名目的地-に-动&#34;&gt;#&lt;/a&gt; [名 (目的地)] に　[动]&lt;/h3&gt;
&lt;p&gt;移动行为的目的地既可以用へ表示，也可以用に表示。&lt;br /&gt;
eg: 李さんは　&lt;ruby&gt;病院&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;びょういん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　に　行きます。 小李去医院。&lt;/p&gt;
&lt;p&gt;目前为止：&lt;br /&gt;
“に” 的用法包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;表示存在的场所，例如 “公園にベンチがあります”（公园里有长椅）。&lt;/li&gt;
&lt;li&gt;表示时间，例如 “5 時に帰ります”（5 点回家）。&lt;/li&gt;
&lt;li&gt;表示动作的对象，例如 “友達に会います”（和朋友见面）。&lt;/li&gt;
&lt;li&gt;表示移动行为的目的，例如 “本を買いに行きます”（去买书）。&lt;/li&gt;
&lt;li&gt;表示附着点，例如 “車に乗ります”（上车）。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;“に” 和 “へ” 只有在表示 “行きます”（去）、“来ます”（来）、“帰ります”（回来）等典型的移动动词的目的地时才可以通用。&lt;/p&gt;
&lt;h2 id=&#34;表达-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达-3&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;请求许可时的回答方式&lt;br /&gt;
 (1) 肯定的场合&lt;br /&gt;
对 “~ ても　いいですか” 进行肯定回答时，如果根据自己的心情或判断表示许可时，可以回答 “どうぞ (可以)”“かまいません (没关系)” 等。&lt;br /&gt;
如果不是根据自己的判断，而是基于社会惯例或公共准则进行回答时，可以说 “いいです (可以)”“&lt;ruby&gt;大丈夫&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;だいじょうぶ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; です (没关系)” 等。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;(2) 否定的场合&lt;br /&gt;
对 “~ ても　いいですか” 进行否定回答时，如果根据自己的心情或判断表示拒绝时，可以回答 “いえ，ちょっと...(不，有点...)” 婉言拒绝，或者使用 “すみません，~ から (对不起，因为...)” 这种陈述理由的拒绝方式。&lt;br /&gt;
如果是根据法律、规章、社会惯例做出判断时，可以回答 “いけません (不可以)”“だめです (不行)” 等。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;もちろんです&lt;br /&gt;
 “当然可以”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;無理&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;むり&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　しては　いけませんよ&lt;br /&gt;
 “不能勉强”，由 “無理を　します (勉强)” 转换而成。“無理を　します (勉强)” 指行为超过了体力或经济能力的界限，可能给身体或事态造成负面效果。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ゆっくり&lt;br /&gt;
表示动作速度慢，还可以表示 “好好地” 的意思。&lt;br /&gt;
eg: じゅあ，病院へ　行ってから，ゆっくり　&lt;ruby&gt;休&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;やす&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; んで　ください。 那么，先去医院，然后好好休息一下。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;薬&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;くすり&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　&lt;ruby&gt;出&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;だ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; します&lt;br /&gt;
医生在医院或诊所给患者开药方。不能用 “&lt;ruby&gt;売&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;う&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ります (卖药)” 或者 “あげます (给药)”，只能 “出します”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;お&lt;ruby&gt;大事&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;だいじ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; に    寒暄语&lt;br /&gt;
是 “どうぞ　お大事に　してください (请多保重)” 的省略形式，用于对生病或受伤的人表示关心。不能对身体健康的人使用。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第十六课ホテルの-部屋は-広ひろくて-明あかるいです&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第十六课ホテルの-部屋は-広ひろくて-明あかるいです&#34;&gt;#&lt;/a&gt; 第十六课：ホテルの　部屋は　&lt;ruby&gt;広&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ひろ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; くて　&lt;ruby&gt;明&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あか&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; るいです&lt;/h1&gt;
&lt;h2 id=&#34;语法-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法-4&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;形1て-形1-并列&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#形1て-形1-并列&#34;&gt;#&lt;/a&gt; [形 1] て　[形 1]  并列&lt;/h3&gt;
&lt;p&gt;表示 “又～又～”，两个以上一类形容词并列使用时，使用一类形容词的て形，形 1 变て形是：い -&amp;gt; くて。&lt;br /&gt;
eg:&lt;br /&gt;
 明るい　-&amp;gt; 明るくて&lt;br /&gt;
&lt;ruby&gt;新&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あたら&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; しい　-&amp;gt; 新しくて&lt;/p&gt;
&lt;p&gt;この　本は　&lt;ruby&gt;安&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;やす&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; くて　おもしろいです。 这本书又便宜又有意思。&lt;/p&gt;
&lt;p&gt;“[形 1] て　[形 1] ” 也可以用于修饰名词。&lt;br /&gt;
eg:&lt;ruby&gt; 軽&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かる&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; くて　&lt;ruby&gt;暖&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あたた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; かい　コートを　買いました。   买了一件轻巧又暖和的大衣。&lt;/p&gt;
&lt;h3 id=&#34;形2で-形2-并列&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#形2で-形2-并列&#34;&gt;#&lt;/a&gt; [形 2] で　[形 2]  并列&lt;/h3&gt;
&lt;p&gt;两个以上二类形容词并列使用时，使用二类形容词的て形，形 2 变て形是：直接加で。形 1 和形 2 也可以连接使用。&lt;br /&gt;
eg:&lt;br /&gt;
&lt;ruby&gt; 簡単&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かんたん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　-&amp;gt; 簡単で&lt;br /&gt;
&lt;ruby&gt;親切&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しんせつ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　-&amp;gt; 親切で&lt;/p&gt;
&lt;p&gt;eg: この　公園は　&lt;ruby&gt;静&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しず&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; かで　広いです。     这个公园安静而宽敞。&lt;/p&gt;
&lt;h3 id=&#34;名1で-名2-并列&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名1で-名2-并列&#34;&gt;#&lt;/a&gt; [名 1] で　[名 2]　并列&lt;/h3&gt;
&lt;p&gt;两个以上的名词并列使用时，用 “[名 1] で　[名 2]” 的形式，名词变て形是：直接加で。&lt;br /&gt;
eg: この　&lt;ruby&gt;機械&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;きかい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　&lt;ruby&gt;日中電気&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;にっちゅうでんき&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; の　&lt;ruby&gt;製品&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;せいひん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; で，&lt;ruby&gt;中国製&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ちゅうごくせい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; です。  这台机器是日中电器公司的产品，是中国制造的。&lt;/p&gt;
&lt;h3 id=&#34;动て-います-结果状态&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动て-います-结果状态&#34;&gt;#&lt;/a&gt; [动] て　います  结果状态&lt;/h3&gt;
&lt;p&gt;“[动] て　います” 除了表示正在进行，还可表示动作结束后留下的结果状态。&lt;br /&gt;
eg: 森さんは　&lt;ruby&gt;車&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;くるま&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　&lt;ruby&gt;持&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;も&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; って　います。   森先生有辆车。&lt;/p&gt;
&lt;p&gt;对用表示结果状态的 “~ て　います” 提问的句子做否定回答时，使用 “~ て　いません”。但是，对 “&lt;ruby&gt;知&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;し&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; っていますか” 做否定回答时必须使用 “&lt;ruby&gt;知&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;し&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; りません（不知道，不认识）”&lt;/p&gt;
&lt;h3 id=&#34;小句が小句-转折&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小句が小句-转折&#34;&gt;#&lt;/a&gt; [小句] が，[小句]    转折&lt;/h3&gt;
&lt;p&gt;表示两个小句的&lt;mark&gt;转折&lt;/mark&gt;关系时，用助词 “が”，相当于 “但是，可是”。&lt;br /&gt;
eg: この　レストランは　おいしいですが，ちょっと　&lt;ruby&gt;高&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;たか&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; いです。    这家餐厅的饭菜好吃，但有点贵。&lt;/p&gt;
&lt;h3 id=&#34;まだ-动否定&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#まだ-动否定&#34;&gt;#&lt;/a&gt; まだ + [动 (否定)]&lt;/h3&gt;
&lt;p&gt;表示还没达到所询问的内容的程度，相当于 “还没有”。&lt;br /&gt;
eg:&lt;br /&gt;
 何年ぐらい　日本語を　勉強しましたか。                  学了几年日语？&lt;br /&gt;
—— 二年　勉強しました。でも，まだ　あまり　できません。  学了两年，但还不太会。&lt;/p&gt;
&lt;p&gt;此外，对用 “もう” 提问的句子做否定回答时，使用 “まだ　~ て　いません” 的表达形式。&lt;br /&gt;
もう　結婚していますか。    —— いいえ，まだ　結婚していません。&lt;/p&gt;
&lt;h2 id=&#34;表达-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达-4&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;ruby&gt;背&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;せ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; が　&lt;ruby&gt;高&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;たか&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; くて　&lt;ruby&gt;脚&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あし&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; が　&lt;ruby&gt;長&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なが&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; くて     相貌身材&lt;br /&gt;
日语中描述人的相貌身材时，身体不为名词与相应的形容词组合如下：&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;身体部位&lt;/th&gt;
&lt;th&gt;形容词&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;ruby&gt;脚&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あし&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;／&lt;ruby&gt;指&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ゆび&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 腿 / 指头&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;長&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なが&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; い／&lt;ruby&gt;太&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ふと&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; い：长 / 粗；&lt;ruby&gt;短&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;みじか&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; い／&lt;ruby&gt;細&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ほそ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; い：短 / 细&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;ruby&gt;足&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あし&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 脚&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;大&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おお&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; きい：大；&lt;ruby&gt;小&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ちい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; さい：小&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;ruby&gt;目&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;め&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 眼睛&lt;/td&gt;
&lt;td&gt;大きい：大；小さい／細い：小&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;ruby&gt;鼻&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はな&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 鼻子&lt;/td&gt;
&lt;td&gt;高い：高；低い：低&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;ruby&gt;顔&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かお&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 脸&lt;/td&gt;
&lt;td&gt;大きい：大；小さい：小&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;ruby&gt;背&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;せ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 个子&lt;/td&gt;
&lt;td&gt;高い：高；&lt;ruby&gt;低&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ひく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; い：矮&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;ruby&gt;入場料&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;にゅうじょうりょう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;ruby&gt; 会費&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かいひ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;费用&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;～&lt;ruby&gt;費&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ひ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;会費&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かいひ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 会费、&lt;ruby&gt;光熱費&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;こうねつひ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 照明、供热、供暖费、&lt;ruby&gt;交通費&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;こうつうひ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 交通费、&lt;ruby&gt;食費&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しょくひ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 伙食费&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;～&lt;ruby&gt;料&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;りょう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;入場料&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;にゅうじょうりょう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 门票费、&lt;ruby&gt;使用料&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しようりょう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 使用费、&lt;ruby&gt;送料&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;そうりょう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 运费、&lt;ruby&gt;手数料&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;てすうりょう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 手续费&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;～&lt;ruby&gt;代&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;だい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;電気代&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;でんきだい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 电费、&lt;ruby&gt;水道代&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;すいどうだい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 水费、&lt;ruby&gt;タクシー代&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;だい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 出租车费、&lt;ruby&gt;食事代&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しょくじだい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 餐费&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;ID&lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;アイディー&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; カードは　ありますか      （ィ li）&lt;br /&gt;
前面学过的 “あります” 包括：表示存在、表示在某处发生某事，这里表示所有，如果所有的对象是人，则用 “います”。&lt;br /&gt;
eg:&lt;br /&gt;
 私は　車が　二&lt;ruby&gt;台&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;だい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　あります。     我有两辆车。&lt;br /&gt;
森さんは　弟が　&lt;ruby&gt;二人&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ふたり&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　います。     森先生有两个弟弟。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ちゃんと&lt;br /&gt;
副词，表示 “没错” 或 “处于正常状态”，只用于口语。&lt;br /&gt;
eg: 皆さん，机の　上を　ちゃんと　&lt;ruby&gt;片付&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かたづ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; けて&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; くださいね。    请大家把桌上的东西收拾好。（づ du）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ほら&lt;br /&gt;
 “你看”，用于提醒别人注意。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ずいぶん&lt;br /&gt;
表示程度高，内容上无论是好是坏，用于事态的程度大幅超过说话人自身或者一般性的评判标准。&lt;br /&gt;
eg: 李さん，日本語が　ずいぶん　&lt;ruby&gt;上手&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じょうず&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ですね。    小李，你的日语真棒啊。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;派手&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はで&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;br /&gt;
 形容过分鲜艳的色彩或奇特的形状，“耀眼，花哨”，反义词是 “&lt;ruby&gt;地味&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じみ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;（朴素，质朴）”&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;嫌&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;きら&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; い&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;じゃ　ありません&lt;br /&gt;
表示并不十分喜欢，但也不讨厌，形式是否定的，但语义上是正面、肯定的评价。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="课程学习" scheme="https://ei4869.github.io/miyano/categories/Course-Study/" />
        <category term="日语" scheme="https://ei4869.github.io/miyano/categories/Course-Study/Japanese/" />
        <category term="课程" scheme="https://ei4869.github.io/miyano/tags/%E8%AF%BE%E7%A8%8B/" />
        <updated>2025-03-13T10:13:00.000Z</updated>
    </entry>
    <entry>
        <id>https://ei4869.github.io/miyano/Course-Study/FPGA/FPGA%E5%AD%A6%E4%B9%A0(%E4%B8%89)-%E6%B5%81%E6%B0%B4%E7%81%AF%E8%AE%BE%E8%AE%A1/</id>
        <title>FPGA学习(三)-流水灯设计</title>
        <link rel="alternate" href="https://ei4869.github.io/miyano/Course-Study/FPGA/FPGA%E5%AD%A6%E4%B9%A0(%E4%B8%89)-%E6%B5%81%E6%B0%B4%E7%81%AF%E8%AE%BE%E8%AE%A1/"/>
        <content type="html">&lt;h1 id=&#34;目的&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#目的&#34;&gt;#&lt;/a&gt; 目的&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;基本功能&lt;br /&gt;
让四位的流水灯能按 0.5s 的时间间隔交替闪烁。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;进阶功能&lt;br /&gt;
进行参数化，流水灯的位数，闪烁的时间间隔，时钟的频率可以调整。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;实验设计&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#实验设计&#34;&gt;#&lt;/a&gt; 实验设计&lt;/h1&gt;
&lt;p&gt;整个代码的实现思路如下图：&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/3.1.jpg&#34; title=&#34;流水灯设计&#34; style=&#34;max-width: 70%; height: auto;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;代码实现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#代码实现&#34;&gt;#&lt;/a&gt; 代码实现&lt;/h1&gt;
&lt;h2 id=&#34;基本功能&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本功能&#34;&gt;#&lt;/a&gt; 基本功能&lt;/h2&gt;
&lt;p&gt;对于基本功能，verilog 代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;span&gt;flow_led.v&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//-----------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Design Name: flow_led&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// File Name: flow_led.v&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Function: 流水灯，每 0.5s 闪烁一次&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Coder: Rei&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Date: 2025.03.11&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//-----------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; flow_led &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;           sys_clk&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;// 系统时钟：50Mhz&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;           sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 系统复位信号：低有效&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; led        &lt;span class=&#34;token comment&#34;&gt;//led 灯输出&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; cnt&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 计数器计时 0.5s，已知频率为 50MHz，则周期为 20ns，0.5s=25_000_000*20ns&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;25&#39;d0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;25&#39;d25000_000&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;25&#39;d1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; cnt &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;25&#39;d1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;25&#39;d0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//led 灯闪烁&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b0001&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cnt &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;25&#39;d25000_000&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;25&#39;d1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;#123;&lt;/span&gt;led&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; led&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; led&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;相应的测试代码为：&lt;/p&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;span&gt;tb_flow_led.v&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token constant&#34;&gt;`timescale&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;ns&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;ns  &lt;span class=&#34;token comment&#34;&gt;// Time scale is set to 1ns/1ns&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;tb_flow_led&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; CLK_PERIOD &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 50MHz&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;         sys_clk&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;        &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;         sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  led&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;initial&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sys_clk &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sys_rst_n &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#200&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sys_rst_n &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token important&#34;&gt;always&lt;/span&gt; #&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CLK_PERIOD&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; sys_clk &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;sys_clk&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 时钟周期为 20ns&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;flow_led u_flow_led &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sys_clk&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys_clk&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sys_rst_n&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;led&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;led&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;进阶功能&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#进阶功能&#34;&gt;#&lt;/a&gt; 进阶功能&lt;/h2&gt;
&lt;p&gt;代码实现如下：&lt;/p&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;span&gt;flow_led_withparam.v&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//-----------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Design Name: flow_led_withparam&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// File Name: flow_led_withparam.v&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Function: 通过参数化的方式，将时钟频率、闪烁间隔、LED 灯数量等参数化，使得流水灯模块更具通用性。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Coder: Rei&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Date: 2025.03.11&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//-----------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; flow_led_withparam #&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; CLK_FREQ        &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;50_000&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;_000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;                &lt;span class=&#34;token comment&#34;&gt;// 时钟频率（Hz）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; BLINK_INTERVAL &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;                       &lt;span class=&#34;token comment&#34;&gt;// 闪烁间隔（秒）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; LED_NUM         &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;                        &lt;span class=&#34;token comment&#34;&gt;// LED 灯数量&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt; sys_clk&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;LED_NUM&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; led&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 根据时钟频率和闪烁间隔计算计数上限（单位：时钟周期数）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; INTERVAL  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;integer&lt;/span&gt;&#39;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CLK_FREQ &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; BLINK_INTERVAL&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 计算计数器所需位宽。通过计算 INTERVAL 的对数值（以 2 为底）。$clog2 函数返回一个整数值，该值是大于或等于 INTERVAL 的对数值的最小整数。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;localparam&lt;/span&gt; CNT_WIDTH &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token kernel-function property&#34;&gt;$clog2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;INTERVAL&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;CNT_WIDTH&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; cnt&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 计数器：从 0 计数到 INTERVAL-1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; INTERVAL &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; cnt &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 根据 LED_NUM 是否大于 1 分别处理&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;generate&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;LED_NUM &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; gen_single_led&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cnt &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; INTERVAL &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;led&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; led&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; gen_multiple_leds  &lt;span class=&#34;token comment&#34;&gt;// LED 状态更新：计数器满时进行一次移位（循环左移）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;LED_NUM&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cnt &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; INTERVAL &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;#123;&lt;/span&gt; led&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;LED_NUM&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; led&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;LED_NUM&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; led&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;endgenerate&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;测试代码为：tb_flow_led_withparam.v&lt;/p&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token constant&#34;&gt;`timescale&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;ns &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;ns&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; tb_flow_led_withparam&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// flow_led_withparam Parameters&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; PERIOD          &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;                            &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; CLK_FREQ        &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;50_000&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;_000&lt;/span&gt;                    &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; BLINK_INTERVAL  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0.0000008&lt;/span&gt;                     &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; LED_NUM         &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;                             &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// flow_led_withparam Inputs&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;   sys_clk                              &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;   sys_rst_n                            &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// flow_led_withparam Outputs&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;LED_NUM&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  led                   &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;initial&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sys_clk &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sys_rst_n &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#200&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sys_rst_n &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token important&#34;&gt;always&lt;/span&gt; #&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;PERIOD&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; sys_clk &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;sys_clk&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;flow_led_withparam #&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;CLK_FREQ       &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; CLK_FREQ       &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;BLINK_INTERVAL &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; BLINK_INTERVAL &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;LED_NUM        &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; LED_NUM        &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; u_flow_led_withparam &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sys_clk                 &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; sys_clk                  &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sys_rst_n               &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; sys_rst_n                &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;led                     &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; led        &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;LED_NUM&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//// 调试打印：显示模块内部计算的 INTERVAL 与 CNT_WIDTH 参数值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// initial begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//     #10;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//     $display(&#34;INTERVAL = %0d, CNT_WIDTH = %0d&#34;, &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//               u_flow_led_withparam.INTERVAL, &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//               u_flow_led_withparam.CNT_WIDTH);&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//// 监控内部计数器 cnt 与 led 的变化&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// initial begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//     $monitor(&#34;Time = %0t, cnt = %0d, led = %b&#34;, &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//              $time, u_flow_led_withparam.cnt, led);&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;仿真结果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#仿真结果&#34;&gt;#&lt;/a&gt; 仿真结果&lt;/h1&gt;
&lt;p&gt;如下图：&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/3.2.jpg&#34; title=&#34;Modelsim 仿真结果&#34; style=&#34;max-width: 70%; height: auto;&#34;&gt;&lt;/p&gt;
&lt;p&gt;设置的参数是 BLINK_INTERVAL = 0.0000008，LED_NUM = 5 ，即每隔 800ns 闪烁一次，LED 位数为 5，由图可见实现了需求。&lt;/p&gt;
&lt;h1 id=&#34;总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;对于 LED_NUM 为 1 时，进行了特殊处理，此时该 LED 会按一定间隔闪烁。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;clog2 函数能用于计算 INTERVAL 的对数值（以 2 为底）。$clog2 函数返回一个整数值，该值是大于或等于 INTERVAL 的对数值的最小整数。换句话说，它计算的是 INTERVAL 需要多少位二进制位来表示，从而确定计数器的位宽。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在仿真的测试代码中：always 和 forever 都可以用来创建时钟脉冲，但它们的使用方式和语法略有不同。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;always 块通常用于描述时序逻辑和组合逻辑。它在仿真开始时执行一次，然后在每次触发条件满足时重复执行，例如：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token important&#34;&gt;always&lt;/span&gt; #&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CLK_PERIOD&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; sys_clk &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;sys_clk&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;此时 always 块的触发条件是时间延迟。具体来说，always 块每隔 CLK_PERIOD/2 时间单位触发一次。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;forever 语句用于在仿真期间无限循环执行某些操作。它通常在初始块中使用，例如：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;initial&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sys_clk &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;forever&lt;/span&gt; #&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CLK_PERIOD&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; sys_clk &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;~&lt;/span&gt;sys_clk&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最大的区别：always 块独立存在，可以在模块中任何地方使用。而 forever 语句必须在 initial 块中使用。&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;&lt;code&gt;.led(led)&lt;/code&gt;  和 &lt;code&gt;.led(led [LED_NUM-1:0])&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;.led (led)：直接连接信号到端口，前提是信号的宽度与端口的宽度一致。&lt;/li&gt;
&lt;li&gt;.led (led [LED_NUM-1:0])：明确指定信号的位宽，通常在信号宽度是参数化的情况下使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;测试文件里的调试代码&lt;br /&gt;
想要观测某些参数的值以及检测端口的信号等等，可以在代码中加入调试代码，例如：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 调试打印：显示模块内部计算的 INTERVAL 与 CNT_WIDTH 参数值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;initial&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;#10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token kernel-function property&#34;&gt;$display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;INTERVAL = %0d, CNT_WIDTH = %0d&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;              u_flow_led_withparam&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;INTERVAL&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;              u_flow_led_withparam&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;CNT_WIDTH&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 监控内部计数器 cnt 与 led 的变化&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;initial&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token kernel-function property&#34;&gt;$monitor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Time = %0t, cnt = %0d, led = %b&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;             &lt;span class=&#34;token kernel-function property&#34;&gt;$time&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; u_flow_led_withparam&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cnt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; led&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;其中 &lt;code&gt;$display&lt;/code&gt;  只会输出一次，而 &lt;code&gt;$monitor&lt;/code&gt;  会不断监测信号的值。&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;初始值&lt;br /&gt;
代码中：&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b0001&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;会使 FPGA 将初始状态定为 4&#39;b0001，这相当于上电后一个初始化复位的过程，所以上电后尽管不按下复位按键，也会有一个灯亮。&lt;/p&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;参数定义&lt;br /&gt;
 &lt;code&gt;localparam&lt;/code&gt;  可以更明确地表达出这个值是一个内部计算的常量，不允许外部覆盖，而  &lt;code&gt;parameter&lt;/code&gt;  则允许在例化时进行重写。&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="课程学习" scheme="https://ei4869.github.io/miyano/categories/Course-Study/" />
        <category term="FPGA" scheme="https://ei4869.github.io/miyano/categories/Course-Study/FPGA/" />
        <category term="课程" scheme="https://ei4869.github.io/miyano/tags/%E8%AF%BE%E7%A8%8B/" />
        <category term="FPGA" scheme="https://ei4869.github.io/miyano/tags/FPGA/" />
        <updated>2025-03-11T08:53:00.000Z</updated>
    </entry>
    <entry>
        <id>https://ei4869.github.io/miyano/Course-Study/FPGA/FPGA%E5%AD%A6%E4%B9%A0(%E4%BA%8C)-Verilog%E8%AF%AD%E6%B3%95/</id>
        <title>FPGA学习(二)-Verilog语法</title>
        <link rel="alternate" href="https://ei4869.github.io/miyano/Course-Study/FPGA/FPGA%E5%AD%A6%E4%B9%A0(%E4%BA%8C)-Verilog%E8%AF%AD%E6%B3%95/"/>
        <content type="html">&lt;h1 id=&#34;基础知识&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基础知识&#34;&gt;#&lt;/a&gt; 基础知识&lt;/h1&gt;
&lt;h2 id=&#34;常识&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常识&#34;&gt;#&lt;/a&gt; 常识&lt;/h2&gt;
&lt;p&gt;Verilog 的标识符可以是任意一组字母、数字、$ 和_(下划线) 符号的组合，但标识符的第一个字符必须是字母或者下划线。&lt;/p&gt;
&lt;p&gt;Verilog 数字进制格式包括二进制、八进制、十进制和十六进制，当代码中没有指定数字的位宽与进制时，默认为 32 位的十进制，比如 100，实际上表示的值为 32’d100。&lt;/p&gt;
&lt;p&gt;四种逻辑值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;逻辑 0：表示低电平，也就是对应我们电路的 GND；&lt;/li&gt;
&lt;li&gt;逻辑 1：表示高电平，也就是对应我们电路的 VCC；&lt;/li&gt;
&lt;li&gt;逻辑 X：表示未知，有可能是高电平，也有可能是低电平；&lt;/li&gt;
&lt;li&gt;逻辑 Z：表示高阻态，外部没有激励信号是一个悬空状态。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;数据类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据类型&#34;&gt;#&lt;/a&gt; 数据类型&lt;/h2&gt;
&lt;p&gt;在 Verilog 语法中，主要有三大类数据类型，即寄存器类型、线网类型和参数类型。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;寄存器类型&lt;br /&gt;
寄存器类型表示一个抽象的数据存储单元，它&lt;mark&gt;只能在 always 语句和 initial 语句中被赋值&lt;/mark&gt;，并且它的值从一个赋值到另一个赋值过程中被保存下来。如果该过程语句描述的是&lt;ins class=&#34;wavy&#34;&gt;时序逻辑&lt;/ins&gt;，即 always 语句带有时钟信号，则该寄存器变量对应为&lt;ins class=&#34;wavy&#34;&gt;寄存器&lt;/ins&gt;；如果该过程语句描述的是&lt;ins class=&#34;wavy&#34;&gt;组合逻辑&lt;/ins&gt;，即 always 语句不带有时钟信号，则该寄存器变量对应为&lt;ins class=&#34;wavy&#34;&gt;硬件连线&lt;/ins&gt;；寄存器类型的&lt;mark&gt;缺省值是 x（未知状态）&lt;/mark&gt;。&lt;br /&gt;
寄存器数据类型有很多种，如 reg、integer、real 等，其中最常用的就是 reg 类型，它的使用方法如下：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//reg define &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  delay_cnt&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;// 延时计数器 &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; key_flag &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;// 按键标志&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;线网类型&lt;br /&gt;
线网表示 Verilog 结构化元件间的&lt;mark&gt;物理连线&lt;/mark&gt;。它的值由驱动元件的值决定，例如连续赋值或门的输出。如果没有驱动元件连接到线网，线网的&lt;mark&gt;缺省值为 z（高阻态）&lt;/mark&gt;。&lt;br /&gt;
线网类型同寄存器类型一样也是有很多种，如 tri 和 wire 等，其中最常用的就是 wire 类型，它的使用方法如下：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//wire define &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt;    data_en&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;         &lt;span class=&#34;token comment&#34;&gt;// 数据使能信号 &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt;    &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  data&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;     &lt;span class=&#34;token comment&#34;&gt;// 数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;参数类型&lt;br /&gt;
参数其实就是一个&lt;mark&gt;常量&lt;/mark&gt;，常被用于定义状态机的状态、数据位宽和延迟大小等，由于它&lt;ins class=&#34;wavy&#34;&gt;可以在编译时修改参数的值&lt;/ins&gt;，因此它又常被用于一些参数可调的模块中，使用户在实例化模块时，可以根据需要配置参数。在定义参数时，我们可以一次定义多个参数，参数与参数之间需要用逗号隔开。&lt;br /&gt;
这里我们需要注意的是参数的定义是局部的，只在当前模块中有效。它的使用方法如下：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//parameter define &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt;   DATA_WIDTH &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 数据位宽为 8 位&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;运算符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#运算符&#34;&gt;#&lt;/a&gt; 运算符&lt;/h2&gt;
&lt;p&gt;Verilog 中的运算符按照功能可以分为下述类型：1、算术运算符、 2、关系运算符、3、逻辑运算符、 4、条件运算符、 5、位运算符、 6、移位运算符、 7、拼接运算符。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;算术运算符&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;符号&lt;/th&gt;
&lt;th&gt;使用方法&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;a + b&lt;/td&gt;
&lt;td&gt;a 加上 b&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;a - b&lt;/td&gt;
&lt;td&gt;a 减去 b&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;a * b&lt;/td&gt;
&lt;td&gt;a 乘以 b&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;a / b&lt;/td&gt;
&lt;td&gt;a 除以 b&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%&lt;/td&gt;
&lt;td&gt;a % b&lt;/td&gt;
&lt;td&gt;a 模除 b&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;需要注意：，Verilog 实现乘除比较浪费组合逻辑资源，尤其是除法。一般 2 的指数次幂的乘除法使用移位运算来完成运算，非 2 的指数次幂的乘除法一般是调用现成的 IP，不过 IP 也是由最底层的组合逻辑 (与或非门等) 搭建而成的。&lt;br /&gt;
2. 关系运算符&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;符号&lt;/th&gt;
&lt;th&gt;使用方法&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;&lt;/td&gt;
&lt;td&gt;a &amp;gt; b&lt;/td&gt;
&lt;td&gt;a 大于 b&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;&lt;/td&gt;
&lt;td&gt;a &amp;lt; b&lt;/td&gt;
&lt;td&gt;a 小于 b&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;=&lt;/td&gt;
&lt;td&gt;a &amp;gt;= b&lt;/td&gt;
&lt;td&gt;a 大于等于 b&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;=&lt;/td&gt;
&lt;td&gt;a &amp;lt;= b&lt;/td&gt;
&lt;td&gt;a 小于等于 b&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;==&lt;/td&gt;
&lt;td&gt;a == b&lt;/td&gt;
&lt;td&gt;a 等于 b&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;!=&lt;/td&gt;
&lt;td&gt;a != b&lt;/td&gt;
&lt;td&gt;a 不等于 b&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在进行关系运算符时，如果声明的关系是假的，则返回值是 0，如果声明的关系是真的，则返回值是 1；所有的关系运算符有着相同的优先级别，关系运算符的优先级低于算术运算符的优先级。&lt;br /&gt;
3. 逻辑运算符&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;符号&lt;/th&gt;
&lt;th&gt;使用方法&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;!&lt;/td&gt;
&lt;td&gt;!a&lt;/td&gt;
&lt;td&gt;a 的非，如果 a 为 0，那么 a 的非是 1。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;amp;&amp;amp;&lt;/td&gt;
&lt;td&gt;a &amp;amp;&amp;amp; b&lt;/td&gt;
&lt;td&gt;a 与上 b，如果 a 和 b 都为 1，a&amp;amp;&amp;amp;b 结果才为 1，表示真。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;||&lt;/td&gt;
&lt;td&gt;a || b&lt;/td&gt;
&lt;td&gt;a 或上 b，如果 a 或者 b 有一个为 1，a||b 结果为 1，表示真。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;逻辑运算符是连接多个关系表达式用的，可实现更加复杂的判断。&lt;br /&gt;
4. 条件运算符&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;符号&lt;/th&gt;
&lt;th&gt;使用方法&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;?:&lt;/td&gt;
&lt;td&gt;a ? b : c&lt;/td&gt;
&lt;td&gt;如果 a 为真，就选择 b，否则选择 c&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;条件操作符一般来构建从两个输入中选择一个作为输出的条件选择结构，功能等同于 always 中的 if-else 语句。&lt;br /&gt;
5. 位运算符&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;符号&lt;/th&gt;
&lt;th&gt;使用方法&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;~&lt;/td&gt;
&lt;td&gt;~a&lt;/td&gt;
&lt;td&gt;将 a 的每个位进行取反&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;amp;&lt;/td&gt;
&lt;td&gt;a &amp;amp; b&lt;/td&gt;
&lt;td&gt;将 a 的每个位与 b 相同的位进行相与&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|&lt;/td&gt;
&lt;td&gt;a | b&lt;/td&gt;
&lt;td&gt;将 a 的每个位与 b 相同的位进行相或&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;^&lt;/td&gt;
&lt;td&gt;a ^ b&lt;/td&gt;
&lt;td&gt;将 a 的每个位与 b 相同的位进行异或&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;位运算符是一类最基本的运算符，可以认为它们直接对应数字逻辑中的与、或、非门等逻辑门。位运算符的与、或、非与逻辑运算符逻辑与、逻辑或、逻辑非使用时候容易混淆，&lt;ins class=&#34;dot&#34;&gt;逻辑运算符一般用在条件判断上&lt;/ins&gt;，&lt;ins class=&#34;dot&#34;&gt;位运算符一般用在信号赋值上&lt;/ins&gt;。&lt;br /&gt;
6. 移位运算符&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;符号&lt;/th&gt;
&lt;th&gt;使用方法&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;&amp;lt;&lt;/td&gt;
&lt;td&gt;a &amp;lt;&amp;lt; b&lt;/td&gt;
&lt;td&gt;将 a 左移 b 位&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;&amp;gt;&lt;/td&gt;
&lt;td&gt;a &amp;gt;&amp;gt; b&lt;/td&gt;
&lt;td&gt;将 a 右移 b 位&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;这两种移位运算符都用 0 来填补移出的空位。假设 a 有 8bit 数据位宽，那么 a&amp;lt;&amp;lt;2，表示 a 左移 2bit，a 还是 8bit 数据位宽，a 的最高 2bit 数据被移位丢弃了，最低 2bit 数据固定补 0。如果 a 是 3（二进制：00000011），那么 3 左移 2bit，3&amp;lt;&amp;lt;2，就是 12（二&lt;br /&gt;
进制：00001100）。一般使用&lt;ins class=&#34;dot&#34;&gt;左移位运算代替乘法&lt;/ins&gt;，&lt;ins class=&#34;dot&#34;&gt;右移位运算代替除法&lt;/ins&gt;，但是这种也只能表示 2 的指数&lt;br /&gt;
次幂的乘除法。&lt;br /&gt;
7. 位拼接运算符&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;符号&lt;/th&gt;
&lt;th&gt;使用方法&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;{}&lt;/td&gt;
&lt;td&gt;{a, b}&lt;/td&gt;
&lt;td&gt;将 a 和 b 拼接起来，作为一个新信号&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;用这个运算符可以把两个或多个信号的某些位拼接起来进行运算操作。&lt;br /&gt;
8. 运算符的优先级&lt;/p&gt;
&lt;table&gt;
  &lt;tr&gt;
    &lt;th&gt;运算符&lt;/th&gt;
    &lt;th&gt;优先级&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;!、~&lt;/td&gt;
    &lt;td rowspan=&#34;11&#34; style=&#34;text-align: center; vertical-align: middle;&#34;&gt;逐渐递减&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;*、/、%&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;+、-&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;&lt;、&gt;&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;、&lt;=、&gt;、&gt;=&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;==、!=、===、!==&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&amp;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;^、^~&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;|&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&amp;&amp;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;||&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;?&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;h1 id=&#34;程序框架&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#程序框架&#34;&gt;#&lt;/a&gt; 程序框架&lt;/h1&gt;
&lt;h2 id=&#34;注释&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注释&#34;&gt;#&lt;/a&gt; 注释&lt;/h2&gt;
&lt;p&gt;Verilog HDL 中有两种注释的方式，一种是以 “/&lt;em&gt;” 符号开始，“&lt;/em&gt;/” 结束，在两个符号之间的语句都是注释语句，因此可扩展到多行。&lt;br /&gt;
另一种是以 // 开头的语句，它表示以 // 开始到本行结束都属于注释语句。&lt;/p&gt;
&lt;h2 id=&#34;关键字&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关键字&#34;&gt;#&lt;/a&gt; 关键字&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Verilog 的所有关键字&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;and&lt;/th&gt;
&lt;th&gt;always&lt;/th&gt;
&lt;th&gt;assign&lt;/th&gt;
&lt;th&gt;begin&lt;/th&gt;
&lt;th&gt;buf&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;bufif0&lt;/td&gt;
&lt;td&gt;bufif1&lt;/td&gt;
&lt;td&gt;case&lt;/td&gt;
&lt;td&gt;casex&lt;/td&gt;
&lt;td&gt;casez&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cmos&lt;/td&gt;
&lt;td&gt;deassign&lt;/td&gt;
&lt;td&gt;default&lt;/td&gt;
&lt;td&gt;defparam&lt;/td&gt;
&lt;td&gt;disable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;edge&lt;/td&gt;
&lt;td&gt;else&lt;/td&gt;
&lt;td&gt;end&lt;/td&gt;
&lt;td&gt;endcase&lt;/td&gt;
&lt;td&gt;endfunction&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;endprimitive&lt;/td&gt;
&lt;td&gt;endmodule&lt;/td&gt;
&lt;td&gt;endspecify&lt;/td&gt;
&lt;td&gt;endtable&lt;/td&gt;
&lt;td&gt;endtask&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;event&lt;/td&gt;
&lt;td&gt;for&lt;/td&gt;
&lt;td&gt;force&lt;/td&gt;
&lt;td&gt;forever&lt;/td&gt;
&lt;td&gt;fork&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;function&lt;/td&gt;
&lt;td&gt;highz0&lt;/td&gt;
&lt;td&gt;highz1&lt;/td&gt;
&lt;td&gt;if&lt;/td&gt;
&lt;td&gt;ifnone&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;initial&lt;/td&gt;
&lt;td&gt;inout&lt;/td&gt;
&lt;td&gt;input&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;join&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;large&lt;/td&gt;
&lt;td&gt;macromodule&lt;/td&gt;
&lt;td&gt;medium&lt;/td&gt;
&lt;td&gt;module&lt;/td&gt;
&lt;td&gt;nand&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;negedge&lt;/td&gt;
&lt;td&gt;nor&lt;/td&gt;
&lt;td&gt;not&lt;/td&gt;
&lt;td&gt;notif0&lt;/td&gt;
&lt;td&gt;notif1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;nmos&lt;/td&gt;
&lt;td&gt;or&lt;/td&gt;
&lt;td&gt;output&lt;/td&gt;
&lt;td&gt;parameter&lt;/td&gt;
&lt;td&gt;pmos&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;posedge&lt;/td&gt;
&lt;td&gt;primitive&lt;/td&gt;
&lt;td&gt;pulldown&lt;/td&gt;
&lt;td&gt;pullup&lt;/td&gt;
&lt;td&gt;pull0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pull1&lt;/td&gt;
&lt;td&gt;rcmos&lt;/td&gt;
&lt;td&gt;real&lt;/td&gt;
&lt;td&gt;realtime&lt;/td&gt;
&lt;td&gt;reg&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;release&lt;/td&gt;
&lt;td&gt;repeat&lt;/td&gt;
&lt;td&gt;rnmos&lt;/td&gt;
&lt;td&gt;rpmos&lt;/td&gt;
&lt;td&gt;rtran&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rtranif0&lt;/td&gt;
&lt;td&gt;rtranif1&lt;/td&gt;
&lt;td&gt;scalared&lt;/td&gt;
&lt;td&gt;small&lt;/td&gt;
&lt;td&gt;specify&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;specparam&lt;/td&gt;
&lt;td&gt;strength&lt;/td&gt;
&lt;td&gt;strong0&lt;/td&gt;
&lt;td&gt;strong1&lt;/td&gt;
&lt;td&gt;supply0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;supply1&lt;/td&gt;
&lt;td&gt;table&lt;/td&gt;
&lt;td&gt;task&lt;/td&gt;
&lt;td&gt;tran&lt;/td&gt;
&lt;td&gt;tranif0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tranif1&lt;/td&gt;
&lt;td&gt;time&lt;/td&gt;
&lt;td&gt;tri&lt;/td&gt;
&lt;td&gt;triand&lt;/td&gt;
&lt;td&gt;trior&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;trireg&lt;/td&gt;
&lt;td&gt;tri0&lt;/td&gt;
&lt;td&gt;tri1&lt;/td&gt;
&lt;td&gt;vectored&lt;/td&gt;
&lt;td&gt;wait&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wand&lt;/td&gt;
&lt;td&gt;weak0&lt;/td&gt;
&lt;td&gt;weak1&lt;/td&gt;
&lt;td&gt;while&lt;/td&gt;
&lt;td&gt;wire&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wor&lt;/td&gt;
&lt;td&gt;xnor&lt;/td&gt;
&lt;td&gt;xor&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;常用关键字&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;关键字&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;module&lt;/td&gt;
&lt;td&gt;模块开始定义&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;input&lt;/td&gt;
&lt;td&gt;输入端口定义&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;output&lt;/td&gt;
&lt;td&gt;输出端口定义&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;inout&lt;/td&gt;
&lt;td&gt;双向端口定义&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;parameter&lt;/td&gt;
&lt;td&gt;信号的参数定义&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wire&lt;/td&gt;
&lt;td&gt;wire 信号定义&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;reg&lt;/td&gt;
&lt;td&gt;reg 信号定义&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;always&lt;/td&gt;
&lt;td&gt;产生 reg 信号语句的关键字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;assign&lt;/td&gt;
&lt;td&gt;产生 wire 信号语句的关键字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;begin&lt;/td&gt;
&lt;td&gt;语句的起始标志&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;end&lt;/td&gt;
&lt;td&gt;语句的结束标志&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;posedge/negedge&lt;/td&gt;
&lt;td&gt;时序电路的标志&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;case&lt;/td&gt;
&lt;td&gt;Case 语句起始标记&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;default&lt;/td&gt;
&lt;td&gt;Case 语句的默认分支标志&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;endcase&lt;/td&gt;
&lt;td&gt;Case 语句结束标记&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;if&lt;/td&gt;
&lt;td&gt;if/else 语句标记&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;else&lt;/td&gt;
&lt;td&gt;if/else 语句标记&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;for&lt;/td&gt;
&lt;td&gt;for 语句标记&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;endmodule&lt;/td&gt;
&lt;td&gt;模块结束定义&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;程序框架-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#程序框架-2&#34;&gt;#&lt;/a&gt; 程序框架&lt;/h2&gt;
&lt;p&gt;以 LED 流水灯程序为例家展示 Verilog 的程序框架：&lt;/p&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;led&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;               sys_clk  &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 系统时钟 &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;               sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 系统复位，低电平有效 &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;output&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  led         &lt;span class=&#34;token comment&#34;&gt;//4 位 LED 灯 &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//parameter define &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt;  WIDTH     &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;25&lt;/span&gt;        &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt;  COUNT_MAX &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;25_000&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;_000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 板载 50M 时钟 = 20ns，0.5s/20ns=25000000，需要 25bit &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                     &lt;span class=&#34;token comment&#34;&gt;// 位宽 &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//reg define &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;    &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;WIDTH&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  counter     &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;    &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;        led_ctrl_cnt&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//wire define &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt;                counter_en  &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//*********************************************************************************** &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//**                                 main code &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//*********************************************************************************** &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 计数到最大值时产生高电平使能信号 &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;assign&lt;/span&gt;  counter_en &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;counter &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;COUNT_MAX &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                                                                                                             &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 用于产生 0.5 秒使能信号的计数器 &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys_rst_n &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        counter &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;counter_en&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        counter &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        counter &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; counter &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//led 流水控制计数器 &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys_rst_n &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        led_ctrl_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;counter_en&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        led_ctrl_cnt &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; led_ctrl_cnt &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 通过控制 IO 口的高低电平实现发光二极管的亮灭 &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys_rst_n &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;led_ctrl_cnt&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;                  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token number&#34;&gt;2&#39;d0&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b0001&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token number&#34;&gt;2&#39;d1&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b0010&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token number&#34;&gt;2&#39;d2&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b0100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token number&#34;&gt;2&#39;d3&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;endcase&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;高级知识点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#高级知识点&#34;&gt;#&lt;/a&gt; 高级知识点&lt;/h1&gt;
&lt;h2 id=&#34;阻塞赋值blocking&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#阻塞赋值blocking&#34;&gt;#&lt;/a&gt; 阻塞赋值（Blocking）&lt;/h2&gt;
&lt;p&gt;即在一个 always 块中，后面的语句会受到前语句的影响，具体来说，在同一个 always 中，一条阻塞赋值语句如果没有执行结束，那么该语句后面的语句就不能被执行，即被 “阻塞”。也就是说 always 块内的语句是一种顺序关系，符号 “=” 用于阻塞的赋值（如:b = a;），阻塞赋值 “=” 在 begin 和 end 之间的语句是顺序执行，属于串行语句。&lt;br /&gt;
示例：&lt;/p&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在复位的时候（rst_n=0），a=1，b=2，c=3；而结束复位之后（波形图中的 0 时刻），当 clk 的上升沿到来时（波形图中的 2 时刻），a=0，b=0，c=0。这是因为阻塞赋值是在当前语句执行完成之后，才会执行后面的赋值语句，因此首先执行的是 a=0，赋值完成后将 a 的值赋值给 b，由于此时 a 的值已经为 0，所以 b=a=0，最后执行的是将 b 的值赋值给 c，而 b 的值已经赋值为 0，所以 c 的值同样等于 0。&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/2.1.jpg&#34; title=&#34;阻塞赋值的信号波形图&#34; style=&#34;max-width: 70%; height: auto;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;非阻塞赋值non-blocking&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#非阻塞赋值non-blocking&#34;&gt;#&lt;/a&gt; 非阻塞赋值 (Non-Blocking)&lt;/h2&gt;
&lt;p&gt;符号 “&amp;lt;=” 用于非阻塞赋值（如:b &amp;lt;= a;），非阻塞赋值是由时钟节拍决定，在时钟上升到来时，执行赋值语句右边，然后将 begin-end 之间的所有赋值语句同时赋值到赋值语句的左边，注意：是 begin—end 之间的所有语句，一起执行，且一个时钟只执行一次，属于并行执行语句。&lt;br /&gt;
示例：&lt;/p&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        a &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        b &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        c &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        a &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        b &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        c &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在复位的时候（rst_n=0），a=1，b=2，c=3；而结束复位之后（波形图中的 0 时刻），当 clk 的上升沿到来时（波形图中的 2 时刻），a=0，b=1，c=2。这是因为非阻塞赋值在计算 RHS 和更新 LHS 期间，允许其它的非阻塞赋值语句同时计算 RHS 和更新 LHS。&lt;br /&gt;
在波形图中的 2 时刻，RHS 的表达是 0、a、b，分别等于 0、1、2，这三条语句是同时更新 LHS，所以 a、b、c 的值分别等于 0、1、2。再经历一个时钟上升沿，变成 0、0、1，再经历一个，变成 0、0、0。&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/2.2.jpg&#34; title=&#34;非阻塞赋值的信号波形图&#34; style=&#34;max-width: 70%; height: auto;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;总结&lt;/strong&gt;：一般在描述组合逻辑电路的时候，使用阻塞赋值，比如 assign 赋值语句和不带时钟的 always 赋值语句，这&lt;br /&gt;
种电路结构只与输入电平的变化有关系。在描述时序逻辑的时候，使用非阻塞赋值，综合成时序逻辑的电路结构，比如带时钟的 always 语句；这种电路结构往往与触发沿有关系，只有在触发沿时才可能发生赋值的变化。&lt;/p&gt;
&lt;h2 id=&#34;assign-和-always-区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#assign-和-always-区别&#34;&gt;#&lt;/a&gt; assign 和 always 区别&lt;/h2&gt;
&lt;p&gt;assign 语句使用时不能带时钟。&lt;br /&gt;
always 语句可以带时钟，也可以不带时钟。在 always 不带时钟时，逻辑功能和 assign 完全一致，都是只产生组合逻辑。&lt;br /&gt;
比较简单的组合逻辑推荐使用 assign 语句，比较复杂的组合逻辑推荐使用 always 语句。&lt;/p&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;assign&lt;/span&gt;  counter_en &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;counter &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;COUNT_MAX &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;led_ctrl_cnt&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;                  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token number&#34;&gt;2&#39;d0&lt;/span&gt;    &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b0001&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token number&#34;&gt;2&#39;d1&lt;/span&gt;    &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b0010&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token number&#34;&gt;2&#39;d2&lt;/span&gt;    &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b0100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token number&#34;&gt;2&#39;d3&lt;/span&gt;    &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b0000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;endcase&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;带时钟和不带时钟的always&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#带时钟和不带时钟的always&#34;&gt;#&lt;/a&gt; 带时钟和不带时钟的 always&lt;/h2&gt;
&lt;p&gt;always 语句可以带时钟，也可以不带时钟。在 always 不带时钟时，逻辑功能和 assign 完全一致，虽然产生的信号定义还是 reg 类型，但是该语句产生的还是组合逻辑。&lt;/p&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;   &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; led； &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;led_ctrl_cnt&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;                  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token number&#34;&gt;2&#39;d0&lt;/span&gt;    &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b0001&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token number&#34;&gt;2&#39;d1&lt;/span&gt;    &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b0010&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token number&#34;&gt;2&#39;d2&lt;/span&gt;    &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b0100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token number&#34;&gt;2&#39;d3&lt;/span&gt;    &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; led &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&#39;b0000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;endcase&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在 always 带时钟信号时，这个逻辑语句才能产生真正的寄存器，如下示例 counter 就是真正的寄存器。&lt;/p&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 用于产生 0.5 秒使能信号的计数器 &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token important&#34;&gt;always @&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;posedge&lt;/span&gt; sys_clk &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;negedge&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys_rst_n &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        counter &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;counter_en&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        counter &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        counter &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; counter &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&#39;b1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;latch&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#latch&#34;&gt;#&lt;/a&gt; Latch&lt;/h2&gt;
&lt;p&gt;latch 是指锁存器，是一种对&lt;mark&gt;脉冲电平敏感&lt;/mark&gt;的存储单元电路。锁存器和寄存器都是基本存储单元，锁存器是&lt;mark&gt;电平触发&lt;/mark&gt;的存储器，寄存器是&lt;mark&gt;边沿触发&lt;/mark&gt;的存储器。两者的基本功能是一样的，都可以存储数据。锁存器是&lt;mark&gt;组合逻辑&lt;/mark&gt;产生的，而寄存器是在&lt;mark&gt;时序电路&lt;/mark&gt;中使用，由时钟触发产生的。&lt;br /&gt;
latch 的主要危害是会产生毛刺（glitch），这种毛刺对下一级电路是很危险的。并且其隐蔽性很强，不易查出。因此，在设计中，应尽量避免 latch 的使用。&lt;br /&gt;
代码里面出现 latch 的两个原因是在组合逻辑中，if 或者 case 语句不完整的描述，比如 if 缺少 else 分支，case 缺少 default 分支，导致代码在综合过程中出现了 latch。解决办法就是 if 必须带 else 分支，case 必须带 default 分支。&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;注意：只有不带时钟的 always 语句 if 或者 case 语句不完整才会产生 latch，带时钟的语句 if 或者 case 语句不完整描述不会产生 latch。&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&#34;状态机&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#状态机&#34;&gt;#&lt;/a&gt; 状态机&lt;/h2&gt;
&lt;p&gt;Verilog 是硬件描述语言，硬件电路是并行执行的，当需要按照流程或者步骤来完成某个功能时，代码中通常会使用很多个 if 嵌套语句来实现，这样就增加了代码的复杂度，以及降低了代码的可读性，这个时候就可以使用状态机来编写代码。状态机相当于一个控制器，它&lt;ins class=&#34;wavy&#34;&gt;将一项功能的完成分解为若干步&lt;/ins&gt;，每一步对应于二进制的一个状态，通过预先设计的顺序在各状态之间进行转换，状态转换的过程就是实现逻辑功能的过程。&lt;br /&gt;
状态机，全称是有限状态机（Finite State Machine，缩写为 FSM），是一种在有限个状态之间按一定规律转换的时序电路，可以认为是组合逻辑和时序逻辑的一种组合。状态机通过控制各个状态的跳转来控制流程。&lt;br /&gt;
根据状态机的输出是否与输入条件相关，可将状态机分为两大类，即摩尔 (Moore) 型状态机和米勒 (Mealy) 型状态机。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Mealy 状态机：组合逻辑的输出不仅取决于当前状态，还取决于输入状态。&lt;br /&gt;
米勒状态机的模型如下图所示，模型中第一个方框是指产生下一状态的组合逻辑 F，F 是当前状态和输入信号的函数，状态是否改变、如何改变，取决于组合逻辑 F 的输出；第二框图是指状态寄存器，其由一组触发器组成，用来记忆状态机当前所处的状态，状态的改变只发生在时钟的跳边沿；第三个框图是指产生输出的组合逻辑 G，状态机的输出是由输出组合逻辑 G 提供的，G 也是当前状态和输入信号的函数。&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/2.3.jpg&#34; title=&#34;Mealy 状态机模型&#34; style=&#34;max-width: 70%; height: auto;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Moore 状态机：组合逻辑的输出只取决于当前状态。&lt;br /&gt;
摩尔状态机的模型如下图所示，对比米勒状态机的模型可以发现，其区别在于米勒状态机的输出由当前状态和输入条件决定的，而摩尔状态机的输出只取决于当前状态。&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/2.4.jpg&#34; title=&#34;Mealy 状态机模型&#34; style=&#34;max-width: 70%; height: auto;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;三段式状态机&lt;br /&gt;
一段式：整个状态机写到一个 always 模块里面，在该模块中既描述状态转移，又描述状态的输入和输出。不推荐采用这种状态机，因为从代码风格方面来讲，一般都会要求把组合逻辑和时序逻辑分开；从代码维护和升级来说，组合逻辑和时序逻辑混合在一起不利于代码维护和修改，也不利于约束。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;二段式：用两个 always 模块来描述状态机，其中一个 always 模块采用&lt;mark&gt;同步时序描述状态转移&lt;/mark&gt;；另一个模块采用&lt;mark&gt;组合逻辑判断状态转移条件，描述状态转移规律以及输出&lt;/mark&gt;。不同于一段式状态机的是，它需要定义两个状态，&lt;mark&gt;现态&lt;/mark&gt;和&lt;mark&gt;次态&lt;/mark&gt;，然后通过现态和次态的转换来实现时序逻辑。&lt;/p&gt;
&lt;p&gt;三段式：在两个 always 模块描述方法基础上，使用三个 always 模块，一个 always 模块采用同步时序描述状态转移，一个 always 采用组合逻辑判断状态转移条件，描述状态转移规律，另一个 always 模块描述状态输出 (可以用组合电路输出，也可以时序电路输出)。&lt;/p&gt;
&lt;p&gt;实际应用中三段式状态机使用最多，因为三段式状态机将组合逻辑和时序分开，有利于综合器分析优化以及程序的维护；并且三段式状态机将状态转移与状态输出分开，使代码看上去更加清晰易懂，提高了代码的可读性。&lt;/p&gt;
&lt;p&gt;三段式状态机的基本格式是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一个 always 语句实现同步状态跳转；&lt;/li&gt;
&lt;li&gt;第二个 always 语句采用组合逻辑判断状态转移条件；&lt;/li&gt;
&lt;li&gt;第三个 always 语句描述状态输出 (可以用组合电路输出，也可以时序电路输出，一般推荐使用时序电路输出，因为状&lt;br /&gt;
态机的设计和其它设计一样，最好使用同步时序方式设计，以提高设计的稳定性，消除毛刺)。&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/2.5.jpg&#34; title=&#34;状态机时序电路输出模型&#34; style=&#34;max-width: 70%; height: auto;&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;优点：采用这种描述方法虽然代码结构复杂了一些，但是这样做的好处是可以有效地&lt;mark&gt;滤去组合逻辑输出的毛刺&lt;/mark&gt;，同时也可以更好的&lt;mark&gt;进行时序计算与约束&lt;/mark&gt;，另外对于总线形式的输出信号来说，容易使总线数据对齐，减小总线数据间的偏移，从而降低接收端数据采样出错的频率。&lt;/p&gt;
&lt;h2 id=&#34;模块化设计&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#模块化设计&#34;&gt;#&lt;/a&gt; 模块化设计&lt;/h2&gt;
&lt;p&gt;划分模块的基本原则是子模块功能相对独立、模块内部联系尽量紧密、模块间的连接尽量简单。&lt;br /&gt;
在进行模块化设计中，对于复杂的数字系统，我们一般采用自顶向下的设计方式。可以把系统划分成几个功能模块，每个功能模块再划分成下一层的子模块；每个模块的设计对应一个 module，一个 module 设计成一个 Verilog 程序文件。因此，对一个系统的顶层模块，我们采用结构化的设计，即顶层模块分别调用了各个功能模块。&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/2.6.jpg&#34; title=&#34;模块化设计框图&#34; style=&#34;max-width: 70%; height: auto;&#34;&gt;&lt;/p&gt;
&lt;p&gt;一般整个设计的顶层模块只做例化（调用其它模块），不做逻辑。顶层下面会有模块 A、模块 B、模块 C 等，模块 A/B/C 又可以分多个子模块实现。&lt;/p&gt;
&lt;p&gt;以静态数码管显示实验为例，其顶层模块下有两个子模块：计时模块和数码管静态显示模块。&lt;br /&gt;
计时模块部分代码如下所示：&lt;/p&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;time_count&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt; clk&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 时钟信号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt; rst_n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;// 复位信号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; flag &lt;span class=&#34;token comment&#34;&gt;// 一个时钟周期的复位信号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//parameter define&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt; MAX_NUM &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;25000_000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 计数器最大计数值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;数码管静态显示模块部分代码如下所示：&lt;/p&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;seg_led_static&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt; clk&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;      &lt;span class=&#34;token comment&#34;&gt;// 时钟信号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt; rst_n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;// 复位信号（低有效）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt; add_flag&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;     &lt;span class=&#34;token comment&#34;&gt;// 数码管变化的通知信号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; sel&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;// 数码管位选&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; seg_led    &lt;span class=&#34;token comment&#34;&gt;// 数码管段选&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;顶层模块代码如下所示：&lt;/p&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;seg_led_static_top&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt; sys_clk&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt; sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; sel&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; seg_led&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//parameter define &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;parameter&lt;/span&gt;  TIME_SHOW &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;25&#39;d25000_000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;    &lt;span class=&#34;token comment&#34;&gt;// 数码管变化的时间间隔 0.5s &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//wire define &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;wire&lt;/span&gt;    add_flag&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;     &lt;span class=&#34;token comment&#34;&gt;// 数码管变化的通知信号 &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//***************************************************** &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//**                    main code &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//***************************************************** &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 例化计时模块&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;time_count #&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;MAX_NUM&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;TIME_SHOW&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;u_time_count&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;clk&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys_clk&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;rst_n&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;add_flag&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 例化数码管静态显示模块 &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;seg_led_static u_seg_led_static &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;clk&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys_clk &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;rst_n&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;add_flag&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;add_flag&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sel&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sel&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;seg_led&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;seg_led&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;endmodule&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;顶层模块对子模块做例化时，只需要知道子模块的端口信号名，而不用关心子模块内部具体是如何实现的。如果子模块内部使用 parameter 定义了一些参数，Verilog 也支持对参数的例化（也叫参数的传递），即顶层模块可以通过例化参数来修改子模块内定义的参数。&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/2.7.jpg&#34; title=&#34;模块的例化&#34; style=&#34;max-width: 70%; height: auto;&#34;&gt;&lt;/p&gt;
&lt;p&gt;上图右侧是例化的数码管静态显示模块，子模块名是指被例化模块的模块名，而例化模块名相当于标识，当例化多个相同模块时，可以通过例化名来识别哪一个例化，我们一般命名为 “u_”+“子模块名”。信号列表中 “.” 之后的信号是数码管静态显示模块定义的端口信号，&lt;ins class=&#34;wavy&#34;&gt;括号内的信号则是顶层模块声明的信号&lt;/ins&gt;，这样就将顶层模块的信号与子模块的信号一一对应起来，同时需要注意信号的位宽要保持一致。&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/2.8.jpg&#34; title=&#34;模块参数的例化&#34; style=&#34;max-width: 70%; height: auto;&#34;&gt;&lt;/p&gt;
&lt;p&gt;在对参数进行例化时，在模块名的后面加上 “#”，表示后面跟着的是参数列表。计时模块定义的 MAX_NUM 和顶层模块的 TIME_SHOW 都是等于 25000_000，当在顶层模块定义 TIME_SHOW=12500_000 时，那么子模块的 MAX_NUM 的值实际上是也等于 12500_000。当然即使子模块包含参数，在做模块的例化时也可以不添加对参数的例化，这样的话，子模块的参数值等于该模块内部实际定义的值。&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;Verilog 语法中的 localparam 代表的意思同样是参数定义，用法和 parameter 基本一致，区别在于 parameter 定义的参数可以做例化，而 localparam 定义的参数是指本地参数，上层模块不可以对 localparam 定义的参数做例化。&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;编程规范&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#编程规范&#34;&gt;#&lt;/a&gt; 编程规范&lt;/h1&gt;
&lt;h2 id=&#34;工程组织形式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#工程组织形式&#34;&gt;#&lt;/a&gt; 工程组织形式&lt;/h2&gt;
&lt;p&gt;工程的组织形式一般包括如下几个部分，分别是 doc、prj、rtl 和 sim 四个部分。&lt;br /&gt;
doc：一般存放工程相关的文档，包括该项目用到的 datasheet（数据手册）、设计方案等。&lt;br /&gt;
prj：主要存放工程文件和使用到的一些 IP 文件；&lt;br /&gt;
rtl：主要存放工程的 rtl 代码，这是工程的核心，文件名与 module 名称应当一致，建议按照模块的层次分开存放；&lt;br /&gt;
sim：主要存放工程的仿真代码，复杂的工程里面，仿真也是不可或缺的部分，可以极大减少调试的工作量。&lt;/p&gt;
&lt;h2 id=&#34;文件头声明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文件头声明&#34;&gt;#&lt;/a&gt; 文件头声明&lt;/h2&gt;
&lt;p&gt;每一个 Verilog 文件的开头，都必须有一段声明的文字。包括文件的版权，作者，创建日期以及内容介绍等。建议一个.v 只包括一个 module，这样模块会比较清晰易懂。&lt;/p&gt;
&lt;h2 id=&#34;输入输出定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输入输出定义&#34;&gt;#&lt;/a&gt; 输入输出定义&lt;/h2&gt;
&lt;p&gt;定义时一般包括 module 名字、输入输出、信号名字、输出类型、注释。&lt;/p&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;figcaption data-lang=&#34;verilog&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;led&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;               sys_clk  &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 系统时钟 &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;input&lt;/span&gt;               sys_rst_n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 系统复位，低电平有效 &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;output&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;reg&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;  led         &lt;span class=&#34;token comment&#34;&gt;//4 位 LED 灯 &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;建议：&lt;br /&gt;
① 一行只定义一个信号；&lt;br /&gt;
② 信号全部对齐；&lt;br /&gt;
③ 同一组的信号放在一起。&lt;/p&gt;
&lt;h2 id=&#34;parameter定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#parameter定义&#34;&gt;#&lt;/a&gt; parameter 定义&lt;/h2&gt;
&lt;p&gt;① 一般 parameter 定义放在紧跟着 module 的输入输出定义之后；&lt;br /&gt;
② parameter 等常量命名全部使用大写。&lt;/p&gt;
&lt;h2 id=&#34;wirereg定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#wirereg定义&#34;&gt;#&lt;/a&gt; wire/reg 定义&lt;/h2&gt;
&lt;p&gt;① 将 reg 与 wire 的定义放在紧跟着 parameter 之后；&lt;br /&gt;
② 建议具有相同功能的信号集中放在一起；&lt;br /&gt;
③ 信号需要对齐，reg 和位宽需要空 2 格，位宽和信号名字至少空四格；&lt;br /&gt;
④ 位宽使用降序描述，[6:0]；&lt;br /&gt;
⑤ 时钟使用前缀 clk，复位使用后缀 rst，低电平有效则加_n；&lt;br /&gt;
⑥ 不能使用 Verilog 关键字作为信号名字；&lt;br /&gt;
⑦ 一行只定义一个信号。&lt;/p&gt;
&lt;h2 id=&#34;信号命名&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#信号命名&#34;&gt;#&lt;/a&gt; 信号命名&lt;/h2&gt;
&lt;p&gt;① 信号命名需要体现其意义，比如 fifo_wr 代表 FIFO 读写使能；&lt;br /&gt;
② 可以使用 “_” 隔开信号，比如 sys_clk；&lt;br /&gt;
③ 内部信号不要使用大写，也不要使用大小写混合，建议全部使用小写；&lt;br /&gt;
④ 模块名字使用小写；&lt;br /&gt;
⑤ 低电平有效的信号，使用_n 作为信号后缀；&lt;br /&gt;
⑥ 异步信号，使用_a 作为信号后缀；&lt;br /&gt;
⑦ 纯延迟打拍信号使用_dly 作为后缀。&lt;/p&gt;
&lt;h2 id=&#34;其他注意&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#其他注意&#34;&gt;#&lt;/a&gt; 其他注意&lt;/h2&gt;
&lt;p&gt;① 时序逻辑使用非阻塞赋值，组合逻辑使用阻塞赋值。&lt;br /&gt;
② moudle 模块例化使用 u_xx 表示。&lt;br /&gt;
③ 避免产生 Latch 锁存器，比如组合逻辑里面的 if 不带 else 分支、case 缺少 default 语句；&lt;/p&gt;
</content>
        <category term="课程学习" scheme="https://ei4869.github.io/miyano/categories/Course-Study/" />
        <category term="FPGA" scheme="https://ei4869.github.io/miyano/categories/Course-Study/FPGA/" />
        <category term="课程" scheme="https://ei4869.github.io/miyano/tags/%E8%AF%BE%E7%A8%8B/" />
        <category term="FPGA" scheme="https://ei4869.github.io/miyano/tags/FPGA/" />
        <updated>2025-03-09T03:30:00.000Z</updated>
    </entry>
    <entry>
        <id>https://ei4869.github.io/miyano/Course-Study/FPGA/FPGA%E5%AD%A6%E4%B9%A0(%E4%B8%80)-%E5%85%88%E5%AF%BC%E7%9F%A5%E8%AF%86/</id>
        <title>FPGA学习(一)-先导知识</title>
        <link rel="alternate" href="https://ei4869.github.io/miyano/Course-Study/FPGA/FPGA%E5%AD%A6%E4%B9%A0(%E4%B8%80)-%E5%85%88%E5%AF%BC%E7%9F%A5%E8%AF%86/"/>
        <content type="html">&lt;h1 id=&#34;导言&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#导言&#34;&gt;#&lt;/a&gt; 导言&lt;/h1&gt;
&lt;p&gt;使用的 FPGA 是 Xilinx 的 ZYNQ 系列。所谓 ZYNQ，就是 PS+PL。其中 PS 为 Process System，一般指 Arm 处理器，PL 为 Programmable Logic，一般指 FPGA。可以说，ZYNQ 是一个基于 Arm 的 SOC (片上系统)。&lt;/p&gt;
&lt;p&gt;一些名词解释：&lt;br /&gt;
ASIC (Application Specific Integrated Circuit): 专用集成电路&lt;br /&gt;
 SOPC (System On Programmable Chip): 可编程片上系统&lt;br /&gt;
 APSOC (All Programmable System On Chip): 全可编程片上系统&lt;br /&gt;
 FPGA (Field Programmable Gate Array): 现场可编程门阵列&lt;/p&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/ZYNQ.jpg&#34; title=&#34;ZYNQ基本架构&#34; style=&#34;max-width: 50%; height: auto;&#34;&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/PL.jpg&#34; title=&#34;PL(FPGA)基本结构&#34; style=&#34;max-width: 50%; height: auto;&#34;&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/PS.jpg&#34; title=&#34;PS基本结构&#34; style=&#34;max-width: 50%; height: auto;&#34;&gt;
&lt;p&gt;在 PS 和 PL 之间的主要连接是通过一组 9 个 AXI 接口，每个接口有多个通道组成。这些形成了 PS 内部的互联以及与 PL 的连接，如图所示：&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/AXI.jpg&#34; title=&#34;PS和PL的AXI互联&#34; style=&#34;max-width: 50%; height: auto;&#34;&gt;&lt;/p&gt;
&lt;p&gt;单片机和 FPGA 对比：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;单片机&lt;/th&gt;
&lt;th&gt;FPGA&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;类型&lt;/td&gt;
&lt;td&gt;ASIC 微处理器&lt;/td&gt;
&lt;td&gt;半定制电路&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;结构&lt;/td&gt;
&lt;td&gt;哈佛 / 冯诺依曼结构&lt;/td&gt;
&lt;td&gt;查找表 (LUT)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;执行方式&lt;/td&gt;
&lt;td&gt;顺序执行&lt;/td&gt;
&lt;td&gt;并行执行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;速度&lt;/td&gt;
&lt;td&gt;慢&lt;/td&gt;
&lt;td&gt;快&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;灵活性&lt;/td&gt;
&lt;td&gt;低&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;FPGA 特点：硬件可重构、开发周期短（无需流片）、并行执行。&lt;/p&gt;
&lt;h1 id=&#34;开发知识&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#开发知识&#34;&gt;#&lt;/a&gt; 开发知识&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;一般的开发流程&lt;br /&gt;
流程如图：&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//FPGA/1.1.jpg&#34; title=&#34;FPGA开发流程&#34; style=&#34;max-width: 50%; height: auto;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;工程管理&lt;br /&gt;
一般一个项目分为四个子文件夹：doc (存放参考资料、文档手册、流程图等)，rtl (存放编写的.v 代码)，sim (tb 文件夹存放.tb 文件；还有其他仿真文件，一般放在 Modelsim 里选择的 work 文件夹里)，prj (存放 Vivado 的工程文件)。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="课程学习" scheme="https://ei4869.github.io/miyano/categories/Course-Study/" />
        <category term="FPGA" scheme="https://ei4869.github.io/miyano/categories/Course-Study/FPGA/" />
        <category term="课程" scheme="https://ei4869.github.io/miyano/tags/%E8%AF%BE%E7%A8%8B/" />
        <category term="FPGA" scheme="https://ei4869.github.io/miyano/tags/FPGA/" />
        <updated>2025-03-08T08:22:00.000Z</updated>
    </entry>
    <entry>
        <id>https://ei4869.github.io/miyano/Course-Study/Japanese/%E5%88%9D%E7%BA%A7%E4%B8%8A-%E7%AC%AC3%E5%8D%95%E5%85%83/</id>
        <title>单元三——小李在箱根</title>
        <link rel="alternate" href="https://ei4869.github.io/miyano/Course-Study/Japanese/%E5%88%9D%E7%BA%A7%E4%B8%8A-%E7%AC%AC3%E5%8D%95%E5%85%83/"/>
        <content type="html">&lt;h1 id=&#34;第九课四川料理しせんりょうりは-辛からいです&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第九课四川料理しせんりょうりは-辛からいです&#34;&gt;#&lt;/a&gt; 第九课：&lt;ruby&gt;四川料理&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しせんりょうり&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　&lt;ruby&gt;辛&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;から&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; いです&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/h1&gt;
&lt;h2 id=&#34;语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;名は-形一です&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名は-形一です&#34;&gt;#&lt;/a&gt; [名] は　[形一] です&lt;/h3&gt;
&lt;p&gt;形一是以い结尾的形容词，做谓语时后面加です。&lt;/p&gt;
&lt;h3 id=&#34;形一-做谓语时的否定形式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#形一-做谓语时的否定形式&#34;&gt;#&lt;/a&gt; [形一] 做谓语时的否定形式&lt;/h3&gt;
&lt;p&gt;い变く再加上ないです或ありません。&lt;br /&gt;
eg: 今日は　&lt;ruby&gt;寒&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;さむ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; くないです。   今天不冷。&lt;/p&gt;
&lt;p&gt;注：いいです的否定形式是よく　ないです或よく　ありません&lt;/p&gt;
&lt;h3 id=&#34;形一-做谓语时的过去形式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#形一-做谓语时的过去形式&#34;&gt;#&lt;/a&gt; [形一] 做谓语时的过去形式&lt;/h3&gt;
&lt;p&gt;过去形式是：い变かった再加上です。&lt;br /&gt;
过去否定形式是：い变成く　なったです或者く　ありませんでした。&lt;br /&gt;
eg：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;ruby&gt;旅行&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;りょこう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　&lt;ruby&gt;楽&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;たの&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; しかったです。（过去）    旅行很愉快。&lt;/li&gt;
&lt;li&gt;&lt;ruby&gt;昨日&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;きのう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　&lt;ruby&gt;寒&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;さむ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; くなかったです。 （过去否定）   昨天不冷。&lt;/li&gt;
&lt;li&gt;昨日は　寒くありませんでした。    （更正式的表达）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注：描述过去体验过的事物的性质时，日语需要用过去形式。&lt;br /&gt;
&lt;ruby&gt;美味&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; しいです&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;。   (正在吃的时候)&lt;br /&gt;
&lt;ruby&gt; 美味&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; しかったです&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;。   (吃完以后)&lt;/p&gt;
&lt;p&gt;注：いいです的过去形式是よかったです，过去否定形式是よく　ありませんでした。&lt;/p&gt;
&lt;h3 id=&#34;形一名&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#形一名&#34;&gt;#&lt;/a&gt; [形一]+[名]&lt;/h3&gt;
&lt;p&gt;一类形容词可直接修饰名词。但形容词和名词间不加の。&lt;br /&gt;
eg: &lt;ruby&gt;広&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ひろ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; い&lt;rt&gt;&lt;/rt&gt;国&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;くに&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;/p&gt;
&lt;h3 id=&#34;を-は&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#を-は&#34;&gt;#&lt;/a&gt; を -&amp;gt; は&lt;/h3&gt;
&lt;p&gt;例如：原本应该是コーヒーを　飲みます。但当を前面的名词作为话题时，或用于对比时，变为は。例如谈论喝什么时，可以说コーヒーは 飲みます。&lt;/p&gt;
&lt;p&gt;###　あまり　[形一 / 动 的否定]&lt;br /&gt;
 あまり后面一定接否定形式，表示程度不高。&lt;br /&gt;
eg: この　スープは　あまり　&lt;ruby&gt;熱&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あつ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; く&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;　ないです。 这个汤不太热。&lt;/p&gt;
&lt;h3 id=&#34;表示程度的副词&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表示程度的副词&#34;&gt;#&lt;/a&gt; 表示程度的副词&lt;/h3&gt;
&lt;p&gt;程度比较：とても /&lt;ruby&gt; 大変&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;たいへん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; &amp;gt; &lt;ruby&gt;少&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;すこ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; し&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; / ちょっと &amp;gt; あまり (~ ません) &amp;gt; &lt;ruby&gt;全然&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ぜんぜん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;(~ ません)&lt;br /&gt;
 分别是：很，非常 一点儿 不太... 根本不...&lt;/p&gt;
&lt;h2 id=&#34;表达&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;多&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おお&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; い&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;　和 &lt;ruby&gt;少&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;すく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; ない&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;br /&gt;
不同于其他一类形容词，以上两个不能单独修饰名词。&lt;br /&gt;
eg: 公園に　たくさんの　人が　います。  公园里人很多。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;子供用&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;こどもよう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;br /&gt;
&amp;quot;x &lt;ruby&gt;用&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;よう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&amp;quot; 表示 “x 用的”。如&lt;ruby&gt;子供用&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;こどもよう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 表示 “孩子用的 “。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;あら&lt;br /&gt;
女性感到惊讶或疑惑使用的词。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;熱&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あつ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; く&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;　ないですか　[否定疑问句]&lt;br /&gt;
 表示 “水不烫吗”，在日语中可以用两种方式回答：&lt;br /&gt;
- はい、熱くないです。   是的，不烫。（对不烫这件事，回答是）&lt;br /&gt;
- いいえ、熱くないです。 不，不烫。（对于烫不烫，回答不）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ちょうど　いい&lt;br /&gt;
 “正合适”，表示时间或分量合适。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;お&lt;rt&gt;&lt;/rt&gt;湯&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ゆ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　和 &lt;ruby&gt;水&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;みず&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;br /&gt;
 日语中，&lt;ruby&gt;お&lt;rt&gt;&lt;/rt&gt;湯&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ゆ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 指热水或开水。&lt;ruby&gt;水&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;みず&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 仅指凉水。因此可以说 &amp;quot;熱い　お湯（热水）&amp;quot; 和 &amp;quot;&lt;ruby&gt; 冷&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;つめ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; たい&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;　&lt;ruby&gt;水&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;みず&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&amp;quot;，但不能说&amp;quot; 熱い &lt;ruby&gt;水&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;みず&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&amp;quot;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;味道的表达方式&lt;br /&gt;
&lt;ruby&gt;甘&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あま&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; い&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; (甜的)　(&lt;ruby&gt;塩&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しお&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;)&lt;ruby&gt; 辛&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;から&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; い&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; (咸的)　&lt;ruby&gt;酸&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;す&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; っぱい&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; (酸的)　&lt;ruby&gt;辛&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;から&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; い&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; (辣的)　&lt;ruby&gt;苦&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;にが&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; い&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; (苦的)。&lt;br /&gt;
其中，&lt;ruby&gt;辛&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;から&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; い&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;有咸和辣两种意思，需要特别区分时，“咸” 可以说成 &amp;quot;&lt;ruby&gt; 塩&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しお&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;ruby&gt; 辛&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;から&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; い&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt; &amp;quot;或&amp;quot; しょっぱい &amp;quot;，&amp;quot; しょっぱい &amp;quot; 只用于口语。&lt;br /&gt;
此外，おいしい（好吃）和まずい（不好吃）表达的是食物或饮料（包括水）放到口中的感觉，因此可以用于修饰水等表达感觉。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第十课京都きょうとの-紅葉もみじは-有名ゆうめいです&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第十课京都きょうとの-紅葉もみじは-有名ゆうめいです&#34;&gt;#&lt;/a&gt; 第十课：&lt;ruby&gt;京都&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;きょうと&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; の　&lt;ruby&gt;紅葉&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;もみじ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　&lt;ruby&gt;有名&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ゆうめい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; です&lt;/h1&gt;
&lt;h2 id=&#34;语法-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法-2&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;名は-形2ですでした&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名は-形2ですでした&#34;&gt;#&lt;/a&gt; [名] は　[形 2] です / でした&lt;/h3&gt;
&lt;p&gt;二类形容词是不以い结尾的形容词。分别是二类形容词做谓语时的一般形式和过去形式。&lt;br /&gt;
eg: この　&lt;ruby&gt;通&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;とお&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; り&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;は　&lt;ruby&gt;静&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しず&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; か&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;　です。    这条街很安静。&lt;/p&gt;
&lt;h3 id=&#34;名は-形2では-ありませんではありませんでした&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名は-形2では-ありませんではありませんでした&#34;&gt;#&lt;/a&gt; [名] は　[形 2] では　ありません / ではありませんでした&lt;/h3&gt;
&lt;p&gt;分别是二类形容词做谓语时的否定形式和过去形式的否定形式。在口语里，では可以说成じゃ。&lt;/p&gt;
&lt;h3 id=&#34;名は-形2な-名です&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名は-形2な-名です&#34;&gt;#&lt;/a&gt; [名] は　[形 2] な　[名] です&lt;/h3&gt;
&lt;p&gt;二类形容词修饰名词词，用な连接。&lt;br /&gt;
eg: &lt;ruby&gt;奈良&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なら&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　にぎやか　な　&lt;ruby&gt;町&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;まち&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; では　ありません。 奈良不是热闹的城市。&lt;/p&gt;
&lt;h3 id=&#34;名でした&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名でした&#34;&gt;#&lt;/a&gt; [名] でした&lt;/h3&gt;
&lt;p&gt;名词做谓语时的过去形式是 “名词 + でした”，否定形式是 “名词 + では (じゃ)　ありませんでした”。&lt;br /&gt;
eg: おとといは　&lt;ruby&gt;曇&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;くも&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; り&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;　じゃ　ありませんでした。 前天不是阴天。&lt;/p&gt;
&lt;h3 id=&#34;どんな-名&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#どんな-名&#34;&gt;#&lt;/a&gt; どんな　[名]&lt;/h3&gt;
&lt;p&gt;询问人或事物的性质时使用，相当于 “什么样的”。&lt;br /&gt;
eg: &lt;ruby&gt;張&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ちょう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; さん&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;は　どんな　人ですか。  小张是什么样的人？&lt;/p&gt;
&lt;p&gt;注：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;何のなんの　有询问内容和材料两种用法。例如：何の　本ですか　——&lt;ruby&gt; 自動車&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じどうしゃ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; の　本です。 （什么书？—— 关于汽车的书。），这里即询问内容。 再例如：何の　&lt;ruby&gt;料理&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;りょうり&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ですか　——&lt;ruby&gt; 魚&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;さかな&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; の料理です。 （什么菜啊？—— 鱼。），这里即询问材料。&lt;/li&gt;
&lt;li&gt;どんな只用于询问性质。往往用形容词回答。例如：どんな　本ですか　—— おもしろい　本です。 （什么样的书？—— 非常有趣的书。）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;どうですか&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#どうですか&#34;&gt;#&lt;/a&gt; どうですか&lt;/h3&gt;
&lt;p&gt;用于询问对方对某状态的意见或感想时，如果询问的是现在或未来的事情则用どうですか，询问的是过去的事情时则用どうでしたか。  另外どうですか有时用于劝诱对方进行某动作。&lt;/p&gt;
&lt;h3 id=&#34;でも-和-そして&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#でも-和-そして&#34;&gt;#&lt;/a&gt; でも　和 そして&lt;/h3&gt;
&lt;p&gt;でも表示转折关系，一般用于口语，书面语用しかし。&lt;br /&gt;
そして表示并列关系。&lt;/p&gt;
&lt;h2 id=&#34;表达-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达-2&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;綺麗&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;きれい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; です&lt;br /&gt;
注意虽然以い结尾，但其实是二类形容词，きれい的い是綺麗汉字读音的一部分。&lt;br /&gt;
eg: きれいな　&lt;ruby&gt;服&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ふく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;  漂亮的衣服&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;おとといは　&lt;ruby&gt;雨&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あめ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; でした&lt;br /&gt;
表示 “下雨”“下雪” 等自然现象时，日语里通常用 “&lt;ruby&gt;雨&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あめ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; です”“&lt;ruby&gt;雪&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ゆき&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; です”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;あれえ&lt;br /&gt;
感到吃惊和意外情不自禁发出的声音。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ところで&lt;br /&gt;
转换话题时使用。&lt;br /&gt;
eg: ああ、そうですか。ところで、この　&lt;ruby&gt;美術館&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;びじゅつかん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; には　どんな&lt;ruby&gt;作品&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;さくひん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; が　ありますか。  噢，是吗。哎，请问这个美术馆里都有什么作品？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;世界中&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;せかいじゅう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;br /&gt;
&amp;quot;[场所]+&lt;ruby&gt; 中&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じゅう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&amp;quot;表示其场所范围内的全部。&amp;quot;[时间 / 期间]+&lt;ruby&gt; 中&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じゅう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&amp;quot;时则用&amp;quot;&lt;ruby&gt; 一&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;いち / ひと&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;~&lt;ruby&gt; 中&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じゅう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&amp;quot; 的形式，表示 “在某个期间一直”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;形容词 + の&lt;br /&gt;
一般用于避免重复使用词语，用の指代了前面谈话的内容。如：おもしろいのが　ありますよ（还有很有趣的），这里的有趣指的是前面谈到过的雕刻等话题。&lt;br /&gt;
对于二类形容词，要在の前加な，如 “&lt;ruby&gt;簡単&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かんたん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; なの（简单的）”。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第十一课小野さんは-歌うたが-好きです&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第十一课小野さんは-歌うたが-好きです&#34;&gt;#&lt;/a&gt; 第十一课：小野さんは　&lt;ruby&gt;歌&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;うた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; が　好きです&lt;/h1&gt;
&lt;h2 id=&#34;语法-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法-3&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;名1は-名2が-形1形2です&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名1は-名2が-形1形2です&#34;&gt;#&lt;/a&gt; [名 1] は　[名 2] が　[形 1]/[形 2] です&lt;/h3&gt;
&lt;p&gt;形容词 1 和形容词 2 为表达情感的形容词。&lt;br /&gt;
名词 1 表示情感的主题，名词 2 表示情感的对象。&lt;br /&gt;
eg: &lt;ruby&gt;林&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はやし&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; さんは　&lt;ruby&gt;犬&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;いぬ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　が　&lt;ruby&gt;怖&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;こわ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; い&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;です。   林先生害怕狗。&lt;/p&gt;
&lt;h3 id=&#34;名1は-名2が-分わかりますできます&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名1は-名2が-分わかりますできます&#34;&gt;#&lt;/a&gt; [名 1] は　[名 2] が　&lt;ruby&gt;分&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;わ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; かります / できます&lt;/h3&gt;
&lt;p&gt;分かります（明白）　できます（会）　&lt;ruby&gt;上手&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じょうず&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; です（擅长）　&lt;ruby&gt;下手&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;へた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; です（不擅长（客观上）） &lt;ruby&gt;苦手&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;にがて&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; です（不擅长（主观情感上）） 等表达能力的词语也可用该句型。&lt;br /&gt;
eg: 私は　コンピュータ　が　できません。　  我不会用电脑。&lt;/p&gt;
&lt;h3 id=&#34;名や-名&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名や-名&#34;&gt;#&lt;/a&gt; [名] や　[名]&lt;/h3&gt;
&lt;p&gt;や也可用于连接名词，但と用于列举所有的项目，や只用于列举许多项目中的两项，相当于 “&lt;sub&gt;呀&lt;/sub&gt;什么的”，常与など（等等）呼应使用。&lt;br /&gt;
eg: 私は　&lt;ruby&gt;お&lt;rt&gt;&lt;/rt&gt;店&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;みせ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; で　&lt;ruby&gt;野菜&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;やさい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; や　&lt;ruby&gt;果物&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;くだもの&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; などを　買いました。 我在店里买了蔬菜呀水果等等。&lt;/p&gt;
&lt;h3 id=&#34;~から-和-だから-原因-理由&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#~から-和-だから-原因-理由&#34;&gt;#&lt;/a&gt; ~ から　和 だから    [原因、理由]&lt;/h3&gt;
&lt;p&gt;から需要接在表示原因、理由小句的句尾。一般形 1 / 动词 + から。&lt;br /&gt;
eg: 森さんは　&lt;ruby&gt;お&lt;rt&gt;&lt;/rt&gt;酒&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;さけ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; が　好きですから、毎日　飲みます。  森先生喜欢喝酒，每天都喝。&lt;/p&gt;
&lt;p&gt;ですから更有礼貌。&lt;/p&gt;
&lt;p&gt;だから是表示原因、理由的连词，相当于 “所以”，一般用在结果的句子的前面。礼貌的说法是ですから。&lt;br /&gt;
eg: &lt;ruby&gt;明日&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あした&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　休みです。ですから、子供と　&lt;ruby&gt;動物園&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;どうぶつえん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; へ　行きます。    明天休息，所以我跟孩子去动物园。&lt;/p&gt;
&lt;h3 id=&#34;表示频率的副词&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表示频率的副词&#34;&gt;#&lt;/a&gt; 表示频率的副词&lt;/h3&gt;
&lt;p&gt;いつも　よく　&lt;ruby&gt;時&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ときどき&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;々&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;　たまに　あまり　&lt;ruby&gt;全然&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ぜんぜん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 等为表示频率的副词。あまり、全然后面接否定形式。&lt;/p&gt;
&lt;h3 id=&#34;どうしてですか&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#どうしてですか&#34;&gt;#&lt;/a&gt; どうしてですか&lt;/h3&gt;
&lt;p&gt;询问事由时使用，相当于 “为什么”。回答时在谓语后面加から。&lt;br /&gt;
eg:&lt;br /&gt;
- ぼくは　&lt;ruby&gt;来月&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;らいげつ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　また　ここへ　来きますよ。    我下个月还来这里。&lt;br /&gt;
- どうしてですか。   为什么？&lt;br /&gt;
- ここで　友達の　&lt;ruby&gt;結婚式&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;けっこんしき&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; が　ありますから。    因为朋友要在这里举行结婚典礼。&lt;/p&gt;
&lt;h2 id=&#34;表达-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达-3&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;僕&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ぼく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;br /&gt;
 男性对关系比较亲密的人自称时使用的第一人称代词。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ホテルで　&lt;ruby&gt;写真展&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しゃしんてん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; が　あります&lt;br /&gt;
某处发生某事，某事发生的场所用で。  区分之前：[场所] に　[物] が　あります。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;いかがですか&lt;br /&gt;
是どうですか的礼貌表达，对上级或长辈使用。表示 “~ 怎么样”。&lt;br /&gt;
eg:&lt;br /&gt;
- コーヒーは　いかがですか。&lt;br /&gt;
接受时：どうも  ありがとう　ございます　いただきます。&lt;br /&gt;
拒绝时：今は　&lt;ruby&gt;結構&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;けっこう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; です。（现在不用了。）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;そうですね&lt;br /&gt;
可以表示同意对方提议，也可用在疑问句后面，表示说话人在思考接下来要说的内容。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;迷&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;まよ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; います&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;br /&gt;
用于难以立即做出选择的场合。表示犹豫。也可以表示 “迷路”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;気&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;き&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; に&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;　&lt;ruby&gt;入&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;い&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; りました&lt;br /&gt;
相当于 “喜欢”，但不表示自己原有的爱好，仅用于第一次见到时感到中意，对象用が，且只用于朋友或熟人之间。&lt;br /&gt;
表达持续性的爱好用好きです。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第十二课李さんは-森さんより-若わかいです&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第十二课李さんは-森さんより-若わかいです&#34;&gt;#&lt;/a&gt; 第十二课：李さんは　森さんより　&lt;ruby&gt;若&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;わか&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; いです&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/h1&gt;
&lt;h2 id=&#34;语法-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法-4&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;名1は-名2より-形1形2-です&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名1は-名2より-形1形2-です&#34;&gt;#&lt;/a&gt; [名 1] は　[名 2] より　[形 1]/[形 2] です&lt;/h3&gt;
&lt;p&gt;“名 1 比名 2 更～”。&lt;br /&gt;
eg: &lt;ruby&gt;上海&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;シャンハイ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　&lt;ruby&gt;北京&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ペキン&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; より　にぎやかですか。    上海比北京热闹吗？&lt;/p&gt;
&lt;p&gt;程度差异较大时用副词 “ずっと” 强调。&lt;br /&gt;
eg: 中国は　日本より　ずっと　&lt;ruby&gt;広&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ひろ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; い&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;です。       中国比日本辽阔得多。&lt;/p&gt;
&lt;h3 id=&#34;名1より-名2の-はうが-形1形2です&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名1より-名2の-はうが-形1形2です&#34;&gt;#&lt;/a&gt; [名 1] より　[名 2] の　はうが　[形 1]/[形 2] です&lt;/h3&gt;
&lt;p&gt;“与名 1 相比，名 2 更～”。&lt;br /&gt;
eg: &lt;ruby&gt;大阪&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おおさか&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; より　&lt;ruby&gt;東京&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;とうきょう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; の　ほうが　にぎやかですか。  与大阪相比，东京更热闹吗？&lt;/p&gt;
&lt;h3 id=&#34;名1は-名2ほど-形1く-ないです形2では-ありません&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名1は-名2ほど-形1く-ないです形2では-ありません&#34;&gt;#&lt;/a&gt; [名 1] は [名 2] ほど [形 1] く ないです /[形 2] では　ありません&lt;/h3&gt;
&lt;p&gt;“名 1 没有名 2 那么～”。&lt;br /&gt;
eg: 東京の　&lt;ruby&gt;冬&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ふゆ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　北京の　冬ほど　寒く　ないです。   东京的冬天没有北京的冬天那么冷。（形 1）&lt;br /&gt;
&lt;ruby&gt;神戸&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;こうべ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　大阪　ほど　にぎやか　ではありません。     神户没有大阪那么繁华。 （形 2）&lt;/p&gt;
&lt;h3 id=&#34;名1の-中なかで-名2が-一番いちばん-形1形2です&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名1の-中なかで-名2が-一番いちばん-形1形2です&#34;&gt;#&lt;/a&gt; [名 1] の　&lt;ruby&gt;中&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なか&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; で　[名 2] が　&lt;ruby&gt;一番&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;いちばん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　[形 1]/[形 2] です&lt;/h3&gt;
&lt;p&gt;“在名 1 中，名 2 是最～的”。&lt;br /&gt;
eg: 日本&lt;ruby&gt;料理&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;りょうり&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; の　中で　&lt;ruby&gt;寿司&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;すし&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; が　いちばん　おいしいです。     日式饭菜中，寿司最好吃。&lt;/p&gt;
&lt;p&gt;注：如果 名词 1 表示场所或时间，则后面不加 “の　&lt;ruby&gt;中&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なか&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;”，而使用 “[名 1 (场所、时间)] で　いちばん　[形 1 / 形 2] [名 2] は　[名 3]　です”。　　表示：在 场所 / 时间 ，最～的名 2 是名 3。&lt;br /&gt;
eg: 日本で　いちばん　&lt;ruby&gt;高&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;たか&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; い&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;　&lt;ruby&gt;山&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;やま&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　&lt;ruby&gt;富士山&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ふじさん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; です。   日本最高的山是富士山。&lt;/p&gt;
&lt;p&gt;注：日语中的 “いちばん” 只能用于 “~ の　中で”　“~ で” 等明确指出比较对象和范围的情况。&lt;/p&gt;
&lt;h3 id=&#34;名1と-名2と-どちらが-形1形2ですか&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名1と-名2と-どちらが-形1形2ですか&#34;&gt;#&lt;/a&gt; [名 1] と　[名 2] と　どちらが　[形 1]/[形 2] ですか&lt;/h3&gt;
&lt;p&gt;询问两种事物当中哪一种更&lt;sub&gt;怎么样。“どちら” 是两者二选一时使用的疑问词，回答时使用 “&lt;/sub&gt;の　ほうが...”。如果两者程度相当，则使用 “どちらも　~ です”。“どちら” 在口语中可说成 “どっち”。&lt;br /&gt;
eg:&lt;br /&gt;
- 日本語と　英語と　どちらが　&lt;ruby&gt;難&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;むずか&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; しい&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;ですか。 日语和英语，哪个难学？&lt;br /&gt;
—— 日本語の　ほうが　難しいです。　  日语难学。&lt;/p&gt;
&lt;p&gt;询问的范围为两种事物时，无论是人是物还是时间，都可用 “どちらが”。但询问的范围为三种以上的事物时，不能用 “どちら”。&lt;/p&gt;
&lt;h3 id=&#34;どの-名-いつどれだれ何なに-が-いちばん-形1形2ですか&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#どの-名-いつどれだれ何なに-が-いちばん-形1形2ですか&#34;&gt;#&lt;/a&gt; どの　[名] / いつ / どれ / だれ /&lt;ruby&gt; 何&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なに&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 　が　いちばん　[形 1]/[形 2] ですか&lt;/h3&gt;
&lt;p&gt;询问三个以上事物中哪个最～时，根据询问对象不同需要区分：是人则使用 “だれが”，是物则使用 “どの　~ が” “どれが” 或者 “何が”，是时间则使用 “いつが”。&lt;br /&gt;
eg：&lt;br /&gt;
- この　中で　どの　料理　が　いちばん　おいしいですか。     在这些菜当中，哪个菜最好吃？&lt;br /&gt;
—— この　料理　が　いちばん　おいしいです。             这个菜最好吃。&lt;/p&gt;
&lt;p&gt;-&lt;ruby&gt; 季節&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;きせつ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; の　中で　いつが　いちばん　好きですか。      四个季节当中，你最喜欢哪一个？&lt;br /&gt;
——　私は　&lt;ruby&gt;春&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はる&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　が　いちばん　好きです。           我喜欢春天。&lt;/p&gt;
&lt;p&gt;被选择的事物已见于上下文或存在于眼前时，使用 “どの　～が” 或 “どれが”，反之则使用 “何が”。&lt;br /&gt;
eg: リンゴと　ナシと　バナナの　中で　どれが　いちばん　好きですか。    苹果、梨和香蕉当中你最喜欢什么？&lt;/p&gt;
&lt;h2 id=&#34;表达-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达-4&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;最近&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;さいきん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;br /&gt;
 表示从较近的过去到现在为止的一段时间。由于是说话人自己的判断，所以所指时间长短因人而异。且 “&lt;ruby&gt;最近&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;さいきん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;” 不能表示将来的时间。&lt;br /&gt;
eg: 最近　&lt;ruby&gt;十年間&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じゅうねんかん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　&lt;ruby&gt;元気&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;げんき&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; でした。  最近 10 年身体都很好。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;~ か　いいです&lt;br /&gt;
根据上下文判断意思，例如：&lt;br /&gt;
-&lt;ruby&gt; 箱根&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はこね&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; の　&lt;ruby&gt;お&lt;rt&gt;&lt;/rt&gt;土産&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;みやげ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　何が　いいですか。   箱根的礼品什么好？&lt;br /&gt;
—— &lt;ruby&gt;寄木細工&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;よせぎざい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; が　いいです。      木片儿拼花工艺品比较好。      （表示选择）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;- 私は　&lt;ruby&gt;肉&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;にく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; より　&lt;ruby&gt;魚&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;さかな&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　ほうが　いいです。   比起肉来我更喜欢吃鱼。 （表示喜欢）&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;やっぱり&lt;br /&gt;
是 “やはり” 较随便的说法，表示 “正如自己预料的那样”。也可表示 “预测了各种各样的结局，结果还是～” 的意思，表示经过一番考虑确定了某个想法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;~ が...   [说半句话时]&lt;br /&gt;
 话不说完，用が结尾，通常在遇到难以启齿的事或拒绝别人的请求时这样做，给对方委婉、含蓄的印象。&lt;br /&gt;
eg: あのう、それは　私の　&lt;ruby&gt;席&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;せき&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ですが...        对不起，那是我的座位......&lt;br /&gt;
 也可用于补充和前面所说内容有出入的情况。&lt;br /&gt;
eg: どちらが　おいしいですか。　——　どちらも　おいしいですよ。私は　ジャスミン&lt;ruby&gt;茶&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ちゃ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; が　好きですが...。&lt;br /&gt;
(哪种好喝？—— 哪种都好喝，不过我更喜欢喝茉莉花茶。)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="课程学习" scheme="https://ei4869.github.io/miyano/categories/Course-Study/" />
        <category term="日语" scheme="https://ei4869.github.io/miyano/categories/Course-Study/Japanese/" />
        <category term="课程" scheme="https://ei4869.github.io/miyano/tags/%E8%AF%BE%E7%A8%8B/" />
        <updated>2025-03-07T09:49:00.000Z</updated>
    </entry>
    <entry>
        <id>https://ei4869.github.io/miyano/Engine-Translation/KrKr%E5%BC%95%E6%93%8E%E6%B1%89%E5%8C%96(%E4%B8%89)/</id>
        <title>KrKr引擎汉化(三)</title>
        <link rel="alternate" href="https://ei4869.github.io/miyano/Engine-Translation/KrKr%E5%BC%95%E6%93%8E%E6%B1%89%E5%8C%96(%E4%B8%89)/"/>
        <content type="html">&lt;details class=&#34;info&#34;&gt;&lt;summary&gt;编辑记录&lt;/summary&gt;&lt;div&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;2025-03-05 11:05:00 第一次编辑&lt;/p&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;正文&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;h1 id=&#34;简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介&#34;&gt;#&lt;/a&gt; 简介&lt;/h1&gt;
&lt;p&gt;  本文章为对 &lt;strong&gt;KrKr 引擎&lt;/strong&gt; 游戏的解包封包的一些方法的对于 (二) 的补充。&lt;/p&gt;
&lt;h1 id=&#34;教程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#教程&#34;&gt;#&lt;/a&gt; 教程&lt;/h1&gt;
&lt;h2 id=&#34;示例一&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#示例一&#34;&gt;#&lt;/a&gt; 示例一&lt;/h2&gt;
&lt;p&gt;以游戏《恋愛、はじめまして》为例介绍解包方法。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;直接使用 &lt;strong&gt;KrkrExtract.exe&lt;/strong&gt;、&lt;strong&gt;KrkrExtract.dll&lt;/strong&gt; 进行解包，拖入游戏时会报错：&amp;quot;access violation : the thread attempts to read from or write to a virtual address for which it does not have access&amp;quot;。解决方法是：把 &lt;strong&gt;KrkrExtract.dll&lt;/strong&gt; 重命名为 &lt;strong&gt;wuvorbis.dll&lt;/strong&gt; 就能解决，之后能正常解包。&lt;/li&gt;
&lt;li&gt;或者使用 &lt;strong&gt;GarBro&lt;/strong&gt; 解包，密钥选择：&amp;quot;Kari Gurashi Ren&#39;ai&amp;quot;，也能解包成功。&lt;/li&gt;
&lt;li&gt;对于该游戏，可以使用 KrkrExtract 进行  &lt;code&gt;Make Universal Patch&lt;/code&gt;  得到 &lt;code&gt;_patch.exe&lt;/code&gt;  文件，然后新建文件夹  &lt;code&gt;ProjectDir&lt;/code&gt;  用于存放修改的文件，即可实现免封包读取。不过要保留 KrkrExtract.db 和 KrkrUniversalPatch.dll，另外两个 KrkrExtract.exe 和 wuvorbis.dll 删去即可。&lt;/li&gt;
&lt;li&gt;还可使用 winhex 修改 游戏 exe 的 forcedataxp3 相关值为 0（这里已经为 0 不用修改），之后则可直接新建 data 文件夹存放 data.xp3 解包的 data 文件夹里的文件，可以修改里面的文件，不过会优先读取 data.xp3 所以需要移出去，才能读取 data 文件夹。&lt;/li&gt;
&lt;li&gt;本游戏不能用 Xp3Viewer 解封包，不会弹出那个窗口，但有一个方便的方法制作补丁，&lt;a href=&#34;https://github.com/arcusmaximus/KirikiriTools&#34;&gt;工具&lt;/a&gt;，下载 &lt;strong&gt;Xp3Pack.exe&lt;/strong&gt; 和 &lt;strong&gt;version.dll&lt;/strong&gt; ，把 version.dll 放在游戏目录下（其实对该游戏可以不放），作用是令读取加密 xp3 包的游戏去读取未加密的包。然后 xp3packer 就是个封未加密的包的工具，与 version.dll 配合使用。 只需要把修改的文件放到一个 patch 的文件夹，然后拖到 Xp3Pack.exe* 就可打包为 xp3 文件，如果游戏中已经有 patch.xp3，则命名为 patch2.xp3，以此类推。对于原本的文件例如 data.xp3,patch.xp3 不用处理。  该工具里的 &lt;strong&gt;KirikiriDescrambler.exe&lt;/strong&gt; 是用于解密加密的脚本的。&lt;/li&gt;
&lt;li&gt;对于该游戏，需要在中文环境下打开，才能显示出中文汉字，如果在日文区域打开，如果是 shiftjis 不支持的汉字，会变成点。之前我的系统由于配置了日文区域和环境，导致一直解决不了变成点的问题。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;示例二&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#示例二&#34;&gt;#&lt;/a&gt; 示例二&lt;/h2&gt;
&lt;p&gt;以游戏《見上げた空におちていく》为例。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;之前遇到的字体一粗一浅，winhex 修改编码无效，原来就是因为环境问题，需要在中文环境下打开 exe 才能成功。然后直接打开该游戏，原来的日文字符会乱码。需要中文环境下转日区运行，才能正常显示日文，而中文字体也正常。&lt;/li&gt;
&lt;li&gt;要想直接打开不乱码，需要对各种文本文件进行转换编码。脚本的中文汉字之所以能正常显示，就是因为在汉化打包回 ks 文件时编码已经变成了 UTF-16 LE with BOM。所以，需要对游戏内所有文本文件，后缀例如：.tjs，.ks，.scn，.csv，.txt，.ini，.func，.asd，.sinfo，.stand，找到这些文件，拖入 EmEditor ，注意，需要在 EmEditor 正确识别编码的情况下，再统一进行编码转换为 UTF-16 LE with Bom。这里有坑是针对 csv 文件，一般用于立绘，可能会不能正常显示，需要额外处理，对于该游戏没有 csv 文件所以不需要处理，详情参考&lt;a href=&#34;https://www.bilibili.com/video/BV1m64y187df/?share_source=copy_web&amp;amp;vd_source=8e65c67310132c58d9f9eae499cda356&#34;&gt; Gal 汉化入门 #9 KiriKiri2/Z  脚本编码转换&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;之后，对于所有需要修改的文件，还是可以都拖到一个 patch2 文件夹（因为目录里有 patch.xp3），然后 Xp3Pack.exe 打包为 patch2.xp3 放在游戏目录即可。游戏就能读取并看到修改的效果。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;字体的修改&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字体的修改&#34;&gt;#&lt;/a&gt; 字体的修改&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;首先就是 winhex 修改 exe：搜索 C6431780 把 80 -&amp;gt; 86，8A401A8845D7 -&amp;gt; C645D7869090。然后保存。&lt;/li&gt;
&lt;li&gt;修改游戏字体。方法为：
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;用 krkrfont.exe 制作 krkr 预渲染 tft 字体，首先电脑要安装想用的字体，再在 krkrfont.exe 里选择该字体（注意还是得中文环境打开）。例如这里选择 “霞骛文楷”，然后选择保存目录，再点击创建。&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//engine_tools/krkr9.jpg&#34; style=&#34;max-width: 80%; height: auto;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;把字体放到 data 文件夹内，确保与 startup.tjs 在同一目录下，然后找到 first.ks 文件，在最初加上例如：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;[mappfont storage=&amp;quot;xw.tft&amp;quot;]     //前面保存的字体名词
[font face=&amp;quot;rei&amp;quot;]               //随便写
&lt;/code&gt;&lt;/pre&gt;
这里生效的只是脚本的字体。
&lt;ul&gt;
&lt;li&gt;要是 BackLog 也生效，需要修改文件： &lt;code&gt;data\system\HistoryLayer.tjs&lt;/code&gt; ，找到 &lt;code&gt;function HistoryLayer(win, par)&lt;/code&gt; ，然后进行下列修改：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight txt&#34;&gt;&lt;figcaption data-lang=&#34;txt&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;var myfont = &#39;xw.tft&#39;;      //增加的内容&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;function HistoryLayer(win, par)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;#123;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	super.Layer(...);&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	(HistoryLayer_config incontextof this)(); // configuration&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	(HistoryLayer_config_override incontextof this)()&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		if typeof global.HistoryLayer_config_override != &#34;undefined&#34;;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	name = &#34;メッセージ履歴レイヤ&#34;;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	setImageSize(parent.width, parent.height);&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	setSizeToImageSize();&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	hitType = htMask;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	hitThreshold = 1;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	/**/font.height = fontHeight-4;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	/**/lineHeight = fontHeight-2;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	font.bold = fontBold;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	if(verticalView)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&amp;#123;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		font.angle = 2700;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		font.face = &#39;@&#39; + fontName;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		font.mapPrerenderedFont(myfont);    //增加的内容&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&amp;#125;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	else&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&amp;#123;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		font.angle = 0;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		font.face = fontName;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		font.mapPrerenderedFont(myfont);    //增加的内容&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&amp;#125;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;...&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;#125;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;这样 History 的字体也会修改。&lt;/li&gt;
&lt;li&gt;打包的话，就是把字体文件和修改的例如 first.ks 和 HistoryLayer.tjs 都扔到 patch 文件夹里，再 Xp3Pack.exe 打包即可。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;参考链接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考链接&#34;&gt;#&lt;/a&gt; 参考链接&lt;/h2&gt;
&lt;p&gt;1.&lt;a href=&#34;https://peanutmelonseedbigalmond.pages.dev/2021/02/24/krkr%E5%BC%95%E6%93%8E%E7%A0%94%E7%A9%B6%E8%AE%B0%E5%BD%95/&#34;&gt;krkr 引擎研究记录&lt;/a&gt; | &lt;a href=&#34;/miyano/html/krkr引擎研究记录 _ 子虚乌有的剪切板.html&#34; onclick=&#34;window.location.href=this.href; event.stopPropagation(); return false;&#34;&gt;网页备份&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2.&lt;a href=&#34;https://www.bilibili.com/opus/746093964791119991&#34;&gt;Krkr 引擎工具合集（一）—— 解包封包&lt;/a&gt; | &lt;a href=&#34;/miyano/html/Krkr引擎工具合集（一）——解包封包 - 哔哩哔哩.html&#34; onclick=&#34;window.location.href=this.href; event.stopPropagation(); return false;&#34;&gt;网页备份&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3.&lt;a href=&#34;http://asmodean.reverse.net/pages/tools_index.html&#34;&gt; 各引擎工具包集合&lt;/a&gt; | &lt;a href=&#34;/miyano/html/asmodean&#39;s reverse engineering page - index of tools.html&#34; onclick=&#34;window.location.href=this.href; event.stopPropagation(); return false;&#34;&gt;网页备份&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="引擎汉化" scheme="https://ei4869.github.io/miyano/categories/Engine-Translation/" />
        <category term="工具" scheme="https://ei4869.github.io/miyano/tags/%E5%B7%A5%E5%85%B7/" />
        <updated>2025-03-05T03:05:00.000Z</updated>
    </entry>
    <entry>
        <id>https://ei4869.github.io/miyano/Scientific-Notes/Opening-Report/%E5%BC%80%E9%A2%98%E6%8A%A5%E5%91%8A-%E7%AD%94%E8%BE%A9%E7%A8%BF/</id>
        <title>开题报告-答辩稿</title>
        <link rel="alternate" href="https://ei4869.github.io/miyano/Scientific-Notes/Opening-Report/%E5%BC%80%E9%A2%98%E6%8A%A5%E5%91%8A-%E7%AD%94%E8%BE%A9%E7%A8%BF/"/>
        <content type="html">&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;开场白&lt;/strong&gt;&lt;br /&gt;
各位老师好！我是 2021 级本科生 XXX，我的毕业设计题目是《脉冲激光沉积 SrCoOx 薄膜的电致阻变性能及机理研究》，指导教师为 XXX 老师。下面我将从研究目的、现状、方案、内容及进度安排五个部分展开汇报。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;研究目的&lt;/strong&gt;&lt;br /&gt;
优化脉冲激光沉积（PLD）工艺，探讨氧分压、温度等对薄膜微结构的影响，并制备高质量 SrCoOx 薄膜，探究其作为阻变层在电致阻变现象中的内在物理机制，为高性能存储器的设计与应用提供理论和实验依据。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;研究现状&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;目前，高密度非易失性存储器和存算一体化技术备受关注。已有研究中，Saito 等通过优化相变材料结构提高了器件的耐久性；Husremović 等利用杂化异质结构实现了多级电阻调控；而 Zhou 等的工作则展示了低能耗、高速编程的光子存储器。&lt;br /&gt;
图 1 展示的是 Saito 的工作，他们根据密度变化与光学对比度之间的关系，使用密度泛函理论（DFT）模拟预测反射率，再计算光学对比度，从而预测了多种过渡金属化合物的密度变化。图中的预测值以红色菱形符号表示。蓝色圆圈代表实验数据。根据预测结果使用 Cr₂Ge₂Te₆进行对比实验，发现制得的薄膜在非晶态和晶态之间转化的厚度变化几乎可以忽略不计，验证了其高耐久性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;针对 BM–SrCoOx 薄膜的晶体结构和拓扑相变，我们知道，完全氧化状态下，SrCoO3 PV-SCO 呈现钙钛矿结构，由连续的氧八面体构成，氧空位含量极低，在此结构中，Co 的氧化态为 Co4+，材料表现出铁磁金属性。当氧含量降低时，PV-SCO 会转变为钙铁石结构 SrCoO2.5 (BM- SCO)。BM-SCO 的特点是氧四面体（CoO4）和氧八面体（CoO6）沿晶体生长方向周期性堆叠，这种结构导致氧空位的有序排列，氧离子的迁移受到限制，在 BM-SCO 中，Co 的氧化态降低至 Co3+，表现为反铁磁性和绝缘性。&lt;br /&gt;
但 PV-SCO 中由于高价态 Co4 + 的高吉布斯自由能和较低的氧空位形成能，其合成通常需要在高温高氧压下。而清华大学课题组提出了两种温和快速的合成方法：一种是碱溶液门控（AAG），在大约 - 0.6V 下触发相变，-1V 时相变时间约 2 分钟；另一种是酸溶液反应（ASR），在室温下仅需 2 秒即可完成相变。&lt;br /&gt;
图 2 展示的是这些方法的示意图，可以发现 AAG 方法的核心是提供丰富的羟基离子（OH−），从而促进了反应速率，导致临界电压降低和氧化速度加快。而 ASR 方法的核心是利用氧四面体的 Co 离子相比氧八面体的 Co 离子对酸的抵抗力更差，导致发生了一种歧化反应，BM-SCO 与质子发生反应，其中一半的 Co 离子被还原为可溶的 Co2+，而另一半则被氧化为以 PV-SCO 形式存在的 Co4+。&lt;br /&gt;
进一步地，Miao 等人的工作展示了在离子液体栅极作用下，SrCoO₂.₅与 SrCoO₃之间的可逆相变，并揭示了氧离子在 BM-SCO 中的各向异性迁移。&lt;br /&gt;
图 3 表示的是 BM-SCO 双通道器件中突触权重的调制。图 a 展示的是通道沿着 110 和 100 方向，图 b-d 表示不同的 Vg 栅电压下。图 b 表示此时通道 1 的 [110] 直接受到电场的影响，电导率变化大，而此时电压不足以引起通道内氧离子迁移所以通道 2 的两个方向都没有电导率变化。图 c 表示电压增大，通道 1 电导率变化更大转变为长期可塑性，而同样是通道 2，110 方向已经有电导率变化，更敏感。 图 d 表示电压继续增大下，通道 2 的 100 也开始表现出短期可塑性。 由此表明了氧离子迁移的各向异性， 适合构建人工突触。&lt;br /&gt;
注：&lt;br /&gt;
(001 指沿衬底 001 方向生长的膜)&lt;br /&gt;
(通道 1 与离子液体直接接触可通过离子液体门控，电导率可以被门电压（Vg）调制，通道 2 是不与离子液体接触的通道，因此其电导率不受离子液体门控效应的直接影响，但可以通过通道 I 中的氧离子浓度梯度间接受到影响)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在薄膜制备方面，文献表明氧分压与温度显著影响薄膜结晶性、结构等。&lt;br /&gt;
如图 4，是不同氧分压下生长的 STO 薄膜的 AFM 二维和三维图像，表明氧分压较低时，晶粒尺寸细小，但有比较大的晶粒&lt;br /&gt;
分布范围。氧分压增大后，薄膜晶粒由小变大相互融合，形成明显的大尺寸晶粒。而且颗粒的平均面积逐渐变大，同时颗粒数目也逐渐减少。&lt;br /&gt;
而图 5 展示的是不同后退火温度下，薄膜发生的由钙铁石相到钙钛矿相的拓扑相变。&lt;br /&gt;
当退火温度 T ≥ 250℃ 时，SrCoO2.5 特有的 (006)、(0010) 衍射峰强度明显降低，并逐渐右移，(008) 衍射峰消失，并出现钙钛矿型 SrCoO3–δ 特有的衍射峰 (002)。当退火温度达到 600℃ 时，BM-SCO 特征峰 (006)、(0010) 完全消失，即样品完全转变为 P-SCO。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在拓扑相变忆阻器研究上，Lo 等人利用 PLD 制备的 Au/SCO/Nb-STO 结构展示了高循环耐久性和良好的数据保持特性；而 Mou 等人则开发了基于有序氧空位通道的双模式 TPT-RAM，实现了模拟开关特性的可重复调控。&lt;br /&gt;
图 6 展示了器件从形成、复位到设置的电阻开关过程，在器件的初始状态下，未施加偏压时，BM-SCO 呈现多晶结构并均匀分布，没有 P-SCO，在形成过程中，当对 Au 顶电极施加正偏压时，BM-SCO 的结构将重排为单晶，电场诱导氧离子从 Nb-STO 表面迁移到顶电极，并占据 BM-SCO 中的缺氧层，从而形成 P-SCO 导电路径，当对 Au 施加负偏压时，纳米丝从上到下断裂，因为氧离子将从顶电极被排除到底电极，直到器件处于高阻态（HRS）。靠近顶电极的断裂纳米丝区域转变回 BM-SCO，其交替堆叠完全氧化的八面体和缺氧的四面体亚层，通过一系列电学测量，P-SCO 纳米丝将变得比之前测量中观察到的更强。因此，低阻态（LRS）中的电阻更低。器件需要更高的电压以排除更多的氧离子，从而使器件切换回高阻态。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;研究方案&lt;/strong&gt;&lt;br /&gt;
本课题采用 “工艺优化 - 器件制备 - 性能表征 - 机理分析” 的技术路线。具体是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过 PLD 调控氧分压、温度等参数，优化 SrCoOx 薄膜质量。&lt;/li&gt;
&lt;li&gt;结合光刻与电子束蒸镀技术，制备 Au/SrCoOx/SrRuO₃/SrTiO₃阻变器件。&lt;/li&gt;
&lt;li&gt;通过 I-V 曲线、循环耐久性测试评估器件阻变特性。&lt;/li&gt;
&lt;li&gt;借助 XRD、TEM、XPS 等手段，揭示氧空位分布与阻变机制的内在关联。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;研究内容&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;理解 PLD 设备原理与薄膜生长动力学，优化制备工艺；&lt;/li&gt;
&lt;li&gt;制备阻变器件，优化器件结构和界面；&lt;/li&gt;
&lt;li&gt;通过系统电学测试，评估器件的阻变性能；&lt;/li&gt;
&lt;li&gt;结合多种表征技术，分析薄膜结构、表面形貌和氧空位分布，探讨阻变机理并确定最优沉积条件。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注：&lt;br /&gt;
XRD:X 射线衍射 研究材料的晶体结构和相组成&lt;br /&gt;
 TEM: 透射电子显微镜  观察到样品内部的微观结构&lt;br /&gt;
 AFM: 原子力显微镜 获得高分辨率的三维形貌图像，并测量表面粗糙度、力学性能等信息&lt;br /&gt;
 XPS:X 射线光电子能谱 分析样品表面的化学成分及其化学状态&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;进度安排&lt;/strong&gt;&lt;br /&gt;
我的进度安排是分为四个阶段：分别是搜集资料；设计实验方案；开始制备薄膜和阻变器件，进行微观表征和电学测试；收集整理数据，进行分析，准备论文。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;结语&lt;/strong&gt;&lt;br /&gt;
以上是我的开题汇报内容，恳请各位老师批评指正！谢谢！&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;模拟问答环节（导师提问 → 学生回答）：&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;导师&lt;/strong&gt;：你为什么选择脉冲激光沉积（PLD）作为制备 SrCoOx 薄膜的方法？&lt;br /&gt;
&lt;strong&gt;学生&lt;/strong&gt;：PLD 具有优良的厚度控制和高结晶性优势，能精确调控沉积参数（如氧分压和温度），这对于研究薄膜相变和电致阻变性能至关重要。此外，已有文献证明 PLD 在类似体系中的成功应用，为我们提供了很好的技术借鉴。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;导师&lt;/strong&gt;：你提到要通过调控氧分压和温度来优化薄膜质量。具体来说，你打算如何确定最佳工艺参数？&lt;br /&gt;
&lt;strong&gt;学生&lt;/strong&gt;：我计划先进行一系列参数预实验，系统改变氧分压和沉积温度，利用 XRD 和 AFM 表征薄膜的晶体结构与表面形貌。结合电学测试，如 I-V 曲线和循环耐久性测试，我将建立参数与器件性能之间的关系，从中筛选出最优条件。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;导师&lt;/strong&gt;：在器件制备过程中，如何保证电极与薄膜之间的界面质量？&lt;br /&gt;
&lt;strong&gt;学生&lt;/strong&gt;：我将采用光刻和电子束蒸镀技术，确保电极图案的精确性和薄膜沉积的均匀性。针对界面问题，我会优化沉积顺序和预处理工艺，如表面清洗和热处理，以增强界面结合，同时利用 TEM 和 XPS 对界面结构进行深入分析。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;导师&lt;/strong&gt;：关于电致阻变机理，你计划如何利用表征手段揭示氧空位分布和迁移规律？&lt;br /&gt;
&lt;strong&gt;学生&lt;/strong&gt;：我将结合 XRD、TEM、AFM 和 XPS 等多种表征手段进行交叉验证。具体来说，XPS 能帮助我们了解氧化态的变化，TEM 和 AFM 则可直观观察薄膜微观结构，而电学测试中得到的阻变特性数据可以与这些结构特征对应，从而揭示氧空位在相变和电阻切换中的具体作用。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;导师&lt;/strong&gt;：最后，你预期的研究成果将如何推动高密度非易失性存储器或神经形态计算的发展？&lt;br /&gt;
&lt;strong&gt;学生&lt;/strong&gt;：通过精细调控 SrCoOx 薄膜的相变过程，我们有望实现器件在多级电阻状态下的稳定转换，这将大幅提升存储器的耐久性和数据保持能力。同时，深入理解氧离子迁移机制也为构建人工突触提供了物理基础，为神经形态计算提供低功耗、高效能的硬件支撑，具有较高的应用前景。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;导师&lt;/strong&gt;：好的，整体方案思路清晰，问题也考虑得很全面。希望你在后续实验中能进一步细化参数，并密切关注数据与结构表征之间的关联。&lt;br /&gt;
&lt;strong&gt;学生&lt;/strong&gt;：非常感谢老师的指导，我会继续努力完善实验设计，期待后续能得到更多有价值的实验数据和结论。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;导师 A&lt;/strong&gt;：&lt;br /&gt;
你的研究中提到要通过优化 PLD 工艺参数来提升薄膜质量。但已有文献（如清华团队的工作）已实现了快速相变，你的研究创新点具体体现在哪里？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;学生&lt;/strong&gt;：&lt;br /&gt;
感谢老师的提问。现有研究主要聚焦于相变速率的提升，例如通过 AAG 或 ASR 方法实现秒级相变。但本研究的创新点在于：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;工艺协同优化&lt;/strong&gt;：我们不仅关注相变速率，还通过调控氧分压和温度，平衡薄膜的结晶性与氧空位分布，以提高阻变器件的循环稳定性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;界面工程&lt;/strong&gt;：在器件制备中，我们重点优化电极与薄膜的接触质量，这可能是现有文献中未充分解决的瓶颈问题。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;机理深度关联&lt;/strong&gt;：结合 XPS 和原位 TEM，我们将建立氧空位迁移路径与电致阻变性能的直接关联，为机理模型提供新证据。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;导师 B&lt;/strong&gt;：&lt;br /&gt;
你计划用 XRD 和 TEM 分析氧空位分布，但这些手段可能无法直接观测动态迁移过程。是否考虑补充其他表征方法？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;学生&lt;/strong&gt;：&lt;br /&gt;
老师的问题非常关键。除了 XRD 和 TEM，我们计划引入：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;原位 XPS&lt;/strong&gt;：在施加电场条件下实时监测氧空位的价态变化。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;导电原子力显微镜（C-AFM）&lt;/strong&gt;：在纳米尺度下观察氧空位通道的形成与断裂过程。&lt;br /&gt;
这些方法可以弥补传统表征的不足，更动态地揭示阻变机制。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;导师 C&lt;/strong&gt;：&lt;br /&gt;
你提到要将 SrCoOx 应用于存算一体化，但实验中仅设计了阻变器件测试。如何体现与神经形态计算的关联性？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;学生&lt;/strong&gt;：&lt;br /&gt;
目前我们以基础性能测试为主，但后续计划通过两类实验体现应用潜力：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;突触模拟&lt;/strong&gt;：利用器件的多级阻变特性，模拟突触权重调制（参考 Miao 等人的双通道设计）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;脉冲时序依赖可塑性（STDP）测试&lt;/strong&gt;：通过特定电压脉冲序列验证器件是否具备类脑学习能力。&lt;br /&gt;
若时间允许，我们将在论文中补充这部分结果。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;导师 D&lt;/strong&gt;：&lt;br /&gt;
电极与薄膜的接触质量优化是难点，你提到 “结构稳定性” 具体指什么？如何量化评估？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;学生&lt;/strong&gt;：&lt;br /&gt;
“结构稳定性” 主要指电极与薄膜界面在多次阻变循环后的物理和化学稳定性，具体通过以下指标量化：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;接触电阻变化率&lt;/strong&gt;：循环测试前后电阻值的标准差。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;界面形貌分析&lt;/strong&gt;：通过 AFM 和 SEM 观察电极剥离或薄膜裂纹情况。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;元素扩散检测&lt;/strong&gt;：EDX 表征电极金属（如 Au）是否向薄膜层扩散。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;导师 A（总结）&lt;/strong&gt;：&lt;br /&gt;
好的，请继续关注实验细节的可行性，期待你的阶段性成果！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;学生&lt;/strong&gt;：&lt;br /&gt;
谢谢各位老师的建议！我会进一步完善方案，争取高质量完成研究！&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;导师 A（总结）&lt;/strong&gt;：&lt;br /&gt;
Au/SrCoOx/SrRuO3/SrTiO3 各层的功能是什么？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;学生&lt;/strong&gt;：&lt;br /&gt;
Au 层：作为上电极，Au 具有优良的导电性和化学稳定性，用于提供电信号的输入和输出，同时保证器件界面不发生氧化或其他化学反应。&lt;/p&gt;
&lt;p&gt;SrCoOx 层：这是器件的核心活性层，负责实现阻变效应。SrCoOx 的氧化态和氧空位分布可以在电场作用下发生可逆变化，形成或断开导电通道，从而改变器件的电阻状态。&lt;/p&gt;
&lt;p&gt;SrRuO₃层：作为底电极，SrRuO₃不仅具有较好的导电性，还与上层的 SrCoOx 和下层的 SrTiO₃具有良好的晶格匹配，能够提供稳定的电流传输和优质的界面，帮助降低接触电阻及器件的不均匀性。&lt;/p&gt;
&lt;p&gt;SrTiO₃层：作为衬底，SrTiO₃提供了一个高质量、结构稳定的生长平台，有利于薄膜的外延生长，从而保证整体器件的晶体质量和性能一致性。&lt;/p&gt;
&lt;hr /&gt;
</content>
        <category term="科研笔记" scheme="https://ei4869.github.io/miyano/categories/Scientific-Notes/" />
        <category term="开题报告" scheme="https://ei4869.github.io/miyano/categories/Scientific-Notes/Opening-Report/" />
        <category term="毕设" scheme="https://ei4869.github.io/miyano/tags/%E6%AF%95%E8%AE%BE/" />
        <updated>2025-03-04T02:14:52.000Z</updated>
    </entry>
    <entry>
        <id>https://ei4869.github.io/miyano/Course-Study/Japanese/%E5%88%9D%E7%BA%A7%E4%B8%8A-%E7%AC%AC2%E5%8D%95%E5%85%83/</id>
        <title>单元二——小李的公司生活</title>
        <link rel="alternate" href="https://ei4869.github.io/miyano/Course-Study/Japanese/%E5%88%9D%E7%BA%A7%E4%B8%8A-%E7%AC%AC2%E5%8D%95%E5%85%83/"/>
        <content type="html">&lt;h1 id=&#34;第五课森もりさんは-七時しちじに-起おきます&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第五课森もりさんは-七時しちじに-起おきます&#34;&gt;#&lt;/a&gt; 第五课：&lt;ruby&gt;森&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;もり&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; さん&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;は　&lt;ruby&gt;七時&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しちじ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; に　&lt;ruby&gt;起&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;お&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; きます&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/h1&gt;
&lt;h2 id=&#34;语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;今いま-x時じ-x分ふんです&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#今いま-x時じ-x分ふんです&#34;&gt;#&lt;/a&gt; &lt;ruby&gt;今&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;いま&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　x&lt;ruby&gt; 時&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　x&lt;ruby&gt; 分&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ふん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; です&lt;/h3&gt;
&lt;p&gt;用于表示现在的时间。询问时间用　&lt;ruby&gt;何時&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なんじ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;br /&gt;
 上午八点半 -&amp;gt; &lt;ruby&gt;午前&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ごぜん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　&lt;ruby&gt;八時半&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はちじはん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　です      不加の&lt;/p&gt;
&lt;h3 id=&#34;动ます-动ません-动ました-动ませんでした&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动ます-动ません-动ました-动ませんでした&#34;&gt;#&lt;/a&gt; [动] ます　/[动] ません /[动] ました /[动] ませんでした&lt;/h3&gt;
&lt;p&gt;都是礼貌的形式。 肯定地叙述现在的习惯性动作、状态、未来的动作时用 ます　，否定用 ません；肯定地叙述过去的动作时用 ました，否定用 ませんでした。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ます&lt;/th&gt;
&lt;th&gt;ません&lt;/th&gt;
&lt;th&gt;ました&lt;/th&gt;
&lt;th&gt;ませんでした&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;ruby&gt;働&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はたら&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; きます&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;働&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はたら&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; きません&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;働&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はたら&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; きました&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;働きませんでした&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はたらきせんでした&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;ruby&gt;休&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;やす&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; みます&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;休&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;やす&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; みません&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;休&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;やす&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; みました&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;休&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;やす&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; みませんでした&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;疑问句则在句尾加 か&lt;/p&gt;
&lt;h3 id=&#34;名时间-に-动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名时间-に-动&#34;&gt;#&lt;/a&gt; [名 (时间)] に　[动]&lt;/h3&gt;
&lt;p&gt;表示动作发生的时间时，要在具体的时间词语后加助词 に&lt;br /&gt;
注:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;叙述包含数字的时间后一定加 に，如：&amp;quot;&lt;ruby&gt; 三月十四日&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;さんがつじゅうよっか&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; に &amp;quot;&lt;/li&gt;
&lt;li&gt;&lt;ruby&gt;今&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;いま&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　&lt;ruby&gt;昨日&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;きのう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;  &lt;ruby&gt;今日&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;きょう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　&lt;ruby&gt;明日&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あした&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　&lt;ruby&gt;毎日&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;まいにち&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;  &lt;ruby&gt;去年&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;きょねん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　&lt;ruby&gt;来年&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;らいねん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 等词后不能加に&lt;/li&gt;
&lt;li&gt;星期后可加可不加。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;该句式可换为：[时间]、[名] は　[动]&lt;/p&gt;
&lt;h3 id=&#34;名时间から-名时间まで-动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名时间から-名时间まで-动&#34;&gt;#&lt;/a&gt; [名 (时间)] から　[名 (时间)] まで　[动]&lt;/h3&gt;
&lt;p&gt;表示某动作发生在某个期间时。&lt;br /&gt;
eg: わたしは　&lt;ruby&gt;九時&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;くじ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; から　&lt;ruby&gt;働&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はたら&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; きます&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;。    我从九点开始工作。&lt;/p&gt;
&lt;h3 id=&#34;いつ-动-ますか&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#いつ-动-ますか&#34;&gt;#&lt;/a&gt; いつ　[动] ますか&lt;/h3&gt;
&lt;p&gt;询问某动作或事态进行的时间。&lt;br /&gt;
询问时间很具体时加に，如：&lt;ruby&gt;何時&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;になんじに&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　&lt;ruby&gt;何曜日&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なんようび&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; に&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;　&lt;ruby&gt;何日&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なんにち&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; に&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;br /&gt;
&lt;ruby&gt;試験&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しけん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　いつ　&lt;ruby&gt;始&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はじ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; まりますか。 什么时候开始考试？&lt;/p&gt;
&lt;p&gt;询问持续性动作或事态的起点或终点时，用 いつから　&lt;ruby&gt;何曜日&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なんようび&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; まで&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;等。&lt;/p&gt;
&lt;h3 id=&#34;は&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#は&#34;&gt;#&lt;/a&gt; は&lt;/h3&gt;
&lt;p&gt;は 还可用于对比&lt;br /&gt;
 eg: &lt;ruby&gt;小野&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おの&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; さん&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;は　今日は　休みます。  小野女士今天休息。&lt;/p&gt;
&lt;h2 id=&#34;表达&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;毎朝&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;まいあさ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　&lt;ruby&gt;何時&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;になんじ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; に &lt;ruby&gt;起&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;お&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; きますか&lt;br /&gt;
当两个名词都表示时间，而前面的名词中包含 &amp;quot;&lt;ruby&gt; 毎&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;まい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&amp;quot;时，名词见不加の；前面的名词中不包含&amp;quot;&lt;ruby&gt; 毎&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;まい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&amp;quot; 时，可加可不加。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ごろ&lt;br /&gt;
接在时间之后，表示大致的时间范围。后面一般不加に&lt;br /&gt;
 eg: &lt;ruby&gt;昨日&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;きのう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　&lt;ruby&gt;12&lt;rt&gt;&lt;/rt&gt; 時半&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じゅうにじはん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; ごろ　&lt;ruby&gt;寝&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ね&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; ました&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;。  昨晚，十二点半睡觉。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第六课吉田よしださんは-来月らいげつ-中国ちゅうごくへ-行いきます&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第六课吉田よしださんは-来月らいげつ-中国ちゅうごくへ-行いきます&#34;&gt;#&lt;/a&gt; 第六课：&lt;ruby&gt;吉田…… よしだ} さんは　{来月&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;らいげつ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　&lt;ruby&gt;中国&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ちゅうごく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; へ　&lt;ruby&gt;行&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;い&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; きます&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/h1&gt;
&lt;h2 id=&#34;语法-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法-2&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;名场所-へ-动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名场所-へ-动&#34;&gt;#&lt;/a&gt; [名 (场所)] へ　[动]&lt;/h3&gt;
&lt;p&gt;使用 行きます　&lt;ruby&gt;帰&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かえ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; ります&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;　等表示移动的动词时，行为的目的地用助词 へ 表示。&lt;/p&gt;
&lt;h3 id=&#34;名场所から-动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名场所から-动&#34;&gt;#&lt;/a&gt; [名 (场所)] から　[动]&lt;/h3&gt;
&lt;p&gt;使用移动动词时，移动的起点用助词 から。&lt;/p&gt;
&lt;h3 id=&#34;名人と-动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名人と-动&#34;&gt;#&lt;/a&gt; [名 (人)] と　[动]&lt;/h3&gt;
&lt;p&gt;和某人一起做某事。&lt;br /&gt;
eg: &lt;ruby&gt;小野&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おの&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; さん&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;は　&lt;ruby&gt;友達&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ともだち&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　と　&lt;ruby&gt;帰&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かえ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; りました&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;。 小野女士和朋友一起回去了。&lt;/p&gt;
&lt;h3 id=&#34;名交通工具で-动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名交通工具で-动&#34;&gt;#&lt;/a&gt; [名 (交通工具)] で　[动]&lt;/h3&gt;
&lt;p&gt;交通手段用助词 で，而不使用交通工具而步行时，用&lt;ruby&gt;歩&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ある&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; いて&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;br /&gt;
 eg: 私は　バス　で　家へ　帰ります。    我乘公共汽车回家。&lt;/p&gt;
&lt;h3 id=&#34;名场所から-名场所まで-动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名场所から-名场所まで-动&#34;&gt;#&lt;/a&gt; [名 (场所)] から　[名 (场所)] まで　[动]&lt;/h3&gt;
&lt;p&gt;表示移动的范围时，起点から终点まで。&lt;/p&gt;
&lt;h3 id=&#34;にでへからまでとは&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#にでへからまでとは&#34;&gt;#&lt;/a&gt; &amp;quot;に / で / へ / から / まで / と&amp;quot;+ は&lt;/h3&gt;
&lt;p&gt;は　加在这些副词后面表示一种复合形式。&lt;/p&gt;
&lt;h2 id=&#34;表达-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达-2&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;たしか&lt;br /&gt;
 &amp;quot;好像是...&amp;quot;，表示不完全有把握的记忆。&lt;br /&gt;
- あの　人は　だれですか。　—— たしか　李さんの　会社の　人です。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;家&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;いえ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　和 うち&lt;br /&gt;
意指建筑物时一般用&lt;ruby&gt;家&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;いえ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;，着重指家人时一般用うち。うち有 “我家” 的意思，但用&lt;ruby&gt;家&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;いえ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 时必须用 &amp;quot;私の家&amp;quot;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;まっすく　帰りました&lt;br /&gt;
 &amp;quot;径直回家&amp;quot;，まっすく　表示 “笔直” 的意思。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;お&lt;rt&gt;&lt;/rt&gt;疲&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;つか&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; れ&lt;rt&gt;&lt;/rt&gt;様&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;さま&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; でした&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;br /&gt;
寒暄用语，“辛苦了”。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第七课李さんは-毎日-コーヒーを-飲のみます&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第七课李さんは-毎日-コーヒーを-飲のみます&#34;&gt;#&lt;/a&gt; 第七课：李さんは　毎日　コーヒーを　&lt;ruby&gt;飲&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;の&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; みます&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/h1&gt;
&lt;h2 id=&#34;语法-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法-3&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;名を-动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名を-动&#34;&gt;#&lt;/a&gt; [名] を　[动]&lt;/h3&gt;
&lt;p&gt;动词的对象用助词 を。&lt;/p&gt;
&lt;h3 id=&#34;名场所で-动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名场所で-动&#34;&gt;#&lt;/a&gt; [名 (场所)] で　[动]&lt;/h3&gt;
&lt;p&gt;动作的场所用助词 で　表示。 注：日语中存在的场所用に，动作的场所用で。&lt;/p&gt;
&lt;h3 id=&#34;名か-名&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名か-名&#34;&gt;#&lt;/a&gt; [名] か　[名]&lt;/h3&gt;
&lt;p&gt;“或者”，对若干名词进行选择时。&lt;br /&gt;
eg: 私は　&lt;ruby&gt;毎朝&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;まいあさ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　パンか　&lt;ruby&gt;お&lt;rt&gt;&lt;/rt&gt;粥&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かゆ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　食べます。 我每天早上吃面包或粥。&lt;/p&gt;
&lt;h3 id=&#34;名を-ください&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名を-ください&#34;&gt;#&lt;/a&gt; [名] を　ください&lt;/h3&gt;
&lt;p&gt;“请给我～”。&lt;/p&gt;
&lt;h2 id=&#34;表达-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达-3&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&amp;quot;何&amp;quot; 的读法：なん　和 なに&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;形式&lt;/th&gt;
&lt;th&gt;例句&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;なにと&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;何&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なに&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; と&lt;ruby&gt;何&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なに&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　買いますか。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;なにが&lt;/td&gt;
&lt;td&gt;あそこに　&lt;ruby&gt;何&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なに&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; が　ありますか。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;なにを&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;何&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なに&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　食べますか。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;なにで / なんで&lt;/td&gt;
&lt;td&gt;&lt;ruby&gt;何&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なに / なん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; で　会社へ　いきますか。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;なんの&lt;/td&gt;
&lt;td&gt;それは　&lt;ruby&gt;何&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; の　本ですか。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;なん時刻 / 星期等&lt;/td&gt;
&lt;td&gt;李さんは　&lt;ruby&gt;何&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 時に　来ますか。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;对于で，虽然都可用，但最好用&lt;ruby&gt;何&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なに&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; で。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;そうですか&lt;br /&gt;
 “是吗”。句尾降调表示理解了所听到的信息，句尾升调表示对对方内容有疑问。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;そうですね&lt;br /&gt;
 “好啊”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;じゃあ&lt;br /&gt;
 “那么”，接过对方的话。正式场合用では。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;寒暄语&lt;br /&gt;
 (1) 失礼します　&lt;br /&gt;
“打搅了”“告辞了”。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;(2) いってらっしゃい　いってまいります / いってきます&lt;br /&gt;
以还要返回该处为前提，要离开的人一般是 &amp;quot;いってまいります&amp;quot;（我走了），&amp;quot;いってきます&amp;quot; 是较为随便的说法，对方回答 “いってらっしゃい”，意为 “去吧”，其中含有盼望对方 “早点回来” 的心情。&lt;/p&gt;
&lt;p&gt;(3) ただいま　お帰りなさい&lt;br /&gt;
回到家或单位时，回来的人说 &amp;quot;ただいま&amp;quot;(我回来了)，在家或单位的人说 &amp;quot;お帰りなさい&amp;quot;(你回来啦)&lt;/p&gt;
&lt;p&gt;(4) いらっしゃいませ　かしこまりました&lt;br /&gt;
いらっしゃいませ 为店员对顾客说的寒暄语 “欢迎光临”。&lt;br /&gt;
かしこまりました 为店员对顾客使用，“明白了”。&lt;br /&gt;
いらっしゃい　语气较随便，用于欢迎朋友或亲近的人来家里做客。&lt;/p&gt;
&lt;p&gt;(5) すみません&lt;br /&gt;
除了表示 “对不起” 等道歉的意思外，还有向别人搭话时使用的 “请问” 的意思。&lt;/p&gt;
&lt;h1 id=&#34;第八课李さんは-日本語で-手紙てがみを-書かきます&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第八课李さんは-日本語で-手紙てがみを-書かきます&#34;&gt;#&lt;/a&gt; 第八课：李さんは　日本語で　&lt;ruby&gt;手紙&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;てがみ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　&lt;ruby&gt;書&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;か&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; きます&lt;/h1&gt;
&lt;h2 id=&#34;语法-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法-4&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;名工具で-动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名工具で-动&#34;&gt;#&lt;/a&gt; [名 (工具)] で　[动]&lt;/h3&gt;
&lt;p&gt;で　还可用于表示其他其他手段以及原材料。&lt;br /&gt;
eg: &lt;ruby&gt;何&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なに&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; で　うどんを　&lt;ruby&gt;作&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;つく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; りますか。 用什么做面条？&lt;/p&gt;
&lt;h3 id=&#34;名1人は-名2人に-名3物を-あげます&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名1人は-名2人に-名3物を-あげます&#34;&gt;#&lt;/a&gt; [名 1 (人)] は [名 2 (人)] に [名 3 (物)] を　あげます&lt;/h3&gt;
&lt;p&gt;あげます 相当于 “给”。1 给 2 某物。&lt;br /&gt;
用于：我 (也可以是我亲近的人) 给某人某物 以及 某人给某人某物。&lt;br /&gt;
eg: 私は　&lt;ruby&gt;小野&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おの&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; さん&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;に　&lt;ruby&gt;お&lt;rt&gt;&lt;/rt&gt;土産&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;みやげ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　あげます。 我送给小野女士礼物。&lt;br /&gt;
小野さんは　&lt;ruby&gt;森&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;もり&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; さん&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;に　チョコレートを　あげました。  小叶女士给了森先生巧克力。&lt;/p&gt;
&lt;p&gt;&lt;ruby&gt;母&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;はは&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　&lt;ruby&gt;長島&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ながしま&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; さんに　ワインを　あげました。    母亲送葡萄酒给长岛先生。 (母亲是自己人)&lt;/p&gt;
&lt;p&gt;注：别人给我 (或我亲近的人) 要用くれます。eg: 王さんは　私に　本を　くれます。&lt;/p&gt;
&lt;h3 id=&#34;名1人は-名2人に-名3物を-もらいます&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名1人は-名2人に-名3物を-もらいます&#34;&gt;#&lt;/a&gt; [名 1 (人)] は [名 2 (人)] に [名 3 (物)] を　もらいます&lt;/h3&gt;
&lt;p&gt;もらいます　相当于 “得到”。1 从 2 得到了某物。&lt;br /&gt;
用于：我 (或我亲近的人) 得到了某人的某物 以及 某人得到了某人的某物。 赠送者后可接に也可接から。&lt;br /&gt;
eg: 私は　小野さんに　&lt;ruby&gt;辞書&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じしょ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　もらいます。 我从小野女士那得到了一本词典。&lt;br /&gt;
森さんは　長島さんから　パンフレットを　もらいます。　森先生从长岛先生那得到了小册子。&lt;/p&gt;
&lt;p&gt;&lt;ruby&gt;弟&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おとうと&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　長島さんから　本を　もらいました。    弟弟从长岛先生那得到了一本书。&lt;/p&gt;
&lt;h3 id=&#34;名人に-会あいます&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名人に-会あいます&#34;&gt;#&lt;/a&gt; [名 (人)] に　&lt;ruby&gt;会&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;あ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; います&lt;/h3&gt;
&lt;p&gt;“见了某人”。见到的对象用助词に。&lt;/p&gt;
&lt;h3 id=&#34;よ&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#よ&#34;&gt;#&lt;/a&gt; よ&lt;/h3&gt;
&lt;p&gt;句尾升调，提醒对方注意其不知道的事。&lt;br /&gt;
eg: もう　帰りましたよ。&lt;/p&gt;
&lt;h3 id=&#34;もう&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#もう&#34;&gt;#&lt;/a&gt; もう&lt;/h3&gt;
&lt;p&gt;“已经”。&lt;/p&gt;
&lt;h2 id=&#34;表达-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达-4&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;x から　もらいます&lt;br /&gt;
从 x 接受 / 得到某物时，如果是从人得到，则可以に / から，如果是从&lt;ruby&gt;会社&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かいしゃ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;/&lt;ruby&gt; 学校&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;がっこう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 之类的组织或团体得到时，只能用から。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;あげます&lt;br /&gt;
送别人东西时，为了不给人强加于人的印象，可以用 &amp;quot;どうぞ&amp;quot;&amp;quot; どうですか &amp;quot; 比较适合。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;さっき / たった&lt;ruby&gt;今&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;いま&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;br /&gt;
 都表示离现在很近的过去，后续动词接过去式，如果说话人觉得离现在非常近，用 たった今 (刚刚)，稍前一点用 さっき (刚才)，这两种都是比较随便的说法，用于日常会话。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通讯手段&lt;br /&gt;
&lt;ruby&gt;電話&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;でんわ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;/ ファックス / メールを　もらいます。　收到电话 / 传真 / 邮件。&lt;br /&gt;
電話を　かけます / 電話します     打电话&lt;br /&gt;
ファックス / メール /&lt;ruby&gt; 手紙&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;てがみ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; を　&lt;ruby&gt;送&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; ります&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;    发传真 / 邮件 / 信&lt;br /&gt;
手紙を　&lt;ruby&gt;出&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;だ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; します&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;     寄信&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;お&lt;rt&gt;&lt;/rt&gt;願&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ねが&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; いします&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;br /&gt;
请求对方做某事时用 “名词 +(を)　お願いします”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;分&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;わ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; かりました&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;br /&gt;
 “明白了”，还可用于对对方说的话的承诺和应答。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;前にまえに　&lt;br /&gt;
表示时间，“以前”，其中に有时可不用。&lt;br /&gt;
eg: 前に　&lt;ruby&gt;田中&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;たなか&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; さん&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;に　メールを　もらいました。   以前收到过田中先生的电子邮件。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="课程学习" scheme="https://ei4869.github.io/miyano/categories/Course-Study/" />
        <category term="日语" scheme="https://ei4869.github.io/miyano/categories/Course-Study/Japanese/" />
        <category term="课程" scheme="https://ei4869.github.io/miyano/tags/%E8%AF%BE%E7%A8%8B/" />
        <updated>2025-03-03T09:49:00.000Z</updated>
    </entry>
    <entry>
        <id>https://ei4869.github.io/miyano/Scientific-Notes/Opening-Report/%E5%BC%80%E9%A2%98%E6%8A%A5%E5%91%8A-%E5%8F%82%E8%80%83%E8%AE%BA%E6%96%87(%E5%9B%9B)/</id>
        <title>开题报告-参考论文(四)</title>
        <link rel="alternate" href="https://ei4869.github.io/miyano/Scientific-Notes/Opening-Report/%E5%BC%80%E9%A2%98%E6%8A%A5%E5%91%8A-%E5%8F%82%E8%80%83%E8%AE%BA%E6%96%87(%E5%9B%9B)/"/>
        <content type="html">&lt;hr /&gt;
&lt;h1 id=&#34;observing-topotactic-phase-transformation-and-resistive-switching-behaviors-in-low-power-srcoox-memristor&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#observing-topotactic-phase-transformation-and-resistive-switching-behaviors-in-low-power-srcoox-memristor&#34;&gt;#&lt;/a&gt; Observing topotactic phase transformation and resistive switching behaviors in low power SrCoOx memristor&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;在低功耗 SrCoOx 忆阻器中观察拓扑相变与电阻切换行为&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;亮点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过原位透射电子显微镜（TEM）直接观察了 SrCoOx 的拓扑转变和电阻切换行为。&lt;/li&gt;
&lt;li&gt;Au/SrCoOx/Nb-STO 阻变存储器（RRAM）器件表现出优异的电学性能。&lt;/li&gt;
&lt;li&gt;在非原位分析中，TEM、高分辨率扫描透射电子显微镜（HR-STEM）图像和电子能量损失谱（EELS）证实纳米细丝由 P-SCO 组成。&lt;/li&gt;
&lt;li&gt;原位 TEM 实验结果验证了 SCO 的切换行为直接由电偏置引起。&lt;/li&gt;
&lt;li&gt;这项工作不仅制备了新型 RRAM 器件，还利用 TEM/STEM 分析了切换机制。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;In this study, we deposited SrCoOx (SCO) on a niobium-doped SrTiO3 substrate as the dielectric layer via pulsed laser deposition (PLD). The novel SCO device possesses excellent RRAM properties, high cycling endurance, a long data retention time, and uniform distributions of the high resistance state (HRS) and low resistance state (LRS) resistance and Set/Reset voltage. Furthermore, the switching mechanism was investigated by using transmission electron microscopy (TEM) and scanning transmission electron microscopy (STEM), which showed that the switching behavior resulted from the topotactic phase transformation. In addition, the whole switching process was observed through in situ TEM, and the results strengthened the findings of the ex situ experiment.&lt;br /&gt;
 在本研究中，我们通过脉冲激光沉积（PLD）技术将 SrCoOx（SCO）沉积在掺铌的 SrTiO3（Nb-STO）衬底上作为介电层。这种新型 SCO 器件展现出优异的阻变存储器（RRAM）特性，包括高循环耐久性、长数据保持时间以及高阻态（HRS）和低阻态（LRS）电阻与 Set/Reset 电压的均匀分布。此外，通过透射电子显微镜（TEM）和扫描透射电子显微镜（STEM）对开关机制进行了研究，结果表明开关行为源于拓扑相变。同时，通过原位 TEM 观察了整个开关过程，结果进一步验证了非原位实验的发现。&lt;/p&gt;
&lt;p&gt;According to previous literature, conducting filament theory is the most widely accepted theory to explain the switching mechanism. The formation/rupture of the filament will result in different resistance states of the device. When the filaments connect two electrodes, the device is in a LRS; in contrast, when the filament ruptures, it is known as a HRS.&lt;br /&gt;
 根据已有文献，导电细丝理论是解释开关机制最广泛接受的理论。细丝的形成 / 断裂会导致器件的不同电阻态。当细丝连接两个电极时，器件处于低阻态（LRS）；相反，当细丝断裂时，器件处于高阻态（HRS）。&lt;/p&gt;
&lt;p&gt;Based on the composition of the conducting filament, the switching behaviors can be distinguished as an electrochemical metallization mechanism (ECM) and a valence change mechanism (VCM). An ECM device is composed of an MIM in which one electrode is an inert metal (ex., Pt or Au) and the other electrode is an active metal (ex., Cu or Ag). On the other hand, the two electrodes of a VCM device are composed of an inert metal or an inactive conducting material. The reliability of a VCM-based device is generally higher than that of an ECM-based device because the diffusion coefficient of an active metal ion is large in the dielectric layer, where Ag+ and Cu2+ are estimated to be ≈ 10−13 cm2 s−1, which is likely to cause the hard breakdown of the device&lt;br /&gt;
 根据导电细丝的组成，开关行为可分为电化学金属化机制（ECM）和价态变化机制（VCM）。ECM 器件由金属 - 绝缘体 - 金属（MIM）结构组成，其中一个电极为惰性金属（如 Pt 或 Au），另一个电极为活性金属（如 Cu 或 Ag）。而 VCM 器件的两个电极均由惰性金属或不活泼导电材料组成。基于 VCM 的器件可靠性通常高于基于 ECM 的器件，因为活性金属离子在介电层中的扩散系数较大，例如 Ag + 和 Cu2 + 的扩散系数约为 10−13 cm2 s−1，这可能导致器件的硬击穿。&lt;/p&gt;
&lt;p&gt;many transition metal oxides used for VCM-based RRAM dielectric materials have been broadly studied, such as HfO2, TiO2, Ta2O5, etc.. Because of the diffusion of the oxygen vacancies, the transition metal oxides will become oxygen nonstoichiometric, which leads to the setting of the devices. More recently, complex oxides, such as SrFeOx, SrTiO3, and La2/3Sr1/3MnO3, have also drawn great attention in RRAM applications. When the oxygen ions diffuse, the structure of the complex oxides will transform between brownmillerite and perovskite, where brownmillerite is generally insulating and perovskite is conducting, and this transformation is the so-called topotactic phase transformation&lt;br /&gt;
 许多用于 VCM 基 RRAM 介电材料的过渡金属氧化物已被广泛研究，如 HfO2、TiO2、Ta2O5 等。由于氧空位的扩散，过渡金属氧化物会变成非化学计量比的氧化物，从而导致器件的设置。近年来，复杂氧化物如 SrFeOx、SrTiO3 和 La2/3Sr1/3MnO3 在 RRAM 应用中也引起了广泛关注。当氧离子扩散时，复杂氧化物的结构会在钙铁石（brownmillerite）和钙钛矿（perovskite）之间发生转变，其中钙铁石通常为绝缘态，而钙钛矿为导电态，这种转变被称为拓扑相变。&lt;/p&gt;
&lt;p&gt;BM-SCO stacks with alternating octahedral CoO6 and tetrahedral CoO4 layers, which will result in the insulating property of BM-SCO; however, P–SCO stacks with octahedral CoO6 layers, which makes the electrical and magnetic properties of P–SCO and BM-SCO different&lt;br /&gt;
 钙铁石结构的 SCO（BM-SCO）由交替的八面体 CoO6 层和四面体 CoO4 层堆叠而成，这导致 BM-SCO 具有绝缘性；而钙钛矿结构的 SCO（P-SCO）由八面体 CoO6 层堆叠而成，这使得 P-SCO 和 BM-SCO 的电学和磁学性质有所不同。&lt;/p&gt;
&lt;p&gt;In this work, a complex oxide SrCoOx (SCO) was introduced as the dielectric layer, which was deposited on a niobium-doped SrTiO3 (Nb-STO) substrate with Au as the inert top electrode to produce Au/SCO/Nb-STO RRAM devices. The SCO devices possessed very uniform RRAM properties and high reliability. In addition, the topotactic phase transformation phenomenon and formation/rupture of the conducting filaments were investigated by high-resolution (HR) TEM/STEM images, an energy dispersive spectrometer (EDS) and electron energy loss spectroscopy (EELS) after the electrical measurements in the atmosphere. Furthermore, the behavior of the topotactic phase transformation from BM-SCO to P–SCO was directly observed by in situ TEM, which operated in a high vacuum environment.&lt;br /&gt;
 在本工作中，我们引入复杂氧化物 SrCoOx（SCO）作为介电层，并将其沉积在掺铌的 SrTiO3（Nb-STO）衬底上，以 Au 作为惰性顶电极，制备了 Au/SCO/Nb-STO RRAM 器件。SCO 器件表现出非常均匀的 RRAM 特性和高可靠性。此外，通过高分辨率（HR）TEM/STEM 图像、能谱仪（EDS）和电子能量损失谱（EELS）在电学测量后对拓扑相变现象和导电细丝的形成 / 断裂进行了研究。同时，通过原位 TEM 在高真空环境下直接观察了从 BM-SCO 到 P-SCO 的拓扑相变行为。&lt;/p&gt;
&lt;p&gt;The SCO thin film was deposited on the Nb-STO(001) substrate. Fig. 1(a) shows the cross-sectional TEM image of the Au/SCO/Nb-STO devices, which demonstrates the good contact of the SCO/Nb-STO interface&lt;br /&gt;
SCO 薄膜沉积在 Nb-STO (001) 衬底上。图 1 (a) 展示了 Au/SCO/Nb-STO 器件的横截面 TEM 图像，显示出 SCO/Nb-STO 界面的良好接触。&lt;/p&gt;
&lt;p&gt;The schematic diagram of the device is shown in Fig. 1(b). When we applied the positive bias to the Au top-electrodes and grounded the Nb-STO bottom-electrodes, the current progressed from the Au top-electrode to the Nb-STO bottom-electrode during the Forming process. An atomic force microscope (AFM) was used to investigate the SCO surface morphology. Because the surface morphology of the dielectric layer will affect the RRAM properties, a smoother surface will lead to uniform electrical properties. As shown in Fig. 1(c), the AFM image shows that SCO exhibit the very smooth surface; therefore, the devices could be expected to possess great RRAM properties. Fig. 1(d) shows the XRD spectra of Au/SCO/Nb-STO devices, revealing the components by the (080) diffraction peak of BM-SCO and the (200) peak of Nb-STO. In addition, the distances between the Nb-STO peaks were constant, indicating that the Nb-STO substrate is a single crystal, while the other peak (042) of BM-SCO that was observed indicated that BM-SCO is polycrystalline. The inconsistency of the XRD and TEM result is observed because the TEM sample may be damaged by an ion beam during preparation. According to the XRD analysis, we confirmed that the dielectric layer is composed of SrCoO2.5 (BM-SCO) and it is polycrystalline.&lt;br /&gt;
 该装置的示意图如图 1 (b) 所示。当我们在 Au 顶部电极施加正偏压并将 Nb-STO 底部电极接地时，在形成过程中电流从 Au 顶部电极流向 Nb-STO 底部电极。使用原子力显微镜（AFM）研究了 SCO 的表面形貌。由于介电层的表面形貌会影响 RRAM 的性能，更光滑的表面将导致均匀的电性能。如图 1 (c) 所示，AFM 图像显示 SCO 表面非常光滑；因此，可以预期该器件具有良好的 RRAM 性能。图 1 (d) 显示了 Au/SCO/Nb-STO 器件的 XRD 光谱，通过 BM-SCO 的 (080) 衍射峰和 Nb-STO 的 (200) 峰揭示了其组成。此外，Nb-STO 峰之间的距离是恒定的，表明 Nb-STO 基底是单晶，而观察到的 BM-SCO 的另一个峰 (042) 表明 BM-SCO 是多晶的。由于 TEM 样品在制备过程中可能受到离子束的损伤，因此观察到 XRD 和 TEM 结果的不一致性。根据 XRD 分析，我们确认介电层由 SrCoO2.5（BM-SCO）组成，并且它是多晶的。&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//open-report/1-s2.0-S2211285520302408-gr1_lrg.jpg&#34; title=&#34;Au/SCO/Nb-STO RRAM器件结构的基本识别及SCO介电层的分析。(a) 初始器件的横截面TEM图像。插入部分为SCO的FFT-DP。(b) 器件示意图。偏压施加于Au电极，Nb-STO电极接地。(c) SCO的AFM分析，显示出非常光滑的表面。(d) SCO薄膜的XRD结果，表明其结构为多晶。&#34; style=&#34;max-width: 80%; height: auto;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The SCO exhibits a unique bipolar resistive switching behavior, as shown in Fig. 2(a); the orange, red and blue current-voltage (I–V) curves representing the Forming voltage, the average of the first 100 cycles measurements, and the last 100 cycles, respectively. A positive bias was applied to the Au electrode with a compliance current of 20 mA in order to prevent the devices from experiencing an electrical breakdown. The Forming voltage was 12.5 V. At the beginning of the Forming process, the devices were in a HRS, there were no filaments in the BM-SCO dielectric layer, and the BM-SCO was polycrystalline. In Fig. 2(a), the current of forming process is “gradually” increased until the current suddenly increased at the 12.5 V and form the filaments, which switched the devices into a LRS. From the aspect of materials science, the resistance of single crystal is generally lower than the polycrystalline. And this result expected that the crystallinity of BM-SCO is enhanced. In the first 100 cycles measurements (red curve), because of the negative bias (−4.5 V) applied to the Au top-electrode when we switched the devices back to a HRS, which is called the “Reset”, the filaments were broken, and the resistance increased from 1.57 × 104 Ω to 8.72 × 107 Ω; additionally, because there were residual filaments in the BM-SCO dielectric layer, the device did not need such a high voltage to “Set’ the device from a HRS into a LRS, and the required Set voltage was only 1 V. After the 100 cycle measurements (blue curve), the I–V curves of the Au/SCO/Nb-STO devices were slightly different, the Reset voltage increased from −4.5 V to −5.5 V, and the LRS resistance decreased from 2.48 × 105 Ω to 3.70 × 104 Ω. Because the conducting filaments became stronger and more stable during the repeated measurements, the LRS resistance is lower, and the devices need higher energy (Reset voltage) to break off the filaments.&lt;br /&gt;
SCO 表现出独特的双极电阻切换行为，如图 2 (a) 所示；橙色、红色和蓝色的电流 - 电压（I-V）曲线分别代表形成电压、前 100 次测量的平均值和最后 100 次测量。为了防止器件发生电击穿，在 Au 电极上施加了 20 mA 的限流正偏压。形成电压为 12.5 V。在形成过程开始时，器件处于高阻态（HRS），BM-SCO 介电层中没有导电丝，BM-SCO 是多晶的。在图 2 (a) 中，形成过程的电流 “逐渐” 增加，直到电流在 12.5 V 时突然增加并形成导电丝，将器件切换到低阻态（LRS）。从材料科学的角度来看，单晶的电阻通常低于多晶。这一结果预期 BM-SCO 的结晶度会增强。在前 100 次测量（红色曲线）中，由于在将器件切换回高阻态（称为 “复位”）时在 Au 顶部电极上施加了负偏压（-4.5 V），导电丝断裂，电阻从 1.57 × 10^4 Ω 增加到 8.72 × 10^7 Ω；此外，由于 BM-SCO 介电层中存在残留的导电丝，器件不需要如此高的电压来将器件从高阻态 “设置” 到低阻态，所需的设置电压仅为 1 V。在 100 次测量后（蓝色曲线），Au/SCO/Nb-STO 器件的 I-V 曲线略有不同，复位电压从 - 4.5 V 增加到 - 5.5 V，低阻态电阻从 2.48 × 10^5 Ω 降低到 3.70 × 10^4 Ω。由于在重复测量过程中导电丝变得更加强大和稳定，低阻态电阻降低，器件需要更高的能量（复位电压）来断开导电丝。&lt;/p&gt;
&lt;p&gt;However, in order to show the completed voltage sweep, the operation voltage was higher in Fig. 2(a), and the following discussion was focused on the larger measurement range. Fig. 2(b) shows the retention test of the Au/SCO/Nb-STO device: the retention time was 104 s, exhibiting the nonvolatile characteristic of SCO devices when the read voltage was 0.2 V. As time passed, the resistance of the LRS would slightly increase at 103 s. Furthermore, the HRS/LRS ratio was more than 103 and remained stable without obvious degradation over 104 s, showing that the Au/SCO/Nb-STO devices were highly reliable. The cumulative probability of the LRS and HRS is shown in Fig. 2(c), where the read voltages were both 0.1 V. The ratio of the HRS/LRS fluctuated very little (103) during the whole cycling measurements, and the distributions of the LRS and HRS fluctuated little. The LRS ranged from 104 to 106 Ω, and the HRS ranged from 107 to 109 Ω. Fig. 2(d) shows the cumulative probability of the Set and Reset voltages in our devices. Both voltage distributions were narrow due to the very smooth surface of SCO, as mentioned above. The Set voltage was 1 V, and the Reset voltages were −4.5 V and −5.5 V, where −4.5 V was obtained for the first 100 cycles and −5.5 V was obtained in the last 100 cycles. In Fig. 2(e and f), The SCO devices exhibited the great device-to-device stability, the ON/OFF ratio kept above 103 and the SET/RESET voltage were approximately at 1/-4.5 V under the measurement of 20 devices. Moreover, the HRS/LRS of the bipolar resistance switching exhibited a very uniform distribution over more than 700 cycles, as shown in Figs. S5(a and b). These results indicated that SCO was an excellent RRAM dielectric layer, which demonstrated its great endurance, long retention time, and high stability. In Fig. S5(c), even if the devices have been placed in atmosphere for more than a year, The SET, REST and ON/OFF ratio are similar with the original devices;&lt;br /&gt;
 然而，为了显示完整的电压扫描，图 2 (a) 中的操作电压较高，接下来的讨论集中在更大的测量范围上。图 2 (b) 显示了 Au/SCO/Nb-STO 器件的保持测试：保持时间为 10&lt;sup&gt;4&lt;/sup&gt;秒，当读取电压为 0.2 V 时，表现出 SCO 器件的非挥发性特性。随着时间的推移，低阻态的电阻在 10&lt;sup&gt;3&lt;/sup&gt;秒时会略微增加。此外，高阻态 / 低阻态比率超过 10&lt;sup&gt;3&lt;/sup&gt;，并且在 10&lt;sup&gt;4&lt;/sup&gt;秒内保持稳定，没有明显的退化，表明 Au/SCO/Nb-STO 器件具有高度的可靠性。图 2 (c) 显示了低阻态和高阻态的累积概率，读取电压均为 0.1 V。在整个循环测量过程中，高阻态 / 低阻态比率的波动非常小（10&lt;sup&gt;3&lt;/sup&gt;），低阻态和高阻态的分布波动也很小。低阻态范围在 10&lt;sup&gt;4&lt;/sup&gt;到 10&lt;sup&gt;6&lt;/sup&gt; Ω 之间，高阻态范围在 10&lt;sup&gt;7&lt;/sup&gt;到 10&lt;sup&gt;9&lt;/sup&gt; Ω 之间。图 2 (d) 显示了我们器件中设置和复位电压的累积概率。由于 SCO 表面非常光滑，两种电压分布都很窄。设置电压为 1 V，复位电压为 - 4.5 V 和 - 5.5 V，其中 - 4.5 V 是在前 100 次测量中获得的，-5.5 V 是在最后 100 次测量中获得的。在图 2 (e 和 f) 中，SCO 器件表现出极好的器件间稳定性，在 20 个器件的测量中，ON/OFF 比率保持在 10&lt;sup&gt;3&lt;/sup&gt;以上，SET/RESET 电压大约在 1/-4.5 V。此外，双极电阻切换的高阻态 / 低阻态在超过 700 次循环中表现出非常均匀的分布，如图 S5 (a 和 b) 所示。这些结果表明 SCO 是一种优秀的 RRAM 介电层，展示了其出色的耐久性、长保持时间和高稳定性。在图 S5 (c) 中，即使器件在大气中放置了一年多，SET、REST 和 ON/OFF 比率与原始器件相似；&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//open-report/1-s2.0-S2211285520302408-gr2_lrg.jpg&#34; title=&#34;Au/SCO/Nb-STO器件的系列电学测量结果。(a) 电阻开关行为的电学测量显示了典型的形成（Forming）、置位（Set）和复位（Reset）过程。红色和蓝色曲线分别表示前100次和最后100次循环测试。(b) 器件的保持特性测量。(c) 电阻的累积概率分布。高阻态（HRS）与低阻态（LRS）的比值高达10³。(d) 置位/复位电压的累积概率分布。(e) 器件间的高阻态/低阻态电阻。(f) 器件间的置位/复位电压。&#34; style=&#34;max-width: 80%; height: auto;&#34;&gt;&lt;/p&gt;
&lt;p&gt;In the series of electrical measurements shown in Fig. 2, the Au/SCO/Nb-STO RRAM devices exhibited excellent switching characteristics. To figure out the switching mechanism, we investigated the filament on the nanoscale via TEM. As we discussed in Fig. 2(a), the electrical properties different between the first and the last 100 cycles were due to the filaments size. Comparing with Fig. S8(a) and (c-e), the TEM images shows that the density of nanofilaments in SCO also increased after cycles measurement. In addition, the nanofilaments size also increased that the former and later are range from 30 to 45 nm and 54–400 nm, respectively. It verifies our previous assumption, the filaments size would grow with the measurement times and affect the resistance of the device. Furthermore, we kept the device in a LRS and observed that there was more than one nanofilament form in the dielectric layer, as shown in Figs. S7(c–e); moreover, the chemical composition of the nanofilament is shown in Fig. 3(a). Compared to the initial device, there were some dark contrast areas that appeared in the dielectric layer, which indicated that the structure of the BM-SCO had changed. According to Fig. 3(b), the dark contrast area was composed of P–SCO with relatively low resistance, and the d-spacing of the P–SCO (011) plane was 0.269 nm, corresponding to the theoretical value (0.271 nm). It is worth noting that the other area remained BM-SCO, but the crystallinity increased. BM-SCO was polycrystalline at first and transformed to a single crystal after the bias was applied to the device, where the d-spacing of the BM-SCO (021) plane was 0.458 nm, corresponding to the theoretical value (0.455 nm). Therefore, the Forming process requires relatively high voltage to change the crystallinity of BM-SCO. When the devices were Reset and retained in the HRS, the P–SCO conducting nanofilaments were ruptured, as shown in Fig. 3(c). The P–SCO nanofilament was ruptured in half in the dielectric layer with trapezoidal shape, and the remaining part connected to the Nb-STO electrode. According to Fig. 3(d), after the Reset process, part of the P–SCO transformed back to BM-SCO, which increased the resistance of the device. On the other hand, the residual P–SCO nanofilament would not only slightly decrease the resistance of device (the initial state and the HRS after repeated measurements were 4.88 × 108 and 8.72 × 107 Ω, respectively) but also decrease the Set voltage, as mentioned above. Further, the STEM image also showed the detailed information about the nanofilament, as shown in Fig. 3(e and f).&lt;br /&gt;
 在图 2 所示的系列电学测量中，Au/SCO/Nb-STO RRAM 器件表现出优异的开关特性。为了探究其开关机制，我们通过透射电子显微镜（TEM）在纳米尺度上研究了导电细丝。正如我们在图 2 (a) 中讨论的，前 100 次循环与最后 100 次循环之间电学性能的差异源于导电细丝的尺寸变化。与图 S8 (a) 和 (c-e) 相比，TEM 图像显示，经过多次循环测量后，SCO 中的纳米细丝密度也有所增加。此外，纳米细丝的尺寸也增大了，前期的尺寸范围在 30 至 45 纳米之间，后期则扩大至 54 至 400 纳米。这验证了我们之前的假设，即导电细丝的尺寸会随着测量次数的增加而增长，并影响器件的电阻。进一步，我们将器件保持在低阻态（LRS），并观察到在介质层中形成了不止一条纳米细丝，如图 S7 (c-e) 所示；同时，图 3 (a) 展示了纳米细丝的化学成分。与初始器件相比，介质层中出现了一些暗对比区域，表明 BM-SCO 的结构发生了变化。根据图 3 (b)，暗对比区域由电阻相对较低的 P-SCO 组成，且 P-SCO (011) 晶面的 d 间距为 0.269 纳米，与理论值（0.271 纳米）相符。值得注意的是，其他区域仍为 BM-SCO，但结晶度有所提高。BM-SCO 最初为多晶态，在施加偏压后转变为单晶态，其中 BM-SCO (021) 晶面的 d 间距为 0.458 纳米，与理论值（0.455 纳米）一致。因此，形成过程需要较高的电压来改变 BM-SCO 的结晶度。当器件被复位并保持在高阻态（HRS）时，P-SCO 导电纳米细丝断裂，如图 3 (c) 所示。P-SCO 纳米细丝在介质层中呈梯形断裂为两半，剩余部分连接到 Nb-STO 电极。根据图 3 (d)，复位过程后，部分 P-SCO 重新转变为 BM-SCO，从而增加了器件的电阻。另一方面，残留的 P-SCO 纳米细丝不仅会略微降低器件的电阻（初始状态和多次测量后的 HRS 电阻分别为 4.88 × 10^8 Ω 和 8.72 × 10^7 Ω），还会降低设定电压，如上所述。此外，STEM 图像还提供了纳米细丝的详细信息，如图 3 (e-f) 所示。&lt;/p&gt;
&lt;p&gt;and verified that the nanofilaments were composed of P–SCO (SrCoO3). From Fig. 3(a–g), we confirmed that the switching behavior of Au/SCO/Nb-STO RRAM device was resulted from the topotactic phase transformation of the SCO; in other words, the formation and rupture of P–SCO will determine the resistance state of a device. In addition, in order to verify the topotactic phase transformation, a new HR-TEM image of interface of BM-SCO and substrate has been provided in Fig. S8. In Fig. S8, the BM-SCO shows highly crystallized relationship with the substrate, which demonstrated that the BM-SCO could transform to P–SCO nanofilaments topotactically through the oxygen ions diffusion.&lt;br /&gt;
 并验证了纳米细丝由 P-SCO（SrCoO3）组成。从图 3 (a-g) 中，我们确认了 Au/SCO/Nb-STO RRAM 器件的开关行为源于 SCO 的拓扑相变；换言之，P-SCO 的形成与断裂决定了器件的电阻状态。此外，为了验证拓扑相变，图 S8 提供了 BM-SCO 与基底界面的新 HR-TEM 图像。在图 S8 中，BM-SCO 与基底显示出高度结晶的关系，这表明 BM-SCO 可以通过氧离子扩散拓扑地转变为 P-SCO 纳米细丝。&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//open-report/1-s2.0-S2211285520302408-gr3_lrg.jpg&#34; title=&#34;在施加偏压后，对Au/SCO/Nb-STO器件进行了非原位TEM/STEM观察和EELS分析，并探讨了其开关机制。(a) 器件处于低阻态(LRS)。(b) 蓝色和紫色框分别为与(a)对应的P-SCO纳米线和BM-SCO的高分辨透射电镜(HR-TEM)图像。(c) 器件处于高阻态(HRS)。(d) 绿色和蓝色框分别为与(c)对应的残余P-SCO纳米线和BM-SCO断裂区域的HR-TEM图像。(e) 纳米线区域的STEM图像。(f) P-SCO纳米线与STO电极界面的高分辨STEM(HR-STEM)图像。(g) 纳米线区域的Co L边EELS谱。(h) BM-SCO与P-SCO之间拓扑相变示意图。&#34; style=&#34;max-width: 80%; height: auto;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Fig. 3(h) is the schematic diagram of the topotactic phase transformation behavior of BM-SCO and P–SCO. BM-SCO is formed by the alternate stacking of fully oxygenated octahedral and oxygen-deficient tetrahedral sublayers; in contrast, P–SCO is formed by the stacking of layers that are all fully oxygenated octahedral layers. Since the positive bias that we applied to Au and Nb-STO was grounded, the oxygen ions would occupy the oxygen vacancies in the tetrahedral layers and then transform to fully oxygenated octahedral layers to form the P–SCO filaments. Then, when we applied the negative bias to Au, the oxygen ions would migrate toward the Nb-STO substrate due to the electric field, contributing to the fully oxygenated layer transforming back to an oxygen-deficient layer and rupturing the P–SCO filaments. Hence, the oxygen ions play an important role in our Au/SCO/Nb-STO RRAM devices. In addition, by inserting and releasing the oxygen ions in SCO, the topotactic phase transformation can be reversibly completed without breaking the lattice architecture framework. It is worth mentioning that there were some trapezoidal nanofilaments with an opposite direction in Fig. 3(a) and Fig. S7(c)–(e). We considered that it is caused by the defect (ex. vacancies) in the Au/SCO interface affect the evolution of nanofilaments. Therefore, during the electrical measurement, some nanofilaments may easier to generate at the Au/SCO interface, resulted in the opposite side trapezoidal nanofilaments in the TEM images.&lt;br /&gt;
 图 3 (h) 展示了 BM-SCO 与 P-SCO 拓扑相变行为的示意图。BM-SCO 由完全氧化的八面体层和缺氧的四面体层交替堆叠而成；而 P-SCO 则由完全氧化的八面体层堆叠而成。由于我们施加到 Au 和 Nb-STO 的偏压为正，氧离子会占据四面体层中的氧空位，然后转变为完全氧化的八面体层，形成 P-SCO 细丝。随后，当我们在 Au 上施加负偏压时，氧离子会在电场作用下向 Nb-STO 基底迁移，导致完全氧化层重新转变为缺氧层，并断裂 P-SCO 细丝。因此，氧离子在 Au/SCO/Nb-STO RRAM 器件中起着重要作用。此外，通过在 SCO 中插入和释放氧离子，拓扑相变可以在不破坏晶格结构框架的情况下可逆地完成。值得一提的是，图 3 (a) 和图 S7 (c-e) 中出现了一些方向相反的梯形纳米细丝。我们认为这是由于 Au/SCO 界面处的缺陷（如空位）影响了纳米细丝的演化。因此，在电学测量过程中，一些纳米细丝可能更容易在 Au/SCO 界面处生成，导致 TEM 图像中出现相反方向的梯形纳米细丝。&lt;/p&gt;
&lt;p&gt;At the beginning of the experiment, the structure of the BM-SCO was amorphous because of the ion damage by the FIB, and the device was in a HRS where the resistance was approximately 5 × 108 Ω, as shown in Fig. 4(a).&lt;br /&gt;
 实验开始时，由于聚焦离子束（FIB）的离子损伤，BM-SCO 的结构为无定形态，器件处于 HRS，电阻约为 5 × 10^8 Ω，如图 4 (a) 所示。&lt;/p&gt;
&lt;p&gt;we also observed the white particles emerged in the SCO, and they were composed of the Au. Because the Au content is very little, we believe that these white particles wouldn&#39;t affect the electrical properties of devices, because the discontinuous distribution of particle and very little content of Au Afterward, the positive bias was applied to the Au. There was no structural change at first, and only the expansion of the nitride membrane caused a different contrast on the substrate; however, when the voltage increased to 7.9 V, the SCO structure suddenly transformed, as shown in Fig. 4(b)&lt;br /&gt;
 我们还在 SCO 中观察到了白色颗粒的出现，这些颗粒由金（Au）组成。由于金的含量非常少，我们认为这些白色颗粒不会影响器件的电学性能，因为颗粒的分布不连续且金的含量极低。随后，我们对 Au 施加了正偏压。起初没有发生结构变化，仅仅是氮化物膜的膨胀导致了基底上的对比度差异；然而，当电压增加到 7.9 V 时，SCO 结构突然发生了转变，如图 4 (b) 所示。&lt;/p&gt;
&lt;p&gt;The corresponding electrical properties of the in situ device are shown in Fig. 4(c), where the current also dramatically increased at 7.9 V and the resistance decreased to 3.04 × 106 Ω at 7.9 V. The current of the in situ electrical measurement is sharper than the ex situ, we considered that it is due to the oxygen pressure.&lt;br /&gt;
 相应的原位器件的电学特性如图 4 (c) 所示，电流在 7.9 V 时也急剧增加，电阻在 7.9 V 时降至 3.04 × 10^6 Ω。原位电学测量的电流比非原位的更尖锐，我们认为这是由于氧气压力的影响。&lt;/p&gt;
&lt;p&gt;Fig. 4(d–f) exhibit the HR-TEM images of the dielectric layer after the in situ electrical measurement. Fig. 4(d) demonstrates the single crystal of BM-SCO, and it confirms that some energy was required to rearrange the polycrystalline BM-SCO into single crystal. In addition, we directly observed the transformation of SCO from BM-SCO to P–SCO as nanofilaments, as shown in Fig. 4(e and f), which verified the switching mechanism of the Au/SCO/Nb-STO RRAM device.&lt;br /&gt;
 图 4 (d–f) 展示了原位电学测量后介电层的高分辨透射电子显微镜（HR-TEM）图像。图 4 (d) 显示了 BM-SCO 的单晶结构，证实了将多晶 BM-SCO 重排为单晶需要一定的能量。此外，我们直接观察到了 SCO 从 BM-SCO 向 P-SCO 转变的纳米丝，如图 4 (e 和 f) 所示，这验证了 Au/SCO/Nb-STO RRAM 器件的开关机制。&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//open-report/1-s2.0-S2211285520302408-gr4_lrg.jpg&#34; title=&#34;原位透射电子显微镜（TEM）观察到的RRAM的拓扑相变和开关现象。(a) 器件的初始状态，SCO（切换氧化层）呈现非晶态。(b) 当对Au施加正向偏压至7.9 V后，SCO结构发生了转变。红色框标出了P-SCO（极化SCO）细丝区域。(c) 通过TEM获取的Forming过程的相应I-V测量结果。(d)-(f) 介电层的高分辨TEM图像，显示P-SCO纳米细丝形成，且BM-SCO（基底材料SCO）结构转变为单晶。&#34; style=&#34;max-width: 80%; height: auto;&#34;&gt;&lt;/p&gt;
&lt;p&gt;It is remarkable that the device couldn&#39;t RESET in this experiment, because the ion concentration is significantly low due to thinner sample as well as the high vacuum system, resulting in difficulty for rupturing the nanofilaments to complete the in situ RESET. On the other hand, the SET process in the in situ experiment caused the irreversible resistive change and hard electrical breakdown&lt;br /&gt;
 值得注意的是，在本实验中，器件无法实现 RESET，因为样品较薄以及高真空系统导致离子浓度显著降低，使得纳米丝难以断裂以完成原位 RESET。另一方面，原位实验中的 SET 过程导致了不可逆的电阻变化和硬电击穿。&lt;/p&gt;
&lt;p&gt;We demonstrated the conducting nanofilament formation process of the Au/SCO/Nb-STO RRAM devices in our case. The switching process could be simplified into four steps. First, in the initial state of the device, without applying bias, the BM-SCO exhibited a polycrystalline structure and was uniformly distributed without P–SCO, as illustrated in Fig. 5(a). Second, during the Forming process, as the positive bias was applied to the Au top-electrode, the structure of the BM-SCO would be rearranged into a single crystal, as illustrated in Fig. 5(b). In addition, the electric field induced the migration of oxygen ions from the Nb-STO surface to the top-electrode and occupied the oxygen-deficient layer in the BM-SCO, thus generating the P–SCO conducting path. Third, in Fig. 5(c), when the negative bias was applied to the Au, the nanofilaments ruptured from top to bottom since the oxygen ions would be excluded from the top to bottom electrodes until the devices were in HRSs. The ruptured nanofilament region near the top electrode transformed back to BM-SCO, which alternately stacks fully oxygenated octahedral and oxygen-deficient tetrahedral sublayers. Finally, as shown through the series of electrical measurements, the P–SCO nanofilaments would become stronger than those observed in the previous measurement, as illustrated in Fig. 5(d). Therefore, the resistance in the LRS was lower. The device required a higher voltage to exclude more oxygen ions, which switched the devices back to a HRS.&lt;br /&gt;
 我们展示了 Au/SCO/Nb-STO RRAM 器件中导电纳米丝的形成过程。开关过程可以简化为四个步骤。首先，在器件的初始状态下，未施加偏压时，BM-SCO 呈现多晶结构并均匀分布，没有 P-SCO，如图 5 (a) 所示。其次，在形成过程中，当对 Au 顶电极施加正偏压时，BM-SCO 的结构将重排为单晶，如图 5 (b) 所示。此外，电场诱导氧离子从 Nb-STO 表面迁移到顶电极，并占据 BM-SCO 中的缺氧层，从而形成 P-SCO 导电路径。第三，如图 5 (c) 所示，当对 Au 施加负偏压时，纳米丝从上到下断裂，因为氧离子将从顶电极被排除到底电极，直到器件处于高阻态（HRS）。靠近顶电极的断裂纳米丝区域转变回 BM-SCO，其交替堆叠完全氧化的八面体和缺氧的四面体亚层。最后，如图 5 (d) 所示，通过一系列电学测量，P-SCO 纳米丝将变得比之前测量中观察到的更强。因此，低阻态（LRS）中的电阻更低。器件需要更高的电压以排除更多的氧离子，从而使器件切换回高阻态。&lt;br /&gt;
&lt;img loading=&#34;lazy&#34; loading=&#34;lazy&#34; data-src=&#34;/miyano/img/post//open-report/1-s2.0-S2211285520302408-gr5_lrg.jpg&#34; title=&#34;电阻开关过程的示意图，包括形成（Forming）、复位（Reset）和设置（Set）过程。八面体层和四面体层分别用蓝色正方形和红色三角形表示。(a) 器件的初始状态。(b) 形成过程后，由于氧离子的向外扩散，氧空位被填充，随后形成纳米细丝。(c) 当施加反向偏压时，氧离子在电场作用下向基板移动，导致纳米细丝断裂。(d) 将器件再次设置为低电阻状态（LRS）后，纳米细丝可能比之前更强。&#34; style=&#34;max-width: 80%; height: auto;&#34;&gt;&lt;/p&gt;
&lt;p&gt;In summary, the asymmetric Au/SCO/Nb-STO RRAM devices with an atomically uniform thickness exhibited bipolar switching characteristics and also possessed highly endurable and excellent stability. The electrical measurement results of the polycrystalline-SCO demonstrated that the Set and Reset voltages had narrow distributions, the retention time reached more than 104 s, and the ON/OFF ratio was as high as 103. We further investigated and analyzed the switching behavior and the composition of the conducting nanofilaments by using ex situ and in situ TEM. The TEM/STEM images of the ex situ sample indicate that the nanofilaments are composed of P–SCO, and the rupture and formation lead to switching the devices between a HRS and a LRS. The switching mechanism is that the oxygen-deficient tetrahedral layer of BM-SCO could be occupied by oxygen ions and then transformed into a fully oxygenated octahedral layer of P–SCO as conducting nanofilaments. In addition, we successfully observed the evolution of the P–SCO nanofilaments, the topotactic transform of its crystallinity, and the rearrangement of the BM-SCO structure through in situ TEM. In the high vacuum environment, the oxygen resource comes from the Nb-STO substrate, which provides the oxygen ions for the transformation of SCO.&lt;br /&gt;
 总之，具有原子级均匀厚度的非对称 Au/SCO/Nb-STO RRAM 器件表现出双极开关特性，并且具有高度的耐久性和优异的稳定性。多晶 SCO 的电学测量结果表明，Set 和 Reset 电压分布较窄，保持时间超过 10^4 s，开关比高达 10^3。我们通过非原位和原位 TEM 进一步研究和分析了开关行为和导电纳米丝的组成。非原位样品的 TEM/STEM 图像表明，纳米丝由 P-SCO 组成，其断裂和形成导致器件在高阻态和低阻态之间切换。开关机制是 BM-SCO 的缺氧四面体层可以被氧离子占据，然后转变为完全氧化的八面体层 P-SCO，形成导电纳米丝。此外，我们通过原位 TEM 成功观察到了 P-SCO 纳米丝的演变、其结晶度的拓扑转变以及 BM-SCO 结构的重排。在高真空环境中，氧源来自 Nb-STO 基底，为 SCO 的转变提供了氧离子。&lt;/p&gt;
&lt;p&gt;The 25 nm polycrystalline brownmillerite SrCoO2.5 thin films were grown with pulsed laser deposition (PLD) using a KrF excimer laser (λ = 248 nm) on a 10 × 10 mm2 0.5 wt% Nb-doped SrTiO3 substrate at a temperature of 650 °C and a pressure of 100 mTorr, and the target is bulk SrCoO2.5. Then, a 130-nm-thick Au top electrode was deposited on the SCO via an electron beam evaporation system (E-gun). The devices were defined as having a top electrode 200 μm in diameter through a shadow mask.&lt;br /&gt;
25 nm 厚的多晶布朗米勒石 SrCoO2.5 薄膜是通过脉冲激光沉积（PLD）在 10 × 10 mm² 的 0.5 wt% Nb 掺杂 SrTiO3 基底上生长的，使用 KrF 准分子激光器（λ = 248 nm），温度为 650 °C，压力为 100 mTorr，靶材为块体 SrCoO2.5。然后，通过电子束蒸发系统（E-gun）在 SCO 上沉积了 130 nm 厚的 Au 顶电极。器件通过阴影掩模定义为直径为 200 μm 的顶电极。&lt;/p&gt;
</content>
        <category term="科研笔记" scheme="https://ei4869.github.io/miyano/categories/Scientific-Notes/" />
        <category term="开题报告" scheme="https://ei4869.github.io/miyano/categories/Scientific-Notes/Opening-Report/" />
        <category term="毕设" scheme="https://ei4869.github.io/miyano/tags/%E6%AF%95%E8%AE%BE/" />
        <updated>2025-03-03T02:05:52.000Z</updated>
    </entry>
    <entry>
        <id>https://ei4869.github.io/miyano/Course-Study/Japanese/%E5%88%9D%E7%BA%A7%E4%B8%8A-%E7%AC%AC1%E5%8D%95%E5%85%83/</id>
        <title>单元一——小李赴日</title>
        <link rel="alternate" href="https://ei4869.github.io/miyano/Course-Study/Japanese/%E5%88%9D%E7%BA%A7%E4%B8%8A-%E7%AC%AC1%E5%8D%95%E5%85%83/"/>
        <content type="html">&lt;h1 id=&#34;第一课李りさんは-中国人ちゅうごくじん-です&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第一课李りさんは-中国人ちゅうごくじん-です&#34;&gt;#&lt;/a&gt; 第一课：&lt;ruby&gt;李&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;り&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; さんは　&lt;rt&gt;&lt;/rt&gt;中国人&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ちゅうごくじん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;　です&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/h1&gt;
&lt;h2 id=&#34;语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;名-は-名です&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名-は-名です&#34;&gt;#&lt;/a&gt; [名] は　[名] です&lt;/h3&gt;
&lt;p&gt;eg: 私　は　&lt;ruby&gt;王&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おう&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; です。&lt;/p&gt;
&lt;h3 id=&#34;名-は-名-ではありません&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名-は-名-ではありません&#34;&gt;#&lt;/a&gt; [名] は　[名] ではありません&lt;/h3&gt;
&lt;p&gt;“では”　口语中有时为 “じゃ”&lt;/p&gt;
&lt;h3 id=&#34;名-は-名-ですか&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名-は-名-ですか&#34;&gt;#&lt;/a&gt; [名] は　[名] ですか&lt;/h3&gt;
&lt;p&gt;x 是 x 吗？ 回答为 はい　或 いいえ&lt;br /&gt;
 - はい、そうです&lt;br /&gt;
 - いいえ、ちがいます&lt;/p&gt;
&lt;h3 id=&#34;名-の-名&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名-の-名&#34;&gt;#&lt;/a&gt; [名] の [名]&lt;/h3&gt;
&lt;p&gt;eg: 李さん　は　&lt;ruby&gt;JC&lt;rt&gt;&lt;/rt&gt; 企画&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ジェーシー企画&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　の　&lt;ruby&gt;社員&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しゃいん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　です。&lt;/p&gt;
&lt;h1 id=&#34;第二课これは-本ほんです&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第二课これは-本ほんです&#34;&gt;#&lt;/a&gt; 第二课：&lt;ruby&gt;これは　&lt;rt&gt;&lt;/rt&gt;本&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ほん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; です&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/h1&gt;
&lt;h2 id=&#34;语法-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法-2&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;これそれあれ-は-名-です&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#これそれあれ-は-名-です&#34;&gt;#&lt;/a&gt; これ / それ / あれ　は　[名] です&lt;/h3&gt;
&lt;p&gt;(1) A (说话人) 和 B (听话人) 相隔一段距离，面对面时：&lt;br /&gt;
これ：离 A 近&lt;br /&gt;
それ：离 B 近&lt;br /&gt;
あれ：离两人都远&lt;br /&gt;
 (2) A (说话人) 和 B (听话人) 在同一位置，面向同一方向时：&lt;br /&gt;
これ：离 A、B 近&lt;br /&gt;
それ：离 A、B 近&lt;br /&gt;
あれ：离两人都远&lt;/p&gt;
&lt;h3 id=&#34;だれですか何なんですか&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#だれですか何なんですか&#34;&gt;#&lt;/a&gt; だれですか /&lt;ruby&gt; 何&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; ですか&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/h3&gt;
&lt;p&gt;不知什么人用 だれ；不知什么事物用 &lt;ruby&gt;何&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;br /&gt;
 だれ 更有礼貌应该用 どなた&lt;/p&gt;
&lt;h3 id=&#34;名の-名-所属&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名の-名-所属&#34;&gt;#&lt;/a&gt; [名] の　[名]     [所属]&lt;/h3&gt;
&lt;p&gt;eg: わたし　の　かぎ。&lt;/p&gt;
&lt;h3 id=&#34;このそのあの-名は-名-です&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#このそのあの-名は-名-です&#34;&gt;#&lt;/a&gt; この / その / あの　[名] は [名]　です&lt;/h3&gt;
&lt;p&gt;eg: あの　ノートは　だれのですか。&lt;/p&gt;
&lt;h3 id=&#34;どれどの-名&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#どれどの-名&#34;&gt;#&lt;/a&gt; どれ / どの [名]&lt;/h3&gt;
&lt;p&gt;eg: &lt;ruby&gt;小野&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;おの&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; さんの　&lt;ruby&gt;机&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;つくえ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　は　どの　&lt;ruby&gt;机&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;つくえ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　ですか。&lt;/p&gt;
&lt;h2 id=&#34;表达&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;ruby&gt;方&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;br /&gt;
 この / その / あの　&lt;ruby&gt;人&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ひと&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　-&amp;gt; この / その / あの　&lt;ruby&gt;方&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かた&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;   更加礼貌&lt;/li&gt;
&lt;li&gt;询问年龄&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;ruby&gt;何歳&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なんさい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; ですか&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;/li&gt;
&lt;li&gt;おいくつですか  比较礼貌&lt;/li&gt;
&lt;li&gt;直接问小孩子时，いくつ？　&lt;ruby&gt;何歳&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なんさい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;どうぞ&lt;br /&gt;
给对方物品，劝对方进餐。&lt;/li&gt;
&lt;li&gt;どうもありがとうございます&lt;br /&gt;
表示感谢，感情很强。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第三课ここは-デパート-です&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第三课ここは-デパート-です&#34;&gt;#&lt;/a&gt; 第三课：ここは　デパート　です&lt;/h1&gt;
&lt;h2 id=&#34;语法-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法-3&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;ここそこあそこ-は-名です&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ここそこあそこ-は-名です&#34;&gt;#&lt;/a&gt; ここ / そこ / あそこ　は　[名] です&lt;/h3&gt;
&lt;p&gt;用于指示场所。&lt;/p&gt;
&lt;h3 id=&#34;名-は-名场所-です&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名-は-名场所-です&#34;&gt;#&lt;/a&gt; [名] は　[名 (场所)]　です&lt;/h3&gt;
&lt;p&gt;表示 “名词” 存在于 “名词（场所）”。&lt;br /&gt;
eg: トイレ　は　ここ　です。    厕所在这儿。&lt;/p&gt;
&lt;h3 id=&#34;名-は-どこですか&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名-は-どこですか&#34;&gt;#&lt;/a&gt; [名] は　どこですか&lt;/h3&gt;
&lt;p&gt;用于询问存在的场所。&lt;br /&gt;
eg: トイレは　どこですか？  ―あちらです。&lt;/p&gt;
&lt;h3 id=&#34;名も-名-です&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名も-名-です&#34;&gt;#&lt;/a&gt; [名] も [名]　です&lt;/h3&gt;
&lt;p&gt;x 也是 x。&lt;/p&gt;
&lt;h3 id=&#34;名は-名ですか-名ですか&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名は-名ですか-名ですか&#34;&gt;#&lt;/a&gt; [名] は [名] ですか、 [名] ですか&lt;/h3&gt;
&lt;p&gt;eg: かばん　&lt;ruby&gt;売&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;う&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; り&lt;rt&gt;&lt;/rt&gt;場&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ば&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　&lt;ruby&gt;一階&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;いっかい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　ですか、&lt;ruby&gt;二階&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;にかい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　ですか。  卖包的柜台在一层还是二层。&lt;/p&gt;
&lt;h3 id=&#34;名は-いくらですか&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名は-いくらですか&#34;&gt;#&lt;/a&gt; [名] は　いくらですか&lt;/h3&gt;
&lt;p&gt;询问价钱时，用 いくら&lt;/p&gt;
&lt;h2 id=&#34;表达-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达-2&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;こちら / そちら / あちら / どちら&lt;br /&gt;
是ここ / そこ / あそこ / どこ的礼貌说法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;あのう&lt;br /&gt;
用于向对方搭话或想引起对方注意。或者想对对方说难以启齿的事等等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第四课-部屋へや-に-机つくえと-いすが-あります&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第四课-部屋へや-に-机つくえと-いすが-あります&#34;&gt;#&lt;/a&gt; 第四课： &lt;ruby&gt;部屋&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;へや&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　に　&lt;ruby&gt;机&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;つくえ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; と　いすが　あります&lt;/h1&gt;
&lt;h2 id=&#34;语法-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法-4&#34;&gt;#&lt;/a&gt; 语法&lt;/h2&gt;
&lt;h3 id=&#34;あります和います&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#あります和います&#34;&gt;#&lt;/a&gt; あります和います&lt;/h3&gt;
&lt;p&gt;あります 用于不具有意志的事物&lt;br /&gt;
います 用于具有意志的人、动物等&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;[名 (场所)] に　[名 (物 / 人)] が　あります / います&lt;br /&gt;
表示事物存在： x 有 x   某地有某物&lt;br /&gt;
 eg: ここに　本ほん　が　あります。&lt;br /&gt;
&lt;ruby&gt;公園&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;こうえん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; に　&lt;ruby&gt;猫&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ねこ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　が　います&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[名 (物 / 人)] は [名 (场所)] に　あります / います&lt;br /&gt;
表示位置： x 在 x   某物在某地&lt;br /&gt;
 eg: いすは　&lt;ruby&gt;部屋&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;へや&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; に　あります。&lt;br /&gt;
&lt;ruby&gt;子供&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;こども&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; は　&lt;ruby&gt;公園&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;こうえん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; に　います。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;之前的 x は　どこですか　可以用 x は　どこに　ありますか / いますか　表示。&lt;/p&gt;
&lt;h3 id=&#34;名と-名-并列&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名と-名-并列&#34;&gt;#&lt;/a&gt; [名] と　[名]    [并列]&lt;/h3&gt;
&lt;p&gt;表示并列，“和”&lt;/p&gt;
&lt;h3 id=&#34;上うえ-下した-前まえ-後うしろ-隣となり-中なか-外そと&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#上うえ-下した-前まえ-後うしろ-隣となり-中なか-外そと&#34;&gt;#&lt;/a&gt; &lt;ruby&gt;上&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;うえ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　&lt;ruby&gt;下&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;した&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　&lt;ruby&gt;前&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;まえ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　&lt;ruby&gt;後&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;うし&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; ろ&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;　&lt;ruby&gt;隣&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;となり&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　&lt;ruby&gt;中&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;なか&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　&lt;ruby&gt;外&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;そと&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;/h3&gt;
&lt;p&gt;方位词&lt;/p&gt;
&lt;h3 id=&#34;ね&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ね&#34;&gt;#&lt;/a&gt; ね&lt;/h3&gt;
&lt;p&gt;当说话人征求听话人的同意时，句尾用助词 &amp;quot;ね&amp;quot;，升调&lt;/p&gt;
&lt;h3 id=&#34;疑问词-も-动否定&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#疑问词-も-动否定&#34;&gt;#&lt;/a&gt; 疑问词 も [动 (否定)]&lt;/h3&gt;
&lt;p&gt;表示全面否定。&lt;br /&gt;
{教室…… きょうしつ} に　だれも　いません。&lt;/p&gt;
&lt;h2 id=&#34;表达-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表达-3&#34;&gt;#&lt;/a&gt; 表达&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;上&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;うえ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;br /&gt;
 只表示垂直上方的范围，不能用作表示表面。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ええと&lt;br /&gt;
被别人问及某事时思考如何回答说的话。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;ご&lt;rt&gt;&lt;/rt&gt;家族&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かぞく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　&lt;ruby&gt;ご&lt;rt&gt;&lt;/rt&gt;兄弟&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;きょうだい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;　&lt;ruby&gt;ご&lt;rt&gt;&lt;/rt&gt;両親&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;りょうしん&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;br /&gt;
 说到别人亲属时的礼貌用法，指对方的家人。&lt;ruby&gt;家族&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かぞく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 指自己的家人。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;兄弟&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;きょうだい&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;&lt;br /&gt;
 指同一父母的人，也可以同父或同母，包括兄弟姐妹。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;ruby&gt;一人暮&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ひとりく&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; らし&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;&lt;br /&gt;
指离开家一个人生活。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="课程学习" scheme="https://ei4869.github.io/miyano/categories/Course-Study/" />
        <category term="日语" scheme="https://ei4869.github.io/miyano/categories/Course-Study/Japanese/" />
        <category term="课程" scheme="https://ei4869.github.io/miyano/tags/%E8%AF%BE%E7%A8%8B/" />
        <updated>2025-03-02T08:28:00.000Z</updated>
    </entry>
</feed>
